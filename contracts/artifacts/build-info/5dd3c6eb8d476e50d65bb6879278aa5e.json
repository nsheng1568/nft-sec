{
	"id": "5dd3c6eb8d476e50d65bb6879278aa5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PermittedNFTsAndTypeRegistry.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.4;\n\nimport \"./interfaces/IPermittedNFTs.sol\";\nimport \"./interfaces/INftTypeRegistry.sol\";\nimport \"./interfaces/INftfiHub.sol\";\n\nimport \"./utils/Ownable.sol\";\nimport \"./utils/ContractKeys.sol\";\n\n/**\n * @title  PermittedNFTsAndTypeRegistry\n * @author NFTfi\n * @dev Registry for NFT contracts supported by NFTfi.\n * Each NFT is associated with an NFT Type.\n */\ncontract PermittedNFTsAndTypeRegistry is Ownable, IPermittedNFTs {\n    INftfiHub public hub;\n    mapping(bytes32 => address) private nftTypes;\n\n    /**\n     * @notice A mapping from an NFT contract's address to the Token type of that contract. A zero Token Type indicates\n     * non-permitted.\n     */\n    mapping(address => bytes32) private nftPermits;\n\n    /* ****** */\n    /* EVENTS */\n    /* ****** */\n\n    /**\n     * @notice This event is fired whenever the admins register a ntf type.\n     *\n     * @param nftType - Nft type represented by keccak256('nft type').\n     * @param nftWrapper - Address of the wrapper contract.\n     */\n    event TypeUpdated(bytes32 indexed nftType, address indexed nftWrapper);\n\n    /**\n     * @notice This event is fired whenever the admin sets a NFT's permit.\n     *\n     * @param nftContract - Address of the NFT contract.\n     * @param nftType - NTF type e.g. bytes32(\"CRYPTO_KITTIES\")\n     */\n    event NFTPermit(address indexed nftContract, bytes32 indexed nftType);\n\n    /* ********* */\n    /* MODIFIERS */\n    /* ********* */\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwnerOrAirdropFactory(string memory _nftType) {\n        if (\n            ContractKeys.getIdFromStringKey(_nftType) ==\n            ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING)\n        ) {\n            require(hub.getContract(ContractKeys.AIRDROP_FACTORY) == _msgSender(), \"caller is not AirdropFactory\");\n        } else {\n            require(owner() == _msgSender(), \"caller is not owner\");\n        }\n        _;\n    }\n\n    /* *********** */\n    /* CONSTRUCTOR */\n    /* *********** */\n\n    /**\n     * @dev Sets `nftTypeRegistry`\n     * Initialize `nftPermits` with a batch of permitted NFTs\n     *\n     * @param _admin - Initial admin of this contract.\n     * @param _nftfiHub - Address of the NftfiHub contract\n     * @param _definedNftTypes - All the ossible nft types\n     * @param _definedNftWrappers - All the possible wrappers for the types\n     * @param _permittedNftContracts - The addresses of the NFT contracts.\n     * @param _permittedNftTypes - The NFT Types. e.g. \"CRYPTO_KITTIES\"\n     * - \"\" means \"disable this permit\"\n     * - != \"\" means \"enable permit with the given NFT Type\"\n     */\n    constructor(\n        address _admin,\n        address _nftfiHub,\n        string[] memory _definedNftTypes,\n        address[] memory _definedNftWrappers,\n        address[] memory _permittedNftContracts,\n        string[] memory _permittedNftTypes\n    ) Ownable(_admin) {\n        hub = INftfiHub(_nftfiHub);\n        _setNftTypes(_definedNftTypes, _definedNftWrappers);\n        _setNFTPermits(_permittedNftContracts, _permittedNftTypes);\n    }\n\n    /* ********* */\n    /* FUNCTIONS */\n    /* ********* */\n\n    /**\n     * @notice This function can be called by admins to change the permitted list status of an NFT contract. This\n     * includes both adding an NFT contract to the permitted list and removing it.\n     * `_nftContract` can not be zero address.\n     *\n     * @param _nftContract - The address of the NFT contract.\n     * @param _nftType - The NFT Type. e.g. \"CRYPTO_KITTIES\"\n     * - \"\" means \"disable this permit\"\n     * - != \"\" means \"enable permit with the given NFT Type\"\n     */\n    function setNFTPermit(address _nftContract, string memory _nftType)\n        external\n        override\n        onlyOwnerOrAirdropFactory(_nftType)\n    {\n        _setNFTPermit(_nftContract, _nftType);\n    }\n\n    /**\n     * @notice This function can be called by admins to change the permitted list status of a batch NFT contracts. This\n     * includes both adding an NFT contract to the permitted list and removing it.\n     * `_nftContract` can not be zero address.\n     *\n     * @param _nftContracts - The addresses of the NFT contracts.\n     * @param _nftTypes - The NFT Types. e.g. \"CRYPTO_KITTIES\"\n     * - \"\" means \"disable this permit\"\n     * - != \"\" means \"enable permit with the given NFT Type\"\n     */\n    function setNFTPermits(address[] memory _nftContracts, string[] memory _nftTypes) external onlyOwner {\n        _setNFTPermits(_nftContracts, _nftTypes);\n    }\n\n    /**\n     * @notice This function can be called by anyone to lookup the Nft Type associated with the contract.\n     * @param  _nftContract - The address of the NFT contract.\n     * @notice Returns the NFT Type:\n     * - bytes32(\"\") means \"not permitted\"\n     * - != bytes32(\"\") means \"permitted with the given NFT Type\"\n     */\n    function getNFTPermit(address _nftContract) external view override returns (bytes32) {\n        return nftPermits[_nftContract];\n    }\n\n    /**\n     * @notice This function can be called by anyone to lookup the address of the NftWrapper associated to the\n     * `_nftContract` type.\n     * @param _nftContract - The address of the NFT contract.\n     */\n    function getNFTWrapper(address _nftContract) external view override returns (address) {\n        bytes32 nftType = nftPermits[_nftContract];\n        return getNftTypeWrapper(nftType);\n    }\n\n    /**\n     * @notice Set or update the wrapper contract address for the given NFT Type.\n     * Set address(0) for a nft type for un-register such type.\n     *\n     * @param _nftType - The nft type, e.g. \"ERC721\", or \"ERC1155\".\n     * @param _nftWrapper - The address of the wrapper contract that implements INftWrapper behaviour for dealing with\n     * NFTs.\n     */\n    function setNftType(string memory _nftType, address _nftWrapper) external onlyOwner {\n        _setNftType(_nftType, _nftWrapper);\n    }\n\n    /**\n     * @notice Batch set or update the wrappers contract address for the given batch of NFT Types.\n     * Set address(0) for a nft type for un-register such type.\n     *\n     * @param _nftTypes - The nft types, e.g. \"ERC721\", or \"ERC1155\".\n     * @param _nftWrappers - The addresses of the wrapper contract that implements INftWrapper behaviour for dealing\n     * with NFTs.\n     */\n    function setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) external onlyOwner {\n        _setNftTypes(_nftTypes, _nftWrappers);\n    }\n\n    /**\n     * @notice This function can be called by anyone to get the contract address that implements the given nft type.\n     *\n     * @param  _nftType - The nft type, e.g. bytes32(\"ERC721\"), or bytes32(\"ERC1155\").\n     */\n    function getNftTypeWrapper(bytes32 _nftType) public view returns (address) {\n        return nftTypes[_nftType];\n    }\n\n    /**\n     * @notice Set or update the wrapper contract address for the given NFT Type.\n     * Set address(0) for a nft type for un-register such type.\n     *\n     * @param _nftType - The nft type, e.g. \"ERC721\", or \"ERC1155\".\n     * @param _nftWrapper - The address of the wrapper contract that implements INftWrapper behaviour for dealing with\n     * NFTs.\n     */\n    function _setNftType(string memory _nftType, address _nftWrapper) internal {\n        require(bytes(_nftType).length != 0, \"nftType is empty\");\n        bytes32 nftTypeKey = ContractKeys.getIdFromStringKey(_nftType);\n\n        nftTypes[nftTypeKey] = _nftWrapper;\n\n        emit TypeUpdated(nftTypeKey, _nftWrapper);\n    }\n\n    /**\n     * @notice Batch set or update the wrappers contract address for the given batch of NFT Types.\n     * Set address(0) for a nft type for un-register such type.\n     *\n     * @param _nftTypes - The nft types, e.g. keccak256(\"ERC721\"), or keccak256(\"ERC1155\").\n     * @param _nftWrappers - The addresses of the wrapper contract that implements INftWrapper behaviour for dealing\n     * with NFTs.\n     */\n    function _setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) internal {\n        require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\");\n\n        for (uint256 i = 0; i < _nftWrappers.length; i++) {\n            _setNftType(_nftTypes[i], _nftWrappers[i]);\n        }\n    }\n\n    /**\n     * @notice This function changes the permitted list status of an NFT contract. This includes both adding an NFT\n     * contract to the permitted list and removing it.\n     * @param _nftContract - The address of the NFT contract.\n     * @param _nftType - The NFT Type. e.g. bytes32(\"CRYPTO_KITTIES\")\n     * - bytes32(\"\") means \"disable this permit\"\n     * - != bytes32(\"\") means \"enable permit with the given NFT Type\"\n     */\n    function _setNFTPermit(address _nftContract, string memory _nftType) internal {\n        require(_nftContract != address(0), \"nftContract is zero address\");\n        bytes32 nftTypeKey = ContractKeys.getIdFromStringKey(_nftType);\n\n        if (nftTypeKey != 0) {\n            require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\");\n        }\n\n        require(\n            nftPermits[_nftContract] != ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING),\n            \"AirdropWrapper can't be modified\"\n        );\n        nftPermits[_nftContract] = nftTypeKey;\n        emit NFTPermit(_nftContract, nftTypeKey);\n    }\n\n    /**\n     * @notice This function changes the permitted list status of a batch NFT contracts. This includes both adding an\n     * NFT contract to the permitted list and removing it.\n     * @param _nftContracts - The addresses of the NFT contracts.\n     * @param _nftTypes - The NFT Types. e.g. \"CRYPTO_KITTIES\"\n     * - \"\" means \"disable this permit\"\n     * - != \"\" means \"enable permit with the given NFT Type\"\n     */\n    function _setNFTPermits(address[] memory _nftContracts, string[] memory _nftTypes) internal {\n        require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\");\n\n        for (uint256 i = 0; i < _nftContracts.length; i++) {\n            _setNFTPermit(_nftContracts[i], _nftTypes[i]);\n        }\n    }\n}"
			},
			"contracts/utils/ContractKeys.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.4;\n\n/**\n * @title ContractKeys\n * @author NFTfi\n * @dev Common library for contract keys\n */\nlibrary ContractKeys {\n    bytes32 internal constant PERMITTED_ERC20S = bytes32(\"PERMITTED_ERC20S\");\n    bytes32 internal constant PERMITTED_NFTS = bytes32(\"PERMITTED_NFTS\");\n    bytes32 internal constant PERMITTED_PARTNERS = bytes32(\"PERMITTED_PARTNERS\");\n    bytes32 internal constant NFT_TYPE_REGISTRY = bytes32(\"NFT_TYPE_REGISTRY\");\n    bytes32 internal constant LOAN_REGISTRY = bytes32(\"LOAN_REGISTRY\");\n    bytes32 internal constant PERMITTED_SNFT_RECEIVER = bytes32(\"PERMITTED_SNFT_RECEIVER\");\n    bytes32 internal constant PERMITTED_BUNDLE_ERC20S = bytes32(\"PERMITTED_BUNDLE_ERC20S\");\n    bytes32 internal constant PERMITTED_AIRDROPS = bytes32(\"PERMITTED_AIRDROPS\");\n    bytes32 internal constant AIRDROP_RECEIVER = bytes32(\"AIRDROP_RECEIVER\");\n    bytes32 internal constant AIRDROP_FACTORY = bytes32(\"AIRDROP_FACTORY\");\n    bytes32 internal constant AIRDROP_FLASH_LOAN = bytes32(\"AIRDROP_FLASH_LOAN\");\n    bytes32 internal constant NFTFI_BUNDLER = bytes32(\"NFTFI_BUNDLER\");\n\n    string internal constant AIRDROP_WRAPPER_STRING = \"AirdropWrapper\";\n\n    /**\n     * @notice Returns the bytes32 representation of a string\n     * @param _key the string key\n     * @return id bytes32 representation\n     */\n    function getIdFromStringKey(string memory _key) internal pure returns (bytes32 id) {\n        require(bytes(_key).length <= 32, \"invalid key\");\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            id := mload(add(_key, 32))\n        }\n    }\n}"
			},
			"contracts/utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.4;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n *\n * Modified version from openzeppelin/contracts/access/Ownable.sol that allows to\n * initialize the owner using a parameter in the constructor\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor(address _initialOwner) {\n        _setOwner(_initialOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address _newOwner) public virtual onlyOwner {\n        require(_newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(_newOwner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Sets the owner.\n     */\n    function _setOwner(address _newOwner) private {\n        address oldOwner = _owner;\n        _owner = _newOwner;\n        emit OwnershipTransferred(oldOwner, _newOwner);\n    }\n}"
			},
			"contracts/interfaces/INftfiHub.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.4;\n\n/**\n * @title INftfiHub\n * @author NFTfi\n * @dev NftfiHub interface\n */\ninterface INftfiHub {\n    function setContract(string calldata _contractKey, address _contractAddress) external;\n\n    function getContract(bytes32 _contractKey) external view returns (address);\n}"
			},
			"contracts/interfaces/INftTypeRegistry.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.4;\n\n/**\n * @title INftTypeRegistry\n * @author NFTfi\n * @dev Interface for NFT Types Registry supported by NFTfi.\n */\ninterface INftTypeRegistry {\n    function setNftType(bytes32 _nftType, address _nftWrapper) external;\n\n    function getNftTypeWrapper(bytes32 _nftType) external view returns (address);\n}"
			},
			"contracts/interfaces/IPermittedNFTs.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.4;\n\ninterface IPermittedNFTs {\n    function setNFTPermit(address _nftContract, string memory _nftType) external;\n\n    function getNFTPermit(address _nftContract) external view returns (bytes32);\n\n    function getNFTWrapper(address _nftContract) external view returns (address);\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PermittedNFTsAndTypeRegistry.sol": {
				"PermittedNFTsAndTypeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nftfiHub",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "_definedNftTypes",
									"type": "string[]"
								},
								{
									"internalType": "address[]",
									"name": "_definedNftWrappers",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_permittedNftContracts",
									"type": "address[]"
								},
								{
									"internalType": "string[]",
									"name": "_permittedNftTypes",
									"type": "string[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "nftType",
									"type": "bytes32"
								}
							],
							"name": "NFTPermit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "nftType",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftWrapper",
									"type": "address"
								}
							],
							"name": "TypeUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								}
							],
							"name": "getNFTPermit",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								}
							],
							"name": "getNFTWrapper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_nftType",
									"type": "bytes32"
								}
							],
							"name": "getNftTypeWrapper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hub",
							"outputs": [
								{
									"internalType": "contract INftfiHub",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_nftType",
									"type": "string"
								}
							],
							"name": "setNFTPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_nftContracts",
									"type": "address[]"
								},
								{
									"internalType": "string[]",
									"name": "_nftTypes",
									"type": "string[]"
								}
							],
							"name": "setNFTPermits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nftType",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_nftWrapper",
									"type": "address"
								}
							],
							"name": "setNftType",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "_nftTypes",
									"type": "string[]"
								},
								{
									"internalType": "address[]",
									"name": "_nftWrappers",
									"type": "address[]"
								}
							],
							"name": "setNftTypes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "NFTfi",
						"details": "Registry for NFT contracts supported by NFTfi. Each NFT is associated with an NFT Type.",
						"events": {
							"NFTPermit(address,bytes32)": {
								"params": {
									"nftContract": "- Address of the NFT contract.",
									"nftType": "- NTF type e.g. bytes32(\"CRYPTO_KITTIES\")"
								}
							},
							"TypeUpdated(bytes32,address)": {
								"params": {
									"nftType": "- Nft type represented by keccak256('nft type').",
									"nftWrapper": "- Address of the wrapper contract."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets `nftTypeRegistry` Initialize `nftPermits` with a batch of permitted NFTs",
								"params": {
									"_admin": "- Initial admin of this contract.",
									"_definedNftTypes": "- All the ossible nft types",
									"_definedNftWrappers": "- All the possible wrappers for the types",
									"_nftfiHub": "- Address of the NftfiHub contract",
									"_permittedNftContracts": "- The addresses of the NFT contracts.",
									"_permittedNftTypes": "- The NFT Types. e.g. \"CRYPTO_KITTIES\" - \"\" means \"disable this permit\" - != \"\" means \"enable permit with the given NFT Type\""
								}
							},
							"getNFTPermit(address)": {
								"params": {
									"_nftContract": "- The address of the NFT contract."
								}
							},
							"getNFTWrapper(address)": {
								"params": {
									"_nftContract": "- The address of the NFT contract."
								}
							},
							"getNftTypeWrapper(bytes32)": {
								"params": {
									"_nftType": "- The nft type, e.g. bytes32(\"ERC721\"), or bytes32(\"ERC1155\")."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"setNFTPermit(address,string)": {
								"params": {
									"_nftContract": "- The address of the NFT contract.",
									"_nftType": "- The NFT Type. e.g. \"CRYPTO_KITTIES\" - \"\" means \"disable this permit\" - != \"\" means \"enable permit with the given NFT Type\""
								}
							},
							"setNFTPermits(address[],string[])": {
								"params": {
									"_nftContracts": "- The addresses of the NFT contracts.",
									"_nftTypes": "- The NFT Types. e.g. \"CRYPTO_KITTIES\" - \"\" means \"disable this permit\" - != \"\" means \"enable permit with the given NFT Type\""
								}
							},
							"setNftType(string,address)": {
								"params": {
									"_nftType": "- The nft type, e.g. \"ERC721\", or \"ERC1155\".",
									"_nftWrapper": "- The address of the wrapper contract that implements INftWrapper behaviour for dealing with NFTs."
								}
							},
							"setNftTypes(string[],address[])": {
								"params": {
									"_nftTypes": "- The nft types, e.g. \"ERC721\", or \"ERC1155\".",
									"_nftWrappers": "- The addresses of the wrapper contract that implements INftWrapper behaviour for dealing with NFTs."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "PermittedNFTsAndTypeRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":416:10182  contract PermittedNFTsAndTypeRegistry is Ownable, IPermittedNFTs {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":2714:3152  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":2972:2978  _admin */\n  dup6\n    /* \"contracts/utils/Ownable.sol\":1264:1288  _setOwner(_initialOwner) */\n  tag_7\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":2972:2978  _admin */\n  dup2\n    /* \"contracts/utils/Ownable.sol\":1264:1273  _setOwner */\n  tag_8\n    /* \"contracts/utils/Ownable.sol\":1264:1288  _setOwner(_initialOwner) */\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":2990:2993  hub */\n  0x01\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":2990:3016  hub = INftfiHub(_nftfiHub) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3026:3077  _setNftTypes(_definedNftTypes, _definedNftWrappers) */\n  tag_10\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3039:3055  _definedNftTypes */\n  dup5\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3057:3076  _definedNftWrappers */\n  dup5\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3026:3038  _setNftTypes */\n  tag_11\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3026:3077  _setNftTypes(_definedNftTypes, _definedNftWrappers) */\n  jump\t// in\ntag_10:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3087:3145  _setNFTPermits(_permittedNftContracts, _permittedNftTypes) */\n  tag_12\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3102:3124  _permittedNftContracts */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3126:3144  _permittedNftTypes */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3087:3101  _setNFTPermits */\n  tag_13\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3087:3145  _setNFTPermits(_permittedNftContracts, _permittedNftTypes) */\n  jump\t// in\ntag_12:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":2714:3152  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":416:10182  contract PermittedNFTsAndTypeRegistry is Ownable, IPermittedNFTs {... */\n  jump(tag_67)\n    /* \"contracts/utils/Ownable.sol\":1847:2019  function _setOwner(address _newOwner) private {... */\ntag_8:\n    /* \"contracts/utils/Ownable.sol\":1903:1919  address oldOwner */\n  0x00\n    /* \"contracts/utils/Ownable.sol\":1922:1928  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/utils/Ownable.sol\":1938:1956  _owner = _newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/utils/Ownable.sol\":1971:2012  OwnershipTransferred(oldOwner, _newOwner) */\n  mload(0x40)\n    /* \"contracts/utils/Ownable.sol\":1922:1928  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/utils/Ownable.sol\":1971:2012  OwnershipTransferred(oldOwner, _newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/utils/Ownable.sol\":1903:1919  address oldOwner */\n  swap1\n    /* \"contracts/utils/Ownable.sol\":1971:2012  OwnershipTransferred(oldOwner, _newOwner) */\n  log3\n    /* \"contracts/utils/Ownable.sol\":1847:2019  function _setOwner(address _newOwner) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7982:8314  function _setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) internal {... */\ntag_11:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8109:8121  _nftWrappers */\n  dup1\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8109:8128  _nftWrappers.length */\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8089:8098  _nftTypes */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8089:8105  _nftTypes.length */\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8089:8128  _nftTypes.length == _nftWrappers.length */\n  eq\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8081:8180  require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4367:4369   */\n  0x20\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8081:8180  require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4349:4370   */\n  mstore\n    /* \"#utility.yul\":4406:4408   */\n  0x2f\n    /* \"#utility.yul\":4386:4404   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4379:4409   */\n  mstore\n    /* \"#utility.yul\":4445:4479   */\n  0x7365744e667454797065732066756e6374696f6e20696e666f726d6174696f6e\n    /* \"#utility.yul\":4425:4443   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4418:4480   */\n  mstore\n  shl(0x8b, 0x040c2e4d2e8f240dad2e6dac2e8c6d)\n    /* \"#utility.yul\":4496:4514   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":4489:4534   */\n  mstore\n    /* \"#utility.yul\":4551:4570   */\n  0x84\n  add\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8081:8180  require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\") */\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8196:8205  uint256 i */\n  0x00\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8191:8308  for (uint256 i = 0; i < _nftWrappers.length; i++) {... */\ntag_20:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8215:8227  _nftWrappers */\n  dup2\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8215:8234  _nftWrappers.length */\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8211:8212  i */\n  dup2\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8211:8234  i < _nftWrappers.length */\n  lt\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8191:8308  for (uint256 i = 0; i < _nftWrappers.length; i++) {... */\n  iszero\n  tag_21\n  jumpi\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8255:8297  _setNftType(_nftTypes[i], _nftWrappers[i]) */\n  tag_23\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8267:8276  _nftTypes */\n  dup4\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8277:8278  i */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8267:8279  _nftTypes[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_24\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_24:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8281:8293  _nftWrappers */\n  dup4\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8294:8295  i */\n  dup4\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8281:8296  _nftWrappers[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_25\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_25:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8255:8266  _setNftType */\n  shl(0x20, tag_26)\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8255:8297  _setNftType(_nftTypes[i], _nftWrappers[i]) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8236:8239  i++ */\n  dup1\n  tag_27\n  dup2\n  tag_28\n  jump\t// in\ntag_27:\n  swap2\n  pop\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8191:8308  for (uint256 i = 0; i < _nftWrappers.length; i++) {... */\n  jump(tag_20)\ntag_21:\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7982:8314  function _setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9838:10180  function _setNFTPermits(address[] memory _nftContracts, string[] memory _nftTypes) internal {... */\ntag_13:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9972:9981  _nftTypes */\n  dup1\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9972:9988  _nftTypes.length */\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9948:9961  _nftContracts */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9948:9968  _nftContracts.length */\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9948:9988  _nftContracts.length == _nftTypes.length */\n  eq\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5841:5843   */\n  0x20\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5823:5844   */\n  mstore\n    /* \"#utility.yul\":5880:5882   */\n  0x31\n    /* \"#utility.yul\":5860:5878   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5853:5883   */\n  mstore\n    /* \"#utility.yul\":5919:5953   */\n  0x7365744e46545065726d6974732066756e6374696f6e20696e666f726d617469\n    /* \"#utility.yul\":5899:5917   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5892:5954   */\n  mstore\n  shl(0x7b, 0x0dedc40c2e4d2e8f240dad2e6dac2e8c6d)\n    /* \"#utility.yul\":5970:5988   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":5963:6010   */\n  mstore\n    /* \"#utility.yul\":6027:6046   */\n  0x84\n  add\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\n  tag_18\n    /* \"#utility.yul\":5813:6052   */\n  jump\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\ntag_30:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10058:10067  uint256 i */\n  0x00\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10053:10174  for (uint256 i = 0; i < _nftContracts.length; i++) {... */\ntag_33:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10077:10090  _nftContracts */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10077:10097  _nftContracts.length */\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10073:10074  i */\n  dup2\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10073:10097  i < _nftContracts.length */\n  lt\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10053:10174  for (uint256 i = 0; i < _nftContracts.length; i++) {... */\n  iszero\n  tag_21\n  jumpi\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10118:10163  _setNFTPermit(_nftContracts[i], _nftTypes[i]) */\n  tag_36\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10132:10145  _nftContracts */\n  dup4\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10146:10147  i */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10132:10148  _nftContracts[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_37\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_37:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10150:10159  _nftTypes */\n  dup4\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10160:10161  i */\n  dup4\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10150:10162  _nftTypes[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_38\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_38:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10118:10131  _setNFTPermit */\n  shl(0x20, tag_39)\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10118:10163  _setNFTPermit(_nftContracts[i], _nftTypes[i]) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10099:10102  i++ */\n  dup1\n  tag_40\n  dup2\n  tag_28\n  jump\t// in\ntag_40:\n  swap2\n  pop\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10053:10174  for (uint256 i = 0; i < _nftContracts.length; i++) {... */\n  jump(tag_33)\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7246:7563  function _setNftType(string memory _nftType, address _nftWrapper) internal {... */\ntag_26:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7339:7361  bytes(_nftType).length */\n  dup2\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\n  tag_42\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5144:5146   */\n  0x20\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5126:5147   */\n  mstore\n    /* \"#utility.yul\":5183:5185   */\n  0x10\n    /* \"#utility.yul\":5163:5181   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5156:5186   */\n  mstore\n  shl(0x80, 0x6e66745479706520697320656d707479)\n    /* \"#utility.yul\":5202:5220   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5195:5241   */\n  mstore\n    /* \"#utility.yul\":5258:5276   */\n  0x64\n  add\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\n  tag_18\n    /* \"#utility.yul\":5116:5282   */\n  jump\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\ntag_42:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7397:7415  bytes32 nftTypeKey */\n  0x00\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7418:7459  ContractKeys.getIdFromStringKey(_nftType) */\n  tag_45\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7450:7458  _nftType */\n  dup4\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7418:7449  ContractKeys.getIdFromStringKey */\n  or(tag_0_56, shl(0x20, tag_46))\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7418:7459  ContractKeys.getIdFromStringKey(_nftType) */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7478  nftTypes */\n  0x02\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7504  nftTypes[nftTypeKey] = _nftWrapper */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup8\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7520:7556  TypeUpdated(nftTypeKey, _nftWrapper) */\n  swap1\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n  swap3\n  swap4\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7504  nftTypes[nftTypeKey] = _nftWrapper */\n  swap2\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n  dup4\n  swap2\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7520:7556  TypeUpdated(nftTypeKey, _nftWrapper) */\n  0x22be69269c1f7d73e73dcb25b710dd88c7aa1cf374c16d945def98df2107c2f8\n  swap2\n  log3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7246:7563  function _setNftType(string memory _nftType, address _nftWrapper) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8758:9409  function _setNFTPermit(address _nftContract, string memory _nftType) internal {... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8854:8880  _nftContract != address(0) */\n  dup3\n  and\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\n  tag_48\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4011:4013   */\n  0x20\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3993:4014   */\n  mstore\n    /* \"#utility.yul\":4050:4052   */\n  0x1b\n    /* \"#utility.yul\":4030:4048   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4023:4053   */\n  mstore\n    /* \"#utility.yul\":4089:4118   */\n  0x6e6674436f6e7472616374206973207a65726f20616464726573730000000000\n    /* \"#utility.yul\":4069:4087   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4062:4119   */\n  mstore\n    /* \"#utility.yul\":4136:4154   */\n  0x64\n  add\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\n  tag_18\n    /* \"#utility.yul\":3983:4160   */\n  jump\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\ntag_48:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8922:8940  bytes32 nftTypeKey */\n  0x00\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8943:8984  ContractKeys.getIdFromStringKey(_nftType) */\n  tag_51\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8975:8983  _nftType */\n  dup3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8943:8974  ContractKeys.getIdFromStringKey */\n  or(tag_0_56, shl(0x20, tag_46))\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8943:8984  ContractKeys.getIdFromStringKey(_nftType) */\n  0x20\n  shr\n  jump\t// in\ntag_51:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8922:8984  bytes32 nftTypeKey = ContractKeys.getIdFromStringKey(_nftType) */\n  swap1\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8999:9014  nftTypeKey != 0 */\n  dup1\n  iszero\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8995:9120  if (nftTypeKey != 0) {... */\n  tag_55\n  jumpi\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9079:9080  0 */\n  0x00\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6846:6864  nftTypes[_nftType] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6846:6854  nftTypes */\n  0x02\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6846:6864  nftTypes[_nftType] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\n  tag_55\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5471:5492   */\n  mstore\n    /* \"#utility.yul\":5528:5530   */\n  0x17\n    /* \"#utility.yul\":5508:5526   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5501:5531   */\n  mstore\n    /* \"#utility.yul\":5567:5592   */\n  0x4e46542074797065206e6f742072656769737465726564000000000000000000\n    /* \"#utility.yul\":5547:5565   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5540:5593   */\n  mstore\n    /* \"#utility.yul\":5610:5628   */\n  0x64\n  add\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\n  tag_18\n    /* \"#utility.yul\":5461:5634   */\n  jump\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\ntag_55:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9179:9247  ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n  tag_58\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9211:9246  ContractKeys.AIRDROP_WRAPPER_STRING */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x91, 0x20b4b9323937b82bb930b83832b9)\n  dup2\n  mstore\n  pop\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9179:9210  ContractKeys.getIdFromStringKey */\n  or(tag_0_56, shl(0x20, tag_46))\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9179:9247  ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n  0x20\n  shr\n  jump\t// in\ntag_58:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9175  nftPermits[_nftContract] */\n  dup5\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9161  nftPermits */\n  0x03\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9175  nftPermits[_nftContract] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9247  nftPermits[_nftContract] != ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n  eq\n  iszero\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\n  tag_59\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4783:4785   */\n  0x20\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4765:4786   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":4802:4820   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4795:4825   */\n  mstore\n    /* \"#utility.yul\":4861:4895   */\n  0x41697264726f70577261707065722063616e2774206265206d6f646966696564\n    /* \"#utility.yul\":4841:4859   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4834:4896   */\n  mstore\n    /* \"#utility.yul\":4913:4931   */\n  0x64\n  add\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\n  tag_18\n    /* \"#utility.yul\":4755:4937   */\n  jump\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\ntag_59:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9339  nftPermits[_nftContract] */\n  dup4\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9325  nftPermits */\n  0x03\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9339  nftPermits[_nftContract] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9352  nftPermits[_nftContract] = nftTypeKey */\n  dup5\n  swap1\n  sstore\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9367:9402  NFTPermit(_nftContract, nftTypeKey) */\n  mload\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9342:9352  nftTypeKey */\n  dup4\n  swap3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9339  nftPermits[_nftContract] */\n  swap2\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9367:9402  NFTPermit(_nftContract, nftTypeKey) */\n  0x903a211c8bcdc0ab18afc116fc4776504a9aac5c0121be0fda712d399017bd22\n  swap2\n  log3\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8758:9409  function _setNFTPermit(address _nftContract, string memory _nftType) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/utils/ContractKeys.sol\":1365:1638  function getIdFromStringKey(string memory _key) internal pure returns (bytes32 id) {... */\ntag_46:\n    /* \"contracts/utils/ContractKeys.sol\":1436:1446  bytes32 id */\n  0x00\n    /* \"contracts/utils/ContractKeys.sol\":1488:1490  32 */\n  0x20\n    /* \"contracts/utils/ContractKeys.sol\":1472:1476  _key */\n  dup3\n    /* \"contracts/utils/ContractKeys.sol\":1466:1484  bytes(_key).length */\n  mload\n    /* \"contracts/utils/ContractKeys.sol\":1466:1490  bytes(_key).length <= 32 */\n  gt\n  iszero\n    /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\n  tag_63\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6259:6261   */\n  0x20\n    /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6241:6262   */\n  mstore\n    /* \"#utility.yul\":6298:6300   */\n  0x0b\n    /* \"#utility.yul\":6278:6296   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6271:6301   */\n  mstore\n  shl(0xa8, 0x696e76616c6964206b6579)\n    /* \"#utility.yul\":6317:6335   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6310:6351   */\n  mstore\n    /* \"#utility.yul\":6368:6386   */\n  0x64\n  add\n    /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\n  tag_18\n    /* \"#utility.yul\":6231:6392   */\n  jump\n    /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\ntag_63:\n  pop\n    /* \"contracts/utils/ContractKeys.sol\":1618:1620  32 */\n  0x20\n    /* \"contracts/utils/ContractKeys.sol\":1608:1621  add(_key, 32) */\n  add\n    /* \"contracts/utils/ContractKeys.sol\":1602:1622  mload(add(_key, 32)) */\n  mload\n  swap1\n    /* \"contracts/utils/ContractKeys.sol\":1582:1632  {... */\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_68:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_70:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:910   */\ntag_71:\n    /* \"#utility.yul\":261:266   */\n  0x00\n    /* \"#utility.yul\":314:317   */\n  dup3\n    /* \"#utility.yul\":307:311   */\n  0x1f\n    /* \"#utility.yul\":299:305   */\n  dup4\n    /* \"#utility.yul\":295:312   */\n  add\n    /* \"#utility.yul\":291:318   */\n  slt\n    /* \"#utility.yul\":281:283   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":336:341   */\n  dup1\n    /* \"#utility.yul\":329:334   */\n  dup2\n    /* \"#utility.yul\":322:342   */\n  revert\n    /* \"#utility.yul\":281:283   */\ntag_73:\n    /* \"#utility.yul\":369:375   */\n  dup2\n    /* \"#utility.yul\":363:376   */\n  mload\n    /* \"#utility.yul\":395:399   */\n  0x20\n    /* \"#utility.yul\":419:479   */\n  tag_74\n    /* \"#utility.yul\":435:478   */\n  tag_75\n    /* \"#utility.yul\":475:477   */\n  dup4\n    /* \"#utility.yul\":435:478   */\n  tag_76\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":419:479   */\n  tag_77\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":501:504   */\n  dup1\n    /* \"#utility.yul\":525:527   */\n  dup4\n    /* \"#utility.yul\":520:523   */\n  dup3\n    /* \"#utility.yul\":513:528   */\n  mstore\n    /* \"#utility.yul\":553:555   */\n  dup3\n    /* \"#utility.yul\":548:551   */\n  dup3\n    /* \"#utility.yul\":544:556   */\n  add\n    /* \"#utility.yul\":537:556   */\n  swap2\n  pop\n    /* \"#utility.yul\":588:590   */\n  dup3\n    /* \"#utility.yul\":580:586   */\n  dup7\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":640:643   */\n  dup8\n    /* \"#utility.yul\":635:637   */\n  dup5\n    /* \"#utility.yul\":629:631   */\n  dup7\n    /* \"#utility.yul\":626:627   */\n  0x05\n    /* \"#utility.yul\":622:632   */\n  shl\n    /* \"#utility.yul\":614:620   */\n  dup10\n    /* \"#utility.yul\":610:633   */\n  add\n    /* \"#utility.yul\":606:638   */\n  add\n    /* \"#utility.yul\":603:644   */\n  gt\n    /* \"#utility.yul\":600:602   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":661:666   */\n  dup6\n    /* \"#utility.yul\":654:659   */\n  dup7\n    /* \"#utility.yul\":647:667   */\n  revert\n    /* \"#utility.yul\":600:602   */\ntag_78:\n    /* \"#utility.yul\":687:692   */\n  dup6\n    /* \"#utility.yul\":701:881   */\ntag_79:\n    /* \"#utility.yul\":715:717   */\n  dup6\n    /* \"#utility.yul\":712:713   */\n  dup2\n    /* \"#utility.yul\":709:718   */\n  lt\n    /* \"#utility.yul\":701:881   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":772:806   */\n  tag_82\n    /* \"#utility.yul\":802:805   */\n  dup3\n    /* \"#utility.yul\":772:806   */\n  tag_68\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":760:807   */\n  dup5\n  mstore\n    /* \"#utility.yul\":827:839   */\n  swap3\n  dup5\n  add\n  swap3\n    /* \"#utility.yul\":859:871   */\n  swap1\n  dup5\n  add\n  swap1\n    /* \"#utility.yul\":733:734   */\n  0x01\n    /* \"#utility.yul\":726:735   */\n  add\n    /* \"#utility.yul\":701:881   */\n  jump(tag_79)\ntag_81:\n  pop\n    /* \"#utility.yul\":899:904   */\n  swap1\n  swap8\n    /* \"#utility.yul\":271:910   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":915:2484   */\ntag_83:\n    /* \"#utility.yul\":979:984   */\n  0x00\n    /* \"#utility.yul\":1009:1013   */\n  0x1f\n    /* \"#utility.yul\":1053:1056   */\n  dup4\n    /* \"#utility.yul\":1048:1050   */\n  dup2\n    /* \"#utility.yul\":1040:1046   */\n  dup5\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1057   */\n  slt\n    /* \"#utility.yul\":1022:1024   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1075:1080   */\n  dup2\n    /* \"#utility.yul\":1068:1073   */\n  dup3\n    /* \"#utility.yul\":1061:1081   */\n  revert\n    /* \"#utility.yul\":1022:1024   */\ntag_85:\n    /* \"#utility.yul\":1108:1114   */\n  dup3\n    /* \"#utility.yul\":1102:1115   */\n  mload\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1158:1218   */\n  tag_86\n    /* \"#utility.yul\":1174:1217   */\n  tag_75\n    /* \"#utility.yul\":1214:1216   */\n  dup4\n    /* \"#utility.yul\":1174:1217   */\n  tag_76\n  jump\t// in\n    /* \"#utility.yul\":1158:1218   */\ntag_86:\n    /* \"#utility.yul\":1240:1243   */\n  dup1\n    /* \"#utility.yul\":1264:1266   */\n  dup4\n    /* \"#utility.yul\":1259:1262   */\n  dup3\n    /* \"#utility.yul\":1252:1267   */\n  mstore\n    /* \"#utility.yul\":1292:1294   */\n  dup3\n    /* \"#utility.yul\":1287:1290   */\n  dup3\n    /* \"#utility.yul\":1283:1295   */\n  add\n    /* \"#utility.yul\":1276:1295   */\n  swap2\n  pop\n    /* \"#utility.yul\":1327:1329   */\n  dup3\n    /* \"#utility.yul\":1319:1325   */\n  dup8\n    /* \"#utility.yul\":1315:1330   */\n  add\n    /* \"#utility.yul\":1379:1382   */\n  dup9\n    /* \"#utility.yul\":1374:1376   */\n  dup5\n    /* \"#utility.yul\":1368:1370   */\n  dup7\n    /* \"#utility.yul\":1365:1366   */\n  0x05\n    /* \"#utility.yul\":1361:1371   */\n  shl\n    /* \"#utility.yul\":1353:1359   */\n  dup11\n    /* \"#utility.yul\":1349:1372   */\n  add\n    /* \"#utility.yul\":1345:1377   */\n  add\n    /* \"#utility.yul\":1342:1383   */\n  gt\n    /* \"#utility.yul\":1339:1341   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1400:1405   */\n  dup7\n    /* \"#utility.yul\":1393:1398   */\n  dup8\n    /* \"#utility.yul\":1386:1406   */\n  revert\n    /* \"#utility.yul\":1339:1341   */\ntag_88:\n    /* \"#utility.yul\":1426:1431   */\n  dup7\n    /* \"#utility.yul\":1440:2455   */\ntag_89:\n    /* \"#utility.yul\":1454:1456   */\n  dup6\n    /* \"#utility.yul\":1451:1452   */\n  dup2\n    /* \"#utility.yul\":1448:1457   */\n  lt\n    /* \"#utility.yul\":1440:2455   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1518:1528   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1585:1604   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1582:1584   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1621:1626   */\n  dup10\n    /* \"#utility.yul\":1614:1619   */\n  dup11\n    /* \"#utility.yul\":1607:1627   */\n  revert\n    /* \"#utility.yul\":1582:1584   */\ntag_92:\n    /* \"#utility.yul\":1664:1675   */\n  dup2\n    /* \"#utility.yul\":1656:1662   */\n  dup12\n    /* \"#utility.yul\":1652:1676   */\n  add\n    /* \"#utility.yul\":1642:1676   */\n  swap2\n  pop\n    /* \"#utility.yul\":1716:1719   */\n  dup12\n    /* \"#utility.yul\":1711:1713   */\n  0x3f\n    /* \"#utility.yul\":1707:1709   */\n  dup4\n    /* \"#utility.yul\":1703:1714   */\n  add\n    /* \"#utility.yul\":1699:1720   */\n  slt\n    /* \"#utility.yul\":1689:1691   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1738:1743   */\n  dup10\n    /* \"#utility.yul\":1731:1736   */\n  dup11\n    /* \"#utility.yul\":1724:1744   */\n  revert\n    /* \"#utility.yul\":1689:1691   */\ntag_93:\n    /* \"#utility.yul\":1783:1785   */\n  dup7\n    /* \"#utility.yul\":1779:1781   */\n  dup3\n    /* \"#utility.yul\":1775:1786   */\n  add\n    /* \"#utility.yul\":1769:1787   */\n  mload\n    /* \"#utility.yul\":1810:1812   */\n  dup2\n    /* \"#utility.yul\":1806:1808   */\n  dup2\n    /* \"#utility.yul\":1803:1813   */\n  gt\n    /* \"#utility.yul\":1800:1802   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1816:1834   */\n  tag_95\n  tag_96\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1864:1915   */\n  tag_97\n    /* \"#utility.yul\":1888:1899   */\n  dup2\n  dup12\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1884:1909   */\n  and\n    /* \"#utility.yul\":1880:1914   */\n  dup10\n  add\n    /* \"#utility.yul\":1864:1915   */\n  tag_77\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1849:1915   */\n  swap2\n  pop\n    /* \"#utility.yul\":1944:1946   */\n  dup1\n    /* \"#utility.yul\":1935:1942   */\n  dup3\n    /* \"#utility.yul\":1928:1947   */\n  mstore\n    /* \"#utility.yul\":1970:1972   */\n  0x40\n    /* \"#utility.yul\":2013:2016   */\n  dup14\n    /* \"#utility.yul\":2008:2010   */\n  dup2\n    /* \"#utility.yul\":2003:2005   */\n  dup4\n    /* \"#utility.yul\":1999:2001   */\n  dup7\n    /* \"#utility.yul\":1995:2006   */\n  add\n    /* \"#utility.yul\":1991:2011   */\n  add\n    /* \"#utility.yul\":1988:2017   */\n  gt\n    /* \"#utility.yul\":1985:1987   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2034:2039   */\n  dup12\n    /* \"#utility.yul\":2027:2032   */\n  dup13\n    /* \"#utility.yul\":2020:2040   */\n  revert\n    /* \"#utility.yul\":1985:1987   */\ntag_98:\n    /* \"#utility.yul\":2066:2071   */\n  dup12\n    /* \"#utility.yul\":2084:2236   */\ntag_99:\n    /* \"#utility.yul\":2100:2102   */\n  dup3\n    /* \"#utility.yul\":2095:2098   */\n  dup2\n    /* \"#utility.yul\":2092:2103   */\n  lt\n    /* \"#utility.yul\":2084:2236   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2203:2215   */\n  dup5\n  dup2\n  add\n    /* \"#utility.yul\":2199:2220   */\n  dup3\n  add\n    /* \"#utility.yul\":2193:2221   */\n  mload\n    /* \"#utility.yul\":2169:2186   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2165:2191   */\n  dup12\n  add\n    /* \"#utility.yul\":2158:2222   */\n  mstore\n    /* \"#utility.yul\":2113:2125   */\n  dup10\n  add\n    /* \"#utility.yul\":2084:2236   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":2260:2262   */\n  dup3\n    /* \"#utility.yul\":2255:2258   */\n  dup2\n    /* \"#utility.yul\":2252:2263   */\n  gt\n    /* \"#utility.yul\":2249:2251   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2328:2333   */\n  dup13\n    /* \"#utility.yul\":2323:2325   */\n  dup11\n    /* \"#utility.yul\":2318:2320   */\n  dup5\n    /* \"#utility.yul\":2309:2316   */\n  dup7\n    /* \"#utility.yul\":2305:2321   */\n  add\n    /* \"#utility.yul\":2301:2326   */\n  add\n    /* \"#utility.yul\":2294:2334   */\n  mstore\n    /* \"#utility.yul\":2249:2251   */\ntag_102:\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2361:2381   */\n  dup6\n  mstore\n  pop\n    /* \"#utility.yul\":2401:2413   */\n  swap3\n  dup5\n  add\n  swap3\n    /* \"#utility.yul\":2433:2445   */\n  swap1\n  dup5\n  add\n  swap1\n    /* \"#utility.yul\":1472:1473   */\n  0x01\n    /* \"#utility.yul\":1465:1474   */\n  add\n    /* \"#utility.yul\":1440:2455   */\n  jump(tag_89)\ntag_91:\n  pop\n    /* \"#utility.yul\":2473:2478   */\n  swap1\n  swap9\n    /* \"#utility.yul\":989:2484   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2489:3804   */\ntag_3:\n    /* \"#utility.yul\":2724:2730   */\n  0x00\n    /* \"#utility.yul\":2732:2738   */\n  dup1\n    /* \"#utility.yul\":2740:2746   */\n  0x00\n    /* \"#utility.yul\":2748:2754   */\n  dup1\n    /* \"#utility.yul\":2756:2762   */\n  0x00\n    /* \"#utility.yul\":2764:2770   */\n  dup1\n    /* \"#utility.yul\":2817:2820   */\n  0xc0\n    /* \"#utility.yul\":2805:2814   */\n  dup8\n    /* \"#utility.yul\":2796:2803   */\n  dup10\n    /* \"#utility.yul\":2792:2815   */\n  sub\n    /* \"#utility.yul\":2788:2821   */\n  slt\n    /* \"#utility.yul\":2785:2787   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2839:2845   */\n  dup2\n    /* \"#utility.yul\":2831:2837   */\n  dup3\n    /* \"#utility.yul\":2824:2846   */\n  revert\n    /* \"#utility.yul\":2785:2787   */\ntag_104:\n    /* \"#utility.yul\":2867:2907   */\n  tag_105\n    /* \"#utility.yul\":2897:2906   */\n  dup8\n    /* \"#utility.yul\":2867:2907   */\n  tag_68\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2857:2907   */\n  swap6\n  pop\n    /* \"#utility.yul\":2926:2975   */\n  tag_106\n    /* \"#utility.yul\":2971:2973   */\n  0x20\n    /* \"#utility.yul\":2960:2969   */\n  dup9\n    /* \"#utility.yul\":2956:2974   */\n  add\n    /* \"#utility.yul\":2926:2975   */\n  tag_68\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3019:3021   */\n  0x40\n    /* \"#utility.yul\":3004:3022   */\n  dup9\n  add\n    /* \"#utility.yul\":2998:3023   */\n  mload\n    /* \"#utility.yul\":2916:2975   */\n  swap1\n  swap6\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3072:3086   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3069:3071   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":3104:3110   */\n  dup4\n    /* \"#utility.yul\":3096:3102   */\n  dup5\n    /* \"#utility.yul\":3089:3111   */\n  revert\n    /* \"#utility.yul\":3069:3071   */\ntag_107:\n    /* \"#utility.yul\":3132:3203   */\n  tag_108\n    /* \"#utility.yul\":3195:3202   */\n  dup11\n    /* \"#utility.yul\":3186:3192   */\n  dup4\n    /* \"#utility.yul\":3175:3184   */\n  dup12\n    /* \"#utility.yul\":3171:3193   */\n  add\n    /* \"#utility.yul\":3132:3203   */\n  tag_83\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3122:3203   */\n  swap6\n  pop\n    /* \"#utility.yul\":3249:3251   */\n  0x60\n    /* \"#utility.yul\":3238:3247   */\n  dup10\n    /* \"#utility.yul\":3234:3252   */\n  add\n    /* \"#utility.yul\":3228:3253   */\n  mload\n    /* \"#utility.yul\":3212:3253   */\n  swap2\n  pop\n    /* \"#utility.yul\":3278:3280   */\n  dup1\n    /* \"#utility.yul\":3268:3276   */\n  dup3\n    /* \"#utility.yul\":3265:3281   */\n  gt\n    /* \"#utility.yul\":3262:3264   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3299:3305   */\n  dup4\n    /* \"#utility.yul\":3291:3297   */\n  dup5\n    /* \"#utility.yul\":3284:3306   */\n  revert\n    /* \"#utility.yul\":3262:3264   */\ntag_109:\n    /* \"#utility.yul\":3327:3401   */\n  tag_110\n    /* \"#utility.yul\":3393:3400   */\n  dup11\n    /* \"#utility.yul\":3382:3390   */\n  dup4\n    /* \"#utility.yul\":3371:3380   */\n  dup12\n    /* \"#utility.yul\":3367:3391   */\n  add\n    /* \"#utility.yul\":3327:3401   */\n  tag_71\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3317:3401   */\n  swap5\n  pop\n    /* \"#utility.yul\":3447:3450   */\n  0x80\n    /* \"#utility.yul\":3436:3445   */\n  dup10\n    /* \"#utility.yul\":3432:3451   */\n  add\n    /* \"#utility.yul\":3426:3452   */\n  mload\n    /* \"#utility.yul\":3410:3452   */\n  swap2\n  pop\n    /* \"#utility.yul\":3477:3479   */\n  dup1\n    /* \"#utility.yul\":3467:3475   */\n  dup3\n    /* \"#utility.yul\":3464:3480   */\n  gt\n    /* \"#utility.yul\":3461:3463   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3498:3504   */\n  dup4\n    /* \"#utility.yul\":3490:3496   */\n  dup5\n    /* \"#utility.yul\":3483:3505   */\n  revert\n    /* \"#utility.yul\":3461:3463   */\ntag_111:\n    /* \"#utility.yul\":3526:3600   */\n  tag_112\n    /* \"#utility.yul\":3592:3599   */\n  dup11\n    /* \"#utility.yul\":3581:3589   */\n  dup4\n    /* \"#utility.yul\":3570:3579   */\n  dup12\n    /* \"#utility.yul\":3566:3590   */\n  add\n    /* \"#utility.yul\":3526:3600   */\n  tag_71\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3516:3600   */\n  swap4\n  pop\n    /* \"#utility.yul\":3646:3649   */\n  0xa0\n    /* \"#utility.yul\":3635:3644   */\n  dup10\n    /* \"#utility.yul\":3631:3650   */\n  add\n    /* \"#utility.yul\":3625:3651   */\n  mload\n    /* \"#utility.yul\":3609:3651   */\n  swap2\n  pop\n    /* \"#utility.yul\":3676:3678   */\n  dup1\n    /* \"#utility.yul\":3666:3674   */\n  dup3\n    /* \"#utility.yul\":3663:3679   */\n  gt\n    /* \"#utility.yul\":3660:3662   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3697:3703   */\n  dup3\n    /* \"#utility.yul\":3689:3695   */\n  dup4\n    /* \"#utility.yul\":3682:3704   */\n  revert\n    /* \"#utility.yul\":3660:3662   */\ntag_113:\n  pop\n    /* \"#utility.yul\":3725:3798   */\n  tag_114\n    /* \"#utility.yul\":3790:3797   */\n  dup10\n    /* \"#utility.yul\":3779:3787   */\n  dup3\n    /* \"#utility.yul\":3768:3777   */\n  dup11\n    /* \"#utility.yul\":3764:3788   */\n  add\n    /* \"#utility.yul\":3725:3798   */\n  tag_83\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3715:3798   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":2775:3804   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":6397:6672   */\ntag_77:\n    /* \"#utility.yul\":6468:6470   */\n  0x40\n    /* \"#utility.yul\":6462:6471   */\n  mload\n    /* \"#utility.yul\":6533:6535   */\n  0x1f\n    /* \"#utility.yul\":6514:6527   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":6510:6537   */\n  and\n    /* \"#utility.yul\":6498:6538   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":6553:6587   */\n  dup2\n  gt\n    /* \"#utility.yul\":6589:6611   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":6550:6612   */\n  or\n    /* \"#utility.yul\":6547:6549   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6615:6633   */\n  tag_124\n  tag_96\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6651:6653   */\n  0x40\n    /* \"#utility.yul\":6644:6666   */\n  mstore\n    /* \"#utility.yul\":6442:6672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6677:6860   */\ntag_76:\n    /* \"#utility.yul\":6737:6741   */\n  0x00\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":6759:6789   */\n  dup3\n  gt\n    /* \"#utility.yul\":6756:6758   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":6792:6810   */\n  tag_127\n  tag_96\n  jump\t// in\ntag_127:\n  pop\n    /* \"#utility.yul\":6837:6838   */\n  0x05\n    /* \"#utility.yul\":6833:6847   */\n  shl\n    /* \"#utility.yul\":6849:6853   */\n  0x20\n    /* \"#utility.yul\":6829:6854   */\n  add\n  swap1\n    /* \"#utility.yul\":6746:6860   */\n  jump\t// out\n    /* \"#utility.yul\":6865:7101   */\ntag_28:\n    /* \"#utility.yul\":6904:6907   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":6925:6942   */\n  dup3\n  eq\n    /* \"#utility.yul\":6922:6924   */\n  iszero\n  tag_129\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":6965:6998   */\n  dup2\n  mstore\n    /* \"#utility.yul\":7021:7025   */\n  0x11\n    /* \"#utility.yul\":7018:7019   */\n  0x04\n    /* \"#utility.yul\":7011:7026   */\n  mstore\n    /* \"#utility.yul\":7051:7055   */\n  0x24\n    /* \"#utility.yul\":6972:6975   */\n  dup2\n    /* \"#utility.yul\":7039:7056   */\n  revert\n    /* \"#utility.yul\":6922:6924   */\ntag_129:\n  pop\n    /* \"#utility.yul\":7093:7094   */\n  0x01\n    /* \"#utility.yul\":7082:7095   */\n  add\n  swap1\n    /* \"#utility.yul\":6912:7101   */\n  jump\t// out\n    /* \"#utility.yul\":7106:7233   */\ntag_96:\n    /* \"#utility.yul\":7167:7177   */\n  0x4e487b71\n    /* \"#utility.yul\":7162:7165   */\n  0xe0\n    /* \"#utility.yul\":7158:7178   */\n  shl\n    /* \"#utility.yul\":7155:7156   */\n  0x00\n    /* \"#utility.yul\":7148:7179   */\n  mstore\n    /* \"#utility.yul\":7198:7202   */\n  0x41\n    /* \"#utility.yul\":7195:7196   */\n  0x04\n    /* \"#utility.yul\":7188:7203   */\n  mstore\n    /* \"#utility.yul\":7222:7226   */\n  0x24\n    /* \"#utility.yul\":7219:7220   */\n  0x00\n    /* \"#utility.yul\":7212:7227   */\n  revert\n    /* \"#utility.yul\":7138:7233   */\ntag_67:\n    /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":416:10182  contract PermittedNFTsAndTypeRegistry is Ownable, IPermittedNFTs {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":416:10182  contract PermittedNFTsAndTypeRegistry is Ownable, IPermittedNFTs {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95244b94\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x95244b94\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb8c8aff8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc88641a2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd8e4e93e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0a21cc43\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1a3dd0a5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x365a86fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6651f11d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6369:6521  function setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) external onlyOwner {... */\n    tag_3:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6754:6871  function getNftTypeWrapper(bytes32 _nftType) public view returns (address) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5334:5366   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5316:5367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5304:5306   */\n      0x20\n        /* \"#utility.yul\":5289:5307   */\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6754:6871  function getNftTypeWrapper(bytes32 _nftType) public view returns (address) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":487:507  INftfiHub public hub */\n    tag_5:\n      sload(0x01)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4918:5051  function getNFTPermit(address _nftContract) external view override returns (bytes32) {... */\n    tag_6:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5020:5044  nftPermits[_nftContract] */\n      and\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5020:5044  nftPermits[_nftContract] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5020:5030  nftPermits */\n      0x03\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5020:5044  nftPermits[_nftContract] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4918:5051  function getNFTPermit(address _nftContract) external view override returns (bytes32) {... */\n      jump\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":5524:5549   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5512:5514   */\n      0x20\n        /* \"#utility.yul\":5497:5515   */\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4918:5051  function getNFTPermit(address _nftContract) external view override returns (bytes32) {... */\n      tag_22\n        /* \"#utility.yul\":5479:5555   */\n      jump\n        /* \"contracts/utils/Ownable.sol\":1712:1797  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_18\n      tag_35\n      jump\t// in\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4423:4581  function setNFTPermits(address[] memory _nftContracts, string[] memory _nftTypes) external onlyOwner {... */\n    tag_8:\n      tag_14\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5274:5462  function getNFTWrapper(address _nftContract) external view override returns (address) {... */\n    tag_9:\n      tag_18\n      tag_42\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3710:3914  function setNFTPermit(address _nftContract, string memory _nftType)... */\n    tag_10:\n      tag_14\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5837:5972  function setNftType(string memory _nftType, address _nftWrapper) external onlyOwner {... */\n    tag_11:\n      tag_14\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/utils/Ownable.sol\":1444:1636  function transferOwnership(address _newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_14\n      tag_54\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6369:6521  function setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) external onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      tag_60\n        /* \"contracts/utils/Ownable.sol\":1039:1044  owner */\n      tag_35\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/Ownable.sol\":1039:1062  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/utils/Ownable.sol\":1031:1099  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6477:6514  _setNftTypes(_nftTypes, _nftWrappers) */\n      tag_65\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6490:6499  _nftTypes */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6501:6513  _nftWrappers */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6477:6489  _setNftTypes */\n      tag_66\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6477:6514  _setNftTypes(_nftTypes, _nftWrappers) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6369:6521  function setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6754:6871  function getNftTypeWrapper(bytes32 _nftType) public view returns (address) {... */\n    tag_21:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6820:6827  address */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6846:6864  nftTypes[_nftType] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6846:6854  nftTypes */\n      0x02\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6846:6864  nftTypes[_nftType] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":6754:6871  function getNftTypeWrapper(bytes32 _nftType) public view returns (address) {... */\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":1712:1797  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"contracts/utils/Ownable.sol\":1758:1765  address */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":1784:1790  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/utils/Ownable.sol\":1712:1797  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4423:4581  function setNFTPermits(address[] memory _nftContracts, string[] memory _nftTypes) external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      tag_72\n        /* \"contracts/utils/Ownable.sol\":1039:1044  owner */\n      tag_35\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/Ownable.sol\":1039:1062  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/utils/Ownable.sol\":1031:1099  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_73:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4534:4574  _setNFTPermits(_nftContracts, _nftTypes) */\n      tag_65\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4549:4562  _nftContracts */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4564:4573  _nftTypes */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4534:4548  _setNFTPermits */\n      tag_77\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":4534:4574  _setNFTPermits(_nftContracts, _nftTypes) */\n      jump\t// in\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5274:5462  function getNFTWrapper(address _nftContract) external view override returns (address) {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5388:5412  nftPermits[_nftContract] */\n      dup2\n      and\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5351:5358  address */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5388:5412  nftPermits[_nftContract] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5388:5398  nftPermits */\n      0x03\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5388:5412  nftPermits[_nftContract] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5429:5455  getNftTypeWrapper(nftType) */\n      tag_79\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5388:5412  nftPermits[_nftContract] */\n      dup2\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5429:5446  getNftTypeWrapper */\n      tag_21\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5429:5455  getNftTypeWrapper(nftType) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5422:5455  return getNftTypeWrapper(nftType) */\n      swap4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5274:5462  function getNFTWrapper(address _nftContract) external view override returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3710:3914  function setNFTPermit(address _nftContract, string memory _nftType)... */\n    tag_48:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3846:3854  _nftType */\n      dup1\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1715:1783  ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n      tag_81\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1747:1782  ContractKeys.AIRDROP_WRAPPER_STRING */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x91, 0x20b4b9323937b82bb930b83832b9)\n      dup2\n      mstore\n      pop\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1715:1746  ContractKeys.getIdFromStringKey */\n      tag_56\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1715:1783  ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1658:1699  ContractKeys.getIdFromStringKey(_nftType) */\n      tag_82\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1690:1698  _nftType */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1658:1689  ContractKeys.getIdFromStringKey */\n      tag_56\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1658:1699  ContractKeys.getIdFromStringKey(_nftType) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1658:1783  ContractKeys.getIdFromStringKey(_nftType) ==... */\n      eq\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1641:2007  if (... */\n      iszero\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1816:1819  hub */\n      sload(0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1816:1861  hub.getContract(ContractKeys.AIRDROP_FACTORY) */\n      mload(0x40)\n      shl(0xe3, 0x1c2d8fb3)\n      dup2\n      mstore\n      shl(0x88, 0x41495244524f505f464143544f5259)\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5524:5549   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1816:1877  hub.getContract(ContractKeys.AIRDROP_FACTORY) == _msgSender() */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1816:1819  hub */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1816:1831  hub.getContract */\n      0xe16c7d98\n      swap1\n        /* \"#utility.yul\":5497:5515   */\n      0x24\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1816:1861  hub.getContract(ContractKeys.AIRDROP_FACTORY) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1816:1877  hub.getContract(ContractKeys.AIRDROP_FACTORY) == _msgSender() */\n      and\n      eq\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1808:1910  require(hub.getContract(ContractKeys.AIRDROP_FACTORY) == _msgSender(), \"caller is not AirdropFactory\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9351:9353   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1808:1910  require(hub.getContract(ContractKeys.AIRDROP_FACTORY) == _msgSender(), \"caller is not AirdropFactory\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9333:9354   */\n      mstore\n        /* \"#utility.yul\":9390:9392   */\n      0x1c\n        /* \"#utility.yul\":9370:9388   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9363:9393   */\n      mstore\n        /* \"#utility.yul\":9429:9459   */\n      0x63616c6c6572206973206e6f742041697264726f70466163746f727900000000\n        /* \"#utility.yul\":9409:9427   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9402:9460   */\n      mstore\n        /* \"#utility.yul\":9477:9495   */\n      0x64\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1808:1910  require(hub.getContract(ContractKeys.AIRDROP_FACTORY) == _msgSender(), \"caller is not AirdropFactory\") */\n      tag_62\n        /* \"#utility.yul\":9323:9501   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1808:1910  require(hub.getContract(ContractKeys.AIRDROP_FACTORY) == _msgSender(), \"caller is not AirdropFactory\") */\n    tag_91:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1641:2007  if (... */\n      jump(tag_97)\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1949:1956  owner() */\n      tag_96\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1949:1954  owner */\n      tag_35\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1949:1956  owner() */\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1949:1972  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1941:1996  require(owner() == _msgSender(), \"caller is not owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7872:7874   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1941:1996  require(owner() == _msgSender(), \"caller is not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7854:7875   */\n      mstore\n        /* \"#utility.yul\":7911:7913   */\n      0x13\n        /* \"#utility.yul\":7891:7909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7884:7914   */\n      mstore\n      shl(0x69, 0x31b0b63632b91034b9903737ba1037bbb732b9)\n        /* \"#utility.yul\":7930:7948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7923:7972   */\n      mstore\n        /* \"#utility.yul\":7989:8007   */\n      0x64\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1941:1996  require(owner() == _msgSender(), \"caller is not owner\") */\n      tag_62\n        /* \"#utility.yul\":7844:8013   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":1941:1996  require(owner() == _msgSender(), \"caller is not owner\") */\n    tag_97:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3870:3907  _setNFTPermit(_nftContract, _nftType) */\n      tag_101\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3884:3896  _nftContract */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3898:3906  _nftType */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3870:3883  _setNFTPermit */\n      tag_102\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3870:3907  _setNFTPermit(_nftContract, _nftType) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":3710:3914  function setNFTPermit(address _nftContract, string memory _nftType)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5837:5972  function setNftType(string memory _nftType, address _nftWrapper) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      tag_105\n        /* \"contracts/utils/Ownable.sol\":1039:1044  owner */\n      tag_35\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/Ownable.sol\":1039:1062  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/utils/Ownable.sol\":1031:1099  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_106:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5931:5965  _setNftType(_nftType, _nftWrapper) */\n      tag_65\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5943:5951  _nftType */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5953:5964  _nftWrapper */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5931:5942  _setNftType */\n      tag_110\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":5931:5965  _setNftType(_nftType, _nftWrapper) */\n      jump\t// in\n        /* \"contracts/utils/Ownable.sol\":1444:1636  function transferOwnership(address _newOwner) public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      tag_113\n        /* \"contracts/utils/Ownable.sol\":1039:1044  owner */\n      tag_35\n        /* \"contracts/utils/Ownable.sol\":1039:1046  owner() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/Ownable.sol\":1039:1062  owner() == _msgSender() */\n      and\n      eq\n        /* \"contracts/utils/Ownable.sol\":1031:1099  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/Ownable.sol\":1533:1556  _newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/utils/Ownable.sol\":1525:1599  require(_newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5987:5989   */\n      0x20\n        /* \"contracts/utils/Ownable.sol\":1525:1599  require(_newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5969:5990   */\n      mstore\n        /* \"#utility.yul\":6026:6028   */\n      0x26\n        /* \"#utility.yul\":6006:6024   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5999:6029   */\n      mstore\n        /* \"#utility.yul\":6065:6099   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6045:6063   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6038:6100   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6116:6134   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6109:6145   */\n      mstore\n        /* \"#utility.yul\":6162:6181   */\n      0x84\n      add\n        /* \"contracts/utils/Ownable.sol\":1525:1599  require(_newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_62\n        /* \"#utility.yul\":5959:6187   */\n      jump\n        /* \"contracts/utils/Ownable.sol\":1525:1599  require(_newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_117:\n        /* \"contracts/utils/Ownable.sol\":1609:1629  _setOwner(_newOwner) */\n      tag_120\n        /* \"contracts/utils/Ownable.sol\":1619:1628  _newOwner */\n      dup2\n        /* \"contracts/utils/Ownable.sol\":1609:1618  _setOwner */\n      tag_121\n        /* \"contracts/utils/Ownable.sol\":1609:1629  _setOwner(_newOwner) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/utils/Ownable.sol\":1444:1636  function transferOwnership(address _newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/ContractKeys.sol\":1365:1638  function getIdFromStringKey(string memory _key) internal pure returns (bytes32 id) {... */\n    tag_56:\n        /* \"contracts/utils/ContractKeys.sol\":1436:1446  bytes32 id */\n      0x00\n        /* \"contracts/utils/ContractKeys.sol\":1488:1490  32 */\n      0x20\n        /* \"contracts/utils/ContractKeys.sol\":1472:1476  _key */\n      dup3\n        /* \"contracts/utils/ContractKeys.sol\":1466:1484  bytes(_key).length */\n      mload\n        /* \"contracts/utils/ContractKeys.sol\":1466:1490  bytes(_key).length <= 32 */\n      gt\n      iszero\n        /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9708:9710   */\n      0x20\n        /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9690:9711   */\n      mstore\n        /* \"#utility.yul\":9747:9749   */\n      0x0b\n        /* \"#utility.yul\":9727:9745   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9720:9750   */\n      mstore\n      shl(0xa8, 0x696e76616c6964206b6579)\n        /* \"#utility.yul\":9766:9784   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9759:9800   */\n      mstore\n        /* \"#utility.yul\":9817:9835   */\n      0x64\n      add\n        /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\n      tag_62\n        /* \"#utility.yul\":9680:9841   */\n      jump\n        /* \"contracts/utils/ContractKeys.sol\":1458:1506  require(bytes(_key).length <= 32, \"invalid key\") */\n    tag_123:\n      pop\n        /* \"contracts/utils/ContractKeys.sol\":1618:1620  32 */\n      0x20\n        /* \"contracts/utils/ContractKeys.sol\":1608:1621  add(_key, 32) */\n      add\n        /* \"contracts/utils/ContractKeys.sol\":1602:1622  mload(add(_key, 32)) */\n      mload\n      swap1\n        /* \"contracts/utils/ContractKeys.sol\":1582:1632  {... */\n      jump\t// out\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7982:8314  function _setNftTypes(string[] memory _nftTypes, address[] memory _nftWrappers) internal {... */\n    tag_66:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8109:8121  _nftWrappers */\n      dup1\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8109:8128  _nftWrappers.length */\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8089:8098  _nftTypes */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8089:8105  _nftTypes.length */\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8089:8128  _nftTypes.length == _nftWrappers.length */\n      eq\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8081:8180  require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6750:6752   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8081:8180  require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6732:6753   */\n      mstore\n        /* \"#utility.yul\":6789:6791   */\n      0x2f\n        /* \"#utility.yul\":6769:6787   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6762:6792   */\n      mstore\n        /* \"#utility.yul\":6828:6862   */\n      0x7365744e667454797065732066756e6374696f6e20696e666f726d6174696f6e\n        /* \"#utility.yul\":6808:6826   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6801:6863   */\n      mstore\n      shl(0x8b, 0x040c2e4d2e8f240dad2e6dac2e8c6d)\n        /* \"#utility.yul\":6879:6897   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6872:6917   */\n      mstore\n        /* \"#utility.yul\":6934:6953   */\n      0x84\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8081:8180  require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\") */\n      tag_62\n        /* \"#utility.yul\":6722:6959   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8081:8180  require(_nftTypes.length == _nftWrappers.length, \"setNftTypes function information arity mismatch\") */\n    tag_128:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8196:8205  uint256 i */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8191:8308  for (uint256 i = 0; i < _nftWrappers.length; i++) {... */\n    tag_131:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8215:8227  _nftWrappers */\n      dup2\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8215:8234  _nftWrappers.length */\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8211:8212  i */\n      dup2\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8211:8234  i < _nftWrappers.length */\n      lt\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8191:8308  for (uint256 i = 0; i < _nftWrappers.length; i++) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8255:8297  _setNftType(_nftTypes[i], _nftWrappers[i]) */\n      tag_134\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8267:8276  _nftTypes */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8277:8278  i */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8267:8279  _nftTypes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_135\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_135:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8281:8293  _nftWrappers */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8294:8295  i */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8281:8296  _nftWrappers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_136:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8255:8266  _setNftType */\n      tag_110\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8255:8297  _setNftType(_nftTypes[i], _nftWrappers[i]) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8236:8239  i++ */\n      dup1\n      tag_137\n      dup2\n      tag_138\n      jump\t// in\n    tag_137:\n      swap2\n      pop\n      pop\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8191:8308  for (uint256 i = 0; i < _nftWrappers.length; i++) {... */\n      jump(tag_131)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9838:10180  function _setNFTPermits(address[] memory _nftContracts, string[] memory _nftTypes) internal {... */\n    tag_77:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9972:9981  _nftTypes */\n      dup1\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9972:9988  _nftTypes.length */\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9948:9961  _nftContracts */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9948:9968  _nftContracts.length */\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9948:9988  _nftContracts.length == _nftTypes.length */\n      eq\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8933:8935   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8915:8936   */\n      mstore\n        /* \"#utility.yul\":8972:8974   */\n      0x31\n        /* \"#utility.yul\":8952:8970   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8945:8975   */\n      mstore\n        /* \"#utility.yul\":9011:9045   */\n      0x7365744e46545065726d6974732066756e6374696f6e20696e666f726d617469\n        /* \"#utility.yul\":8991:9009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8984:9046   */\n      mstore\n      shl(0x7b, 0x0dedc40c2e4d2e8f240dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9062:9080   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9055:9102   */\n      mstore\n        /* \"#utility.yul\":9119:9138   */\n      0x84\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\n      tag_62\n        /* \"#utility.yul\":8905:9144   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9940:10042  require(_nftContracts.length == _nftTypes.length, \"setNFTPermits function information arity mismatch\") */\n    tag_140:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10058:10067  uint256 i */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10053:10174  for (uint256 i = 0; i < _nftContracts.length; i++) {... */\n    tag_143:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10077:10090  _nftContracts */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10077:10097  _nftContracts.length */\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10073:10074  i */\n      dup2\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10073:10097  i < _nftContracts.length */\n      lt\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10053:10174  for (uint256 i = 0; i < _nftContracts.length; i++) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10118:10163  _setNFTPermit(_nftContracts[i], _nftTypes[i]) */\n      tag_146\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10132:10145  _nftContracts */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10146:10147  i */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10132:10148  _nftContracts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_147\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_147:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10150:10159  _nftTypes */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10160:10161  i */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10150:10162  _nftTypes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_148\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_148:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10118:10131  _setNFTPermit */\n      tag_102\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10118:10163  _setNFTPermit(_nftContracts[i], _nftTypes[i]) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10099:10102  i++ */\n      dup1\n      tag_149\n      dup2\n      tag_138\n      jump\t// in\n    tag_149:\n      swap2\n      pop\n      pop\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":10053:10174  for (uint256 i = 0; i < _nftContracts.length; i++) {... */\n      jump(tag_143)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8758:9409  function _setNFTPermit(address _nftContract, string memory _nftType) internal {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8854:8880  _nftContract != address(0) */\n      dup3\n      and\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6394:6396   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6376:6397   */\n      mstore\n        /* \"#utility.yul\":6433:6435   */\n      0x1b\n        /* \"#utility.yul\":6413:6431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6406:6436   */\n      mstore\n        /* \"#utility.yul\":6472:6501   */\n      0x6e6674436f6e7472616374206973207a65726f20616464726573730000000000\n        /* \"#utility.yul\":6452:6470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6445:6502   */\n      mstore\n        /* \"#utility.yul\":6519:6537   */\n      0x64\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\n      tag_62\n        /* \"#utility.yul\":6366:6543   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8846:8912  require(_nftContract != address(0), \"nftContract is zero address\") */\n    tag_151:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8922:8940  bytes32 nftTypeKey */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8943:8984  ContractKeys.getIdFromStringKey(_nftType) */\n      tag_154\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8975:8983  _nftType */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8943:8974  ContractKeys.getIdFromStringKey */\n      tag_56\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8943:8984  ContractKeys.getIdFromStringKey(_nftType) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8922:8984  bytes32 nftTypeKey = ContractKeys.getIdFromStringKey(_nftType) */\n      swap1\n      pop\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8999:9014  nftTypeKey != 0 */\n      dup1\n      iszero\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8995:9120  if (nftTypeKey != 0) {... */\n      tag_157\n      jumpi\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9079:9080  0 */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9038:9067  getNftTypeWrapper(nftTypeKey) */\n      tag_156\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9056:9066  nftTypeKey */\n      dup3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9038:9055  getNftTypeWrapper */\n      tag_21\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9038:9067  getNftTypeWrapper(nftTypeKey) */\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9038:9081  getNftTypeWrapper(nftTypeKey) != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8220:8222   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8202:8223   */\n      mstore\n        /* \"#utility.yul\":8259:8261   */\n      0x17\n        /* \"#utility.yul\":8239:8257   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8232:8262   */\n      mstore\n      shl(0x4a, 0x139195081d1e5c19481b9bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":8278:8296   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8271:8324   */\n      mstore\n        /* \"#utility.yul\":8341:8359   */\n      0x64\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\n      tag_62\n        /* \"#utility.yul\":8192:8365   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9030:9109  require(getNftTypeWrapper(nftTypeKey) != address(0), \"NFT type not registered\") */\n    tag_157:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9179:9247  ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n      tag_160\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9211:9246  ContractKeys.AIRDROP_WRAPPER_STRING */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x91, 0x20b4b9323937b82bb930b83832b9)\n      dup2\n      mstore\n      pop\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9179:9210  ContractKeys.getIdFromStringKey */\n      tag_56\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9179:9247  ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9175  nftPermits[_nftContract] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9161  nftPermits */\n      0x03\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9175  nftPermits[_nftContract] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9151:9247  nftPermits[_nftContract] != ContractKeys.getIdFromStringKey(ContractKeys.AIRDROP_WRAPPER_STRING) */\n      eq\n      iszero\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7166:7168   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7148:7169   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7185:7203   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7178:7208   */\n      mstore\n        /* \"#utility.yul\":7244:7278   */\n      0x41697264726f70577261707065722063616e2774206265206d6f646966696564\n        /* \"#utility.yul\":7224:7242   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7217:7279   */\n      mstore\n        /* \"#utility.yul\":7296:7314   */\n      0x64\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\n      tag_62\n        /* \"#utility.yul\":7138:7320   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9130:9305  require(... */\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9339  nftPermits[_nftContract] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9325  nftPermits */\n      0x03\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9339  nftPermits[_nftContract] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9352  nftPermits[_nftContract] = nftTypeKey */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9367:9402  NFTPermit(_nftContract, nftTypeKey) */\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9342:9352  nftTypeKey */\n      dup4\n      swap3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9315:9339  nftPermits[_nftContract] */\n      swap2\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":9367:9402  NFTPermit(_nftContract, nftTypeKey) */\n      0x903a211c8bcdc0ab18afc116fc4776504a9aac5c0121be0fda712d399017bd22\n      swap2\n      log3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":8758:9409  function _setNFTPermit(address _nftContract, string memory _nftType) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7246:7563  function _setNftType(string memory _nftType, address _nftWrapper) internal {... */\n    tag_110:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7339:7361  bytes(_nftType).length */\n      dup2\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7527:7529   */\n      0x20\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7509:7530   */\n      mstore\n        /* \"#utility.yul\":7566:7568   */\n      0x10\n        /* \"#utility.yul\":7546:7564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7539:7569   */\n      mstore\n      shl(0x80, 0x6e66745479706520697320656d707479)\n        /* \"#utility.yul\":7585:7603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7578:7624   */\n      mstore\n        /* \"#utility.yul\":7641:7659   */\n      0x64\n      add\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\n      tag_62\n        /* \"#utility.yul\":7499:7665   */\n      jump\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7331:7387  require(bytes(_nftType).length != 0, \"nftType is empty\") */\n    tag_165:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7397:7415  bytes32 nftTypeKey */\n      0x00\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7418:7459  ContractKeys.getIdFromStringKey(_nftType) */\n      tag_168\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7450:7458  _nftType */\n      dup4\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7418:7449  ContractKeys.getIdFromStringKey */\n      tag_56\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7418:7459  ContractKeys.getIdFromStringKey(_nftType) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7478  nftTypes */\n      0x02\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7504  nftTypes[nftTypeKey] = _nftWrapper */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7520:7556  TypeUpdated(nftTypeKey, _nftWrapper) */\n      swap1\n      mload\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n      swap3\n      swap4\n      pop\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7504  nftTypes[nftTypeKey] = _nftWrapper */\n      swap2\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7470:7490  nftTypes[nftTypeKey] */\n      dup4\n      swap2\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7520:7556  TypeUpdated(nftTypeKey, _nftWrapper) */\n      0x22be69269c1f7d73e73dcb25b710dd88c7aa1cf374c16d945def98df2107c2f8\n      swap2\n      log3\n        /* \"contracts/PermittedNFTsAndTypeRegistry.sol\":7246:7563  function _setNftType(string memory _nftType, address _nftWrapper) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":1847:2019  function _setOwner(address _newOwner) private {... */\n    tag_121:\n        /* \"contracts/utils/Ownable.sol\":1903:1919  address oldOwner */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":1922:1928  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/Ownable.sol\":1938:1956  _owner = _newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/utils/Ownable.sol\":1971:2012  OwnershipTransferred(oldOwner, _newOwner) */\n      mload(0x40)\n        /* \"contracts/utils/Ownable.sol\":1922:1928  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/utils/Ownable.sol\":1971:2012  OwnershipTransferred(oldOwner, _newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/utils/Ownable.sol\":1903:1919  address oldOwner */\n      swap1\n        /* \"contracts/utils/Ownable.sol\":1971:2012  OwnershipTransferred(oldOwner, _newOwner) */\n      log3\n        /* \"contracts/utils/Ownable.sol\":1847:2019  function _setOwner(address _newOwner) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:782   */\n    tag_171:\n        /* \"#utility.yul\":68:73   */\n      0x00\n        /* \"#utility.yul\":121:124   */\n      dup3\n        /* \"#utility.yul\":114:118   */\n      0x1f\n        /* \"#utility.yul\":106:112   */\n      dup4\n        /* \"#utility.yul\":102:119   */\n      add\n        /* \"#utility.yul\":98:125   */\n      slt\n        /* \"#utility.yul\":88:90   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":143:148   */\n      dup1\n        /* \"#utility.yul\":136:141   */\n      dup2\n        /* \"#utility.yul\":129:149   */\n      revert\n        /* \"#utility.yul\":88:90   */\n    tag_173:\n        /* \"#utility.yul\":183:189   */\n      dup2\n        /* \"#utility.yul\":170:190   */\n      calldataload\n        /* \"#utility.yul\":209:213   */\n      0x20\n        /* \"#utility.yul\":233:293   */\n      tag_174\n        /* \"#utility.yul\":249:292   */\n      tag_175\n        /* \"#utility.yul\":289:291   */\n      dup4\n        /* \"#utility.yul\":249:292   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":233:293   */\n      tag_177\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":315:318   */\n      dup1\n        /* \"#utility.yul\":339:341   */\n      dup4\n        /* \"#utility.yul\":334:337   */\n      dup3\n        /* \"#utility.yul\":327:342   */\n      mstore\n        /* \"#utility.yul\":367:369   */\n      dup3\n        /* \"#utility.yul\":362:365   */\n      dup3\n        /* \"#utility.yul\":358:370   */\n      add\n        /* \"#utility.yul\":351:370   */\n      swap2\n      pop\n        /* \"#utility.yul\":402:404   */\n      dup3\n        /* \"#utility.yul\":394:400   */\n      dup7\n        /* \"#utility.yul\":390:405   */\n      add\n        /* \"#utility.yul\":454:457   */\n      dup8\n        /* \"#utility.yul\":449:451   */\n      dup5\n        /* \"#utility.yul\":443:445   */\n      dup7\n        /* \"#utility.yul\":440:441   */\n      0x05\n        /* \"#utility.yul\":436:446   */\n      shl\n        /* \"#utility.yul\":428:434   */\n      dup10\n        /* \"#utility.yul\":424:447   */\n      add\n        /* \"#utility.yul\":420:452   */\n      add\n        /* \"#utility.yul\":417:458   */\n      gt\n        /* \"#utility.yul\":414:416   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":475:480   */\n      dup6\n        /* \"#utility.yul\":468:473   */\n      dup7\n        /* \"#utility.yul\":461:481   */\n      revert\n        /* \"#utility.yul\":414:416   */\n    tag_178:\n        /* \"#utility.yul\":501:506   */\n      dup6\n        /* \"#utility.yul\":515:753   */\n    tag_179:\n        /* \"#utility.yul\":529:531   */\n      dup6\n        /* \"#utility.yul\":526:527   */\n      dup2\n        /* \"#utility.yul\":523:532   */\n      lt\n        /* \"#utility.yul\":515:753   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":600:603   */\n      dup2\n        /* \"#utility.yul\":587:604   */\n      calldataload\n        /* \"#utility.yul\":617:648   */\n      tag_182\n        /* \"#utility.yul\":642:647   */\n      dup2\n        /* \"#utility.yul\":617:648   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":661:679   */\n      dup5\n      mstore\n        /* \"#utility.yul\":699:711   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":731:743   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":547:548   */\n      0x01\n        /* \"#utility.yul\":540:549   */\n      add\n        /* \"#utility.yul\":515:753   */\n      jump(tag_179)\n    tag_181:\n      pop\n        /* \"#utility.yul\":771:776   */\n      swap1\n      swap8\n        /* \"#utility.yul\":78:782   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":787:1644   */\n    tag_184:\n        /* \"#utility.yul\":840:845   */\n      0x00\n        /* \"#utility.yul\":893:896   */\n      dup3\n        /* \"#utility.yul\":886:890   */\n      0x1f\n        /* \"#utility.yul\":878:884   */\n      dup4\n        /* \"#utility.yul\":874:891   */\n      add\n        /* \"#utility.yul\":870:897   */\n      slt\n        /* \"#utility.yul\":860:862   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":915:920   */\n      dup1\n        /* \"#utility.yul\":908:913   */\n      dup2\n        /* \"#utility.yul\":901:921   */\n      revert\n        /* \"#utility.yul\":860:862   */\n    tag_186:\n        /* \"#utility.yul\":955:961   */\n      dup2\n        /* \"#utility.yul\":942:962   */\n      calldataload\n        /* \"#utility.yul\":981:985   */\n      0x20\n        /* \"#utility.yul\":1005:1065   */\n      tag_187\n        /* \"#utility.yul\":1021:1064   */\n      tag_175\n        /* \"#utility.yul\":1061:1063   */\n      dup4\n        /* \"#utility.yul\":1021:1064   */\n      tag_176\n      jump\t// in\n        /* \"#utility.yul\":1005:1065   */\n    tag_187:\n        /* \"#utility.yul\":1087:1090   */\n      dup1\n        /* \"#utility.yul\":1111:1113   */\n      dup4\n        /* \"#utility.yul\":1106:1109   */\n      dup3\n        /* \"#utility.yul\":1099:1114   */\n      mstore\n        /* \"#utility.yul\":1139:1141   */\n      dup3\n        /* \"#utility.yul\":1134:1137   */\n      dup3\n        /* \"#utility.yul\":1130:1142   */\n      add\n        /* \"#utility.yul\":1123:1142   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1176   */\n      dup3\n        /* \"#utility.yul\":1166:1172   */\n      dup7\n        /* \"#utility.yul\":1162:1177   */\n      add\n        /* \"#utility.yul\":1226:1229   */\n      dup8\n        /* \"#utility.yul\":1221:1223   */\n      dup5\n        /* \"#utility.yul\":1215:1217   */\n      dup7\n        /* \"#utility.yul\":1212:1213   */\n      0x05\n        /* \"#utility.yul\":1208:1218   */\n      shl\n        /* \"#utility.yul\":1200:1206   */\n      dup10\n        /* \"#utility.yul\":1196:1219   */\n      add\n        /* \"#utility.yul\":1192:1224   */\n      add\n        /* \"#utility.yul\":1189:1230   */\n      gt\n        /* \"#utility.yul\":1186:1188   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":1247:1252   */\n      dup6\n        /* \"#utility.yul\":1240:1245   */\n      dup7\n        /* \"#utility.yul\":1233:1253   */\n      revert\n        /* \"#utility.yul\":1186:1188   */\n    tag_189:\n        /* \"#utility.yul\":1273:1278   */\n      dup6\n        /* \"#utility.yul\":1287:1615   */\n    tag_190:\n        /* \"#utility.yul\":1301:1303   */\n      dup6\n        /* \"#utility.yul\":1298:1299   */\n      dup2\n        /* \"#utility.yul\":1295:1304   */\n      lt\n        /* \"#utility.yul\":1287:1615   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1378:1381   */\n      dup2\n        /* \"#utility.yul\":1365:1382   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1401:1412   */\n      dup2\n        /* \"#utility.yul\":1398:1433   */\n      gt\n        /* \"#utility.yul\":1395:1397   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":1450:1455   */\n      dup8\n        /* \"#utility.yul\":1443:1448   */\n      dup9\n        /* \"#utility.yul\":1436:1456   */\n      revert\n        /* \"#utility.yul\":1395:1397   */\n    tag_193:\n        /* \"#utility.yul\":1483:1540   */\n      tag_194\n        /* \"#utility.yul\":1536:1539   */\n      dup11\n        /* \"#utility.yul\":1531:1533   */\n      dup8\n        /* \"#utility.yul\":1517:1528   */\n      dup4\n        /* \"#utility.yul\":1509:1515   */\n      dup13\n        /* \"#utility.yul\":1505:1529   */\n      add\n        /* \"#utility.yul\":1501:1534   */\n      add\n        /* \"#utility.yul\":1483:1540   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1471:1541   */\n      dup6\n      mstore\n      pop\n        /* \"#utility.yul\":1561:1573   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1593:1605   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1319:1320   */\n      0x01\n        /* \"#utility.yul\":1312:1321   */\n      add\n        /* \"#utility.yul\":1287:1615   */\n      jump(tag_190)\n        /* \"#utility.yul\":1649:2200   */\n    tag_195:\n        /* \"#utility.yul\":1692:1697   */\n      0x00\n        /* \"#utility.yul\":1745:1748   */\n      dup3\n        /* \"#utility.yul\":1738:1742   */\n      0x1f\n        /* \"#utility.yul\":1730:1736   */\n      dup4\n        /* \"#utility.yul\":1726:1743   */\n      add\n        /* \"#utility.yul\":1722:1749   */\n      slt\n        /* \"#utility.yul\":1712:1714   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":1767:1772   */\n      dup1\n        /* \"#utility.yul\":1760:1765   */\n      dup2\n        /* \"#utility.yul\":1753:1773   */\n      revert\n        /* \"#utility.yul\":1712:1714   */\n    tag_197:\n        /* \"#utility.yul\":1807:1813   */\n      dup2\n        /* \"#utility.yul\":1794:1814   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1829:1831   */\n      dup2\n        /* \"#utility.yul\":1826:1852   */\n      gt\n        /* \"#utility.yul\":1823:1825   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":1855:1873   */\n      tag_199\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1899:1954   */\n      tag_201\n        /* \"#utility.yul\":1942:1944   */\n      0x1f\n        /* \"#utility.yul\":1923:1936   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1919:1946   */\n      and\n        /* \"#utility.yul\":1948:1952   */\n      0x20\n        /* \"#utility.yul\":1915:1953   */\n      add\n        /* \"#utility.yul\":1899:1954   */\n      tag_177\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1979:1981   */\n      dup2\n        /* \"#utility.yul\":1970:1977   */\n      dup2\n        /* \"#utility.yul\":1963:1982   */\n      mstore\n        /* \"#utility.yul\":2025:2028   */\n      dup5\n        /* \"#utility.yul\":2018:2022   */\n      0x20\n        /* \"#utility.yul\":2013:2015   */\n      dup4\n        /* \"#utility.yul\":2005:2011   */\n      dup7\n        /* \"#utility.yul\":2001:2016   */\n      add\n        /* \"#utility.yul\":1997:2023   */\n      add\n        /* \"#utility.yul\":1994:2029   */\n      gt\n        /* \"#utility.yul\":1991:1993   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2046:2051   */\n      dup3\n        /* \"#utility.yul\":2039:2044   */\n      dup4\n        /* \"#utility.yul\":2032:2052   */\n      revert\n        /* \"#utility.yul\":1991:1993   */\n    tag_202:\n        /* \"#utility.yul\":2115:2117   */\n      dup2\n        /* \"#utility.yul\":2108:2112   */\n      0x20\n        /* \"#utility.yul\":2100:2106   */\n      dup6\n        /* \"#utility.yul\":2096:2113   */\n      add\n        /* \"#utility.yul\":2089:2093   */\n      0x20\n        /* \"#utility.yul\":2080:2087   */\n      dup4\n        /* \"#utility.yul\":2076:2094   */\n      add\n        /* \"#utility.yul\":2063:2118   */\n      calldatacopy\n        /* \"#utility.yul\":2138:2154   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":2156:2160   */\n      0x20\n        /* \"#utility.yul\":2134:2161   */\n      add\n        /* \"#utility.yul\":2127:2169   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2142:2149   */\n      swap3\n        /* \"#utility.yul\":1702:2200   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2462   */\n    tag_30:\n        /* \"#utility.yul\":2264:2270   */\n      0x00\n        /* \"#utility.yul\":2317:2319   */\n      0x20\n        /* \"#utility.yul\":2305:2314   */\n      dup3\n        /* \"#utility.yul\":2296:2303   */\n      dup5\n        /* \"#utility.yul\":2292:2315   */\n      sub\n        /* \"#utility.yul\":2288:2320   */\n      slt\n        /* \"#utility.yul\":2285:2287   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2338:2344   */\n      dup1\n        /* \"#utility.yul\":2330:2336   */\n      dup2\n        /* \"#utility.yul\":2323:2345   */\n      revert\n        /* \"#utility.yul\":2285:2287   */\n    tag_204:\n        /* \"#utility.yul\":2382:2391   */\n      dup2\n        /* \"#utility.yul\":2369:2392   */\n      calldataload\n        /* \"#utility.yul\":2401:2432   */\n      tag_79\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2401:2432   */\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":2467:2728   */\n    tag_90:\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2590:2592   */\n      0x20\n        /* \"#utility.yul\":2578:2587   */\n      dup3\n        /* \"#utility.yul\":2569:2576   */\n      dup5\n        /* \"#utility.yul\":2565:2588   */\n      sub\n        /* \"#utility.yul\":2561:2593   */\n      slt\n        /* \"#utility.yul\":2558:2560   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2611:2617   */\n      dup1\n        /* \"#utility.yul\":2603:2609   */\n      dup2\n        /* \"#utility.yul\":2596:2618   */\n      revert\n        /* \"#utility.yul\":2558:2560   */\n    tag_207:\n        /* \"#utility.yul\":2648:2657   */\n      dup2\n        /* \"#utility.yul\":2642:2658   */\n      mload\n        /* \"#utility.yul\":2667:2698   */\n      tag_79\n        /* \"#utility.yul\":2692:2697   */\n      dup2\n        /* \"#utility.yul\":2667:2698   */\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":2733:3210   */\n    tag_47:\n        /* \"#utility.yul\":2811:2817   */\n      0x00\n        /* \"#utility.yul\":2819:2825   */\n      dup1\n        /* \"#utility.yul\":2872:2874   */\n      0x40\n        /* \"#utility.yul\":2860:2869   */\n      dup4\n        /* \"#utility.yul\":2851:2858   */\n      dup6\n        /* \"#utility.yul\":2847:2870   */\n      sub\n        /* \"#utility.yul\":2843:2875   */\n      slt\n        /* \"#utility.yul\":2840:2842   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2893:2899   */\n      dup1\n        /* \"#utility.yul\":2885:2891   */\n      dup2\n        /* \"#utility.yul\":2878:2900   */\n      revert\n        /* \"#utility.yul\":2840:2842   */\n    tag_210:\n        /* \"#utility.yul\":2937:2946   */\n      dup3\n        /* \"#utility.yul\":2924:2947   */\n      calldataload\n        /* \"#utility.yul\":2956:2987   */\n      tag_211\n        /* \"#utility.yul\":2981:2986   */\n      dup2\n        /* \"#utility.yul\":2956:2987   */\n      tag_183\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3006:3011   */\n      swap2\n      pop\n        /* \"#utility.yul\":3062:3064   */\n      0x20\n        /* \"#utility.yul\":3047:3065   */\n      dup4\n      add\n        /* \"#utility.yul\":3034:3066   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3078:3108   */\n      dup2\n      gt\n        /* \"#utility.yul\":3075:3077   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3126:3132   */\n      dup2\n        /* \"#utility.yul\":3118:3124   */\n      dup3\n        /* \"#utility.yul\":3111:3133   */\n      revert\n        /* \"#utility.yul\":3075:3077   */\n    tag_212:\n        /* \"#utility.yul\":3154:3204   */\n      tag_213\n        /* \"#utility.yul\":3196:3203   */\n      dup6\n        /* \"#utility.yul\":3187:3193   */\n      dup3\n        /* \"#utility.yul\":3176:3185   */\n      dup7\n        /* \"#utility.yul\":3172:3194   */\n      add\n        /* \"#utility.yul\":3154:3204   */\n      tag_195\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3144:3204   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2830:3210   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3215:3849   */\n    tag_39:\n        /* \"#utility.yul\":3343:3349   */\n      0x00\n        /* \"#utility.yul\":3351:3357   */\n      dup1\n        /* \"#utility.yul\":3404:3406   */\n      0x40\n        /* \"#utility.yul\":3392:3401   */\n      dup4\n        /* \"#utility.yul\":3383:3390   */\n      dup6\n        /* \"#utility.yul\":3379:3402   */\n      sub\n        /* \"#utility.yul\":3375:3407   */\n      slt\n        /* \"#utility.yul\":3372:3374   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":3425:3431   */\n      dup2\n        /* \"#utility.yul\":3417:3423   */\n      dup3\n        /* \"#utility.yul\":3410:3432   */\n      revert\n        /* \"#utility.yul\":3372:3374   */\n    tag_215:\n        /* \"#utility.yul\":3470:3479   */\n      dup3\n        /* \"#utility.yul\":3457:3480   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3540:3542   */\n      dup1\n        /* \"#utility.yul\":3532:3538   */\n      dup3\n        /* \"#utility.yul\":3529:3543   */\n      gt\n        /* \"#utility.yul\":3526:3528   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":3561:3567   */\n      dup4\n        /* \"#utility.yul\":3553:3559   */\n      dup5\n        /* \"#utility.yul\":3546:3568   */\n      revert\n        /* \"#utility.yul\":3526:3528   */\n    tag_216:\n        /* \"#utility.yul\":3589:3650   */\n      tag_217\n        /* \"#utility.yul\":3642:3649   */\n      dup7\n        /* \"#utility.yul\":3633:3639   */\n      dup4\n        /* \"#utility.yul\":3622:3631   */\n      dup8\n        /* \"#utility.yul\":3618:3640   */\n      add\n        /* \"#utility.yul\":3589:3650   */\n      tag_171\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3579:3650   */\n      swap4\n      pop\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup6\n        /* \"#utility.yul\":3688:3706   */\n      add\n        /* \"#utility.yul\":3675:3707   */\n      calldataload\n        /* \"#utility.yul\":3659:3707   */\n      swap2\n      pop\n        /* \"#utility.yul\":3732:3734   */\n      dup1\n        /* \"#utility.yul\":3722:3730   */\n      dup3\n        /* \"#utility.yul\":3719:3735   */\n      gt\n        /* \"#utility.yul\":3716:3718   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":3753:3759   */\n      dup3\n        /* \"#utility.yul\":3745:3751   */\n      dup4\n        /* \"#utility.yul\":3738:3760   */\n      revert\n        /* \"#utility.yul\":3716:3718   */\n    tag_218:\n      pop\n        /* \"#utility.yul\":3781:3843   */\n      tag_213\n        /* \"#utility.yul\":3835:3842   */\n      dup6\n        /* \"#utility.yul\":3824:3832   */\n      dup3\n        /* \"#utility.yul\":3813:3822   */\n      dup7\n        /* \"#utility.yul\":3809:3833   */\n      add\n        /* \"#utility.yul\":3781:3843   */\n      tag_184\n      jump\t// in\n        /* \"#utility.yul\":3854:4488   */\n    tag_16:\n        /* \"#utility.yul\":3982:3988   */\n      0x00\n        /* \"#utility.yul\":3990:3996   */\n      dup1\n        /* \"#utility.yul\":4043:4045   */\n      0x40\n        /* \"#utility.yul\":4031:4040   */\n      dup4\n        /* \"#utility.yul\":4022:4029   */\n      dup6\n        /* \"#utility.yul\":4018:4041   */\n      sub\n        /* \"#utility.yul\":4014:4046   */\n      slt\n        /* \"#utility.yul\":4011:4013   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":4064:4070   */\n      dup2\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4049:4071   */\n      revert\n        /* \"#utility.yul\":4011:4013   */\n    tag_221:\n        /* \"#utility.yul\":4109:4118   */\n      dup3\n        /* \"#utility.yul\":4096:4119   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4179:4181   */\n      dup1\n        /* \"#utility.yul\":4171:4177   */\n      dup3\n        /* \"#utility.yul\":4168:4182   */\n      gt\n        /* \"#utility.yul\":4165:4167   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":4200:4206   */\n      dup4\n        /* \"#utility.yul\":4192:4198   */\n      dup5\n        /* \"#utility.yul\":4185:4207   */\n      revert\n        /* \"#utility.yul\":4165:4167   */\n    tag_222:\n        /* \"#utility.yul\":4228:4288   */\n      tag_223\n        /* \"#utility.yul\":4280:4287   */\n      dup7\n        /* \"#utility.yul\":4271:4277   */\n      dup4\n        /* \"#utility.yul\":4260:4269   */\n      dup8\n        /* \"#utility.yul\":4256:4278   */\n      add\n        /* \"#utility.yul\":4228:4288   */\n      tag_184\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4218:4288   */\n      swap4\n      pop\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4330:4339   */\n      dup6\n        /* \"#utility.yul\":4326:4344   */\n      add\n        /* \"#utility.yul\":4313:4345   */\n      calldataload\n        /* \"#utility.yul\":4297:4345   */\n      swap2\n      pop\n        /* \"#utility.yul\":4370:4372   */\n      dup1\n        /* \"#utility.yul\":4360:4368   */\n      dup3\n        /* \"#utility.yul\":4357:4373   */\n      gt\n        /* \"#utility.yul\":4354:4356   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":4391:4397   */\n      dup3\n        /* \"#utility.yul\":4383:4389   */\n      dup4\n        /* \"#utility.yul\":4376:4398   */\n      revert\n        /* \"#utility.yul\":4354:4356   */\n    tag_224:\n      pop\n        /* \"#utility.yul\":4419:4482   */\n      tag_213\n        /* \"#utility.yul\":4474:4481   */\n      dup6\n        /* \"#utility.yul\":4463:4471   */\n      dup3\n        /* \"#utility.yul\":4452:4461   */\n      dup7\n        /* \"#utility.yul\":4448:4472   */\n      add\n        /* \"#utility.yul\":4419:4482   */\n      tag_171\n      jump\t// in\n        /* \"#utility.yul\":4493:4683   */\n    tag_20:\n        /* \"#utility.yul\":4552:4558   */\n      0x00\n        /* \"#utility.yul\":4605:4607   */\n      0x20\n        /* \"#utility.yul\":4593:4602   */\n      dup3\n        /* \"#utility.yul\":4584:4591   */\n      dup5\n        /* \"#utility.yul\":4580:4603   */\n      sub\n        /* \"#utility.yul\":4576:4608   */\n      slt\n        /* \"#utility.yul\":4573:4575   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":4626:4632   */\n      dup1\n        /* \"#utility.yul\":4618:4624   */\n      dup2\n        /* \"#utility.yul\":4611:4633   */\n      revert\n        /* \"#utility.yul\":4573:4575   */\n    tag_227:\n      pop\n        /* \"#utility.yul\":4654:4677   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4563:4683   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4688:5165   */\n    tag_51:\n        /* \"#utility.yul\":4766:4772   */\n      0x00\n        /* \"#utility.yul\":4774:4780   */\n      dup1\n        /* \"#utility.yul\":4827:4829   */\n      0x40\n        /* \"#utility.yul\":4815:4824   */\n      dup4\n        /* \"#utility.yul\":4806:4813   */\n      dup6\n        /* \"#utility.yul\":4802:4825   */\n      sub\n        /* \"#utility.yul\":4798:4830   */\n      slt\n        /* \"#utility.yul\":4795:4797   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":4848:4854   */\n      dup2\n        /* \"#utility.yul\":4840:4846   */\n      dup3\n        /* \"#utility.yul\":4833:4855   */\n      revert\n        /* \"#utility.yul\":4795:4797   */\n    tag_229:\n        /* \"#utility.yul\":4893:4902   */\n      dup3\n        /* \"#utility.yul\":4880:4903   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4918:4924   */\n      dup2\n        /* \"#utility.yul\":4915:4945   */\n      gt\n        /* \"#utility.yul\":4912:4914   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4955:4961   */\n      dup4\n        /* \"#utility.yul\":4948:4970   */\n      revert\n        /* \"#utility.yul\":4912:4914   */\n    tag_230:\n        /* \"#utility.yul\":4991:5041   */\n      tag_231\n        /* \"#utility.yul\":5033:5040   */\n      dup6\n        /* \"#utility.yul\":5024:5030   */\n      dup3\n        /* \"#utility.yul\":5013:5022   */\n      dup7\n        /* \"#utility.yul\":5009:5031   */\n      add\n        /* \"#utility.yul\":4991:5041   */\n      tag_195\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4981:5041   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5091:5093   */\n      0x20\n        /* \"#utility.yul\":5080:5089   */\n      dup4\n        /* \"#utility.yul\":5076:5094   */\n      add\n        /* \"#utility.yul\":5063:5095   */\n      calldataload\n        /* \"#utility.yul\":5104:5135   */\n      tag_232\n        /* \"#utility.yul\":5129:5134   */\n      dup2\n        /* \"#utility.yul\":5104:5135   */\n      tag_183\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5154:5159   */\n      dup1\n        /* \"#utility.yul\":5144:5159   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4785:5165   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8370:8726   */\n    tag_63:\n        /* \"#utility.yul\":8572:8574   */\n      0x20\n        /* \"#utility.yul\":8554:8575   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8591:8609   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8584:8614   */\n      mstore\n        /* \"#utility.yul\":8650:8684   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8645:8647   */\n      0x40\n        /* \"#utility.yul\":8630:8648   */\n      dup3\n      add\n        /* \"#utility.yul\":8623:8685   */\n      mstore\n        /* \"#utility.yul\":8717:8719   */\n      0x60\n        /* \"#utility.yul\":8702:8720   */\n      add\n      swap1\n        /* \"#utility.yul\":8544:8726   */\n      jump\t// out\n        /* \"#utility.yul\":9846:10121   */\n    tag_177:\n        /* \"#utility.yul\":9917:9919   */\n      0x40\n        /* \"#utility.yul\":9911:9920   */\n      mload\n        /* \"#utility.yul\":9982:9984   */\n      0x1f\n        /* \"#utility.yul\":9963:9976   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9959:9986   */\n      and\n        /* \"#utility.yul\":9947:9987   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":10002:10036   */\n      dup2\n      gt\n        /* \"#utility.yul\":10038:10060   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":9999:10061   */\n      or\n        /* \"#utility.yul\":9996:9998   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":10064:10082   */\n      tag_249\n      tag_200\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":10100:10102   */\n      0x40\n        /* \"#utility.yul\":10093:10115   */\n      mstore\n        /* \"#utility.yul\":9891:10121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10126:10309   */\n    tag_176:\n        /* \"#utility.yul\":10186:10190   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":10211:10217   */\n      dup3\n        /* \"#utility.yul\":10208:10238   */\n      gt\n        /* \"#utility.yul\":10205:10207   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":10241:10259   */\n      tag_252\n      tag_200\n      jump\t// in\n    tag_252:\n      pop\n        /* \"#utility.yul\":10286:10287   */\n      0x05\n        /* \"#utility.yul\":10282:10296   */\n      shl\n        /* \"#utility.yul\":10298:10302   */\n      0x20\n        /* \"#utility.yul\":10278:10303   */\n      add\n      swap1\n        /* \"#utility.yul\":10195:10309   */\n      jump\t// out\n        /* \"#utility.yul\":10314:10550   */\n    tag_138:\n        /* \"#utility.yul\":10353:10356   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10374:10391   */\n      dup3\n      eq\n        /* \"#utility.yul\":10371:10373   */\n      iszero\n      tag_254\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":10414:10447   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10470:10474   */\n      0x11\n        /* \"#utility.yul\":10467:10468   */\n      0x04\n        /* \"#utility.yul\":10460:10475   */\n      mstore\n        /* \"#utility.yul\":10500:10504   */\n      0x24\n        /* \"#utility.yul\":10421:10424   */\n      dup2\n        /* \"#utility.yul\":10488:10505   */\n      revert\n        /* \"#utility.yul\":10371:10373   */\n    tag_254:\n      pop\n        /* \"#utility.yul\":10542:10543   */\n      0x01\n        /* \"#utility.yul\":10531:10544   */\n      add\n      swap1\n        /* \"#utility.yul\":10361:10550   */\n      jump\t// out\n        /* \"#utility.yul\":10555:10682   */\n    tag_200:\n        /* \"#utility.yul\":10616:10626   */\n      0x4e487b71\n        /* \"#utility.yul\":10611:10614   */\n      0xe0\n        /* \"#utility.yul\":10607:10627   */\n      shl\n        /* \"#utility.yul\":10604:10605   */\n      0x00\n        /* \"#utility.yul\":10597:10628   */\n      mstore\n        /* \"#utility.yul\":10647:10651   */\n      0x41\n        /* \"#utility.yul\":10644:10645   */\n      0x04\n        /* \"#utility.yul\":10637:10652   */\n      mstore\n        /* \"#utility.yul\":10671:10675   */\n      0x24\n        /* \"#utility.yul\":10668:10669   */\n      0x00\n        /* \"#utility.yul\":10661:10676   */\n      revert\n        /* \"#utility.yul\":10687:10818   */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10762:10793   */\n      dup2\n      and\n        /* \"#utility.yul\":10752:10794   */\n      dup2\n      eq\n        /* \"#utility.yul\":10742:10744   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":10808:10809   */\n      0x00\n        /* \"#utility.yul\":10805:10806   */\n      dup1\n        /* \"#utility.yul\":10798:10810   */\n      revert\n\n    auxdata: 0xa2646970667358221220c9ae7940801d4662fcdd30394691ef1ffc53e6fa217faedc0dbb11ede3ad441864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7235:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nodeType": "YulIf",
															"src": "115:2:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "271:639:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "320:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "329:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "336:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "322:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "322:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "322:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "299:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "307:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "295:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "295:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "314:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "291:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "291:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "284:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:35:7"
															},
															"nodeType": "YulIf",
															"src": "281:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "353:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "369:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "363:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "357:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "385:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "395:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "389:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "408:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "475:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "435:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "435:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "419:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "412:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "488:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "501:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "492:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "520:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "525:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "513:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "537:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "548:3:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "553:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "565:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "580:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "588:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "576:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "569:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "645:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "654:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "661:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "647:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "647:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "647:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "614:6:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "626:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "629:2:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "622:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "622:10:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:23:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "635:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "606:32:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "640:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "603:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:41:7"
															},
															"nodeType": "YulIf",
															"src": "600:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "678:14:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "687:5:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "682:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "746:135:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "767:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "802:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "772:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "772:34:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "760:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:47:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "760:47:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "820:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "836:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "827:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "827:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "852:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "863:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "868:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "859:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "852:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "712:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "715:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "709:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "709:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "719:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "721:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "730:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "733:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "726:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "726:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "721:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "705:3:7",
																"statements": []
															},
															"src": "701:180:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "890:14:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "899:5:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "890:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "245:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "253:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "261:5:7",
														"type": ""
													}
												],
												"src": "196:714:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "989:1495:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "999:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1009:4:7",
																"type": "",
																"value": "0x1f"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1003:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1059:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1068:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1075:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1061:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1061:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1061:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1040:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1048:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:15:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1053:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1032:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:25:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:7"
															},
															"nodeType": "YulIf",
															"src": "1022:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1092:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1108:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1102:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:13:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1096:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1124:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1134:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1128:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1147:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1214:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "1174:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1174:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1158:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1158:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1151:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1227:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1240:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1231:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1259:3:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1264:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1287:3:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1292:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1276:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1304:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1319:6:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1327:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1308:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1384:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1393:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1400:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1386:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1386:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1386:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1365:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "1368:2:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1361:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1361:10:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1349:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:23:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1374:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:32:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1379:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1342:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:41:7"
															},
															"nodeType": "YulIf",
															"src": "1339:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1417:14:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1426:5:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1421:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1485:970:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1499:29:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1518:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1518:10:7"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "1503:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1541:28:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1559:2:7",
																							"type": "",
																							"value": "64"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1563:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1555:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1555:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1567:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "1551:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1551:18:7"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "1545:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1605:24:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1614:5:7"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1621:5:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1607:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1607:20:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1607:20:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "1588:11:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "1601:2:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1585:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1585:19:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1582:2:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1642:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "1656:6:7"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "1664:11:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1652:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1652:24:7"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "1646:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1722:24:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1731:5:7"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1738:5:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1724:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1724:20:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1724:20:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "1707:2:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1711:2:7",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1703:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1703:11:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1716:3:7"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "1699:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1699:21:7"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "1692:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1692:29:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1689:2:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1759:28:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1779:2:7"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1783:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1775:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1775:11:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1769:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1769:18:7"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "1763:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1814:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x41",
																							"nodeType": "YulIdentifier",
																							"src": "1816:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1816:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1816:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "_6",
																					"nodeType": "YulIdentifier",
																					"src": "1806:2:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "1810:2:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1803:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1803:10:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1800:2:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1849:66:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_6",
																											"nodeType": "YulIdentifier",
																											"src": "1892:2:7"
																										},
																										{
																											"name": "_1",
																											"nodeType": "YulIdentifier",
																											"src": "1896:2:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1888:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1888:11:7"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1905:2:7",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "1901:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1901:7:7"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "1884:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1884:25:7"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1911:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1880:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1880:34:7"
																				}
																			],
																			"functionName": {
																				"name": "allocate_memory",
																				"nodeType": "YulIdentifier",
																				"src": "1864:15:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1864:51:7"
																		},
																		"variables": [
																			{
																				"name": "array_1",
																				"nodeType": "YulTypedName",
																				"src": "1853:7:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array_1",
																					"nodeType": "YulIdentifier",
																					"src": "1935:7:7"
																				},
																				{
																					"name": "_6",
																					"nodeType": "YulIdentifier",
																					"src": "1944:2:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1928:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1928:19:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1928:19:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1960:12:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1970:2:7",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "1964:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2018:24:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "2027:5:7"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "2034:5:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "2020:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2020:20:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2020:20:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "1999:2:7"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "2003:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1995:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1995:11:7"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "2008:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1991:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1991:20:7"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "2013:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1988:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:29:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1985:2:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2055:16:7",
																		"value": {
																			"name": "array",
																			"nodeType": "YulIdentifier",
																			"src": "2066:5:7"
																		},
																		"variables": [
																			{
																				"name": "i_1",
																				"nodeType": "YulTypedName",
																				"src": "2059:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2140:96:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "array_1",
																												"nodeType": "YulIdentifier",
																												"src": "2173:7:7"
																											},
																											{
																												"name": "i_1",
																												"nodeType": "YulIdentifier",
																												"src": "2182:3:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2169:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2169:17:7"
																									},
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2188:2:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2165:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2165:26:7"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "_5",
																														"nodeType": "YulIdentifier",
																														"src": "2207:2:7"
																													},
																													{
																														"name": "i_1",
																														"nodeType": "YulIdentifier",
																														"src": "2211:3:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2203:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2203:12:7"
																											},
																											{
																												"name": "_7",
																												"nodeType": "YulIdentifier",
																												"src": "2217:2:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2199:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2199:21:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2193:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2193:28:7"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "2158:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2158:64:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2158:64:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "2095:3:7"
																				},
																				{
																					"name": "_6",
																					"nodeType": "YulIdentifier",
																					"src": "2100:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2092:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2092:11:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2104:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2106:19:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "i_1",
																								"nodeType": "YulIdentifier",
																								"src": "2117:3:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "2122:2:7"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2113:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2113:12:7"
																					},
																					"variableNames": [
																						{
																							"name": "i_1",
																							"nodeType": "YulIdentifier",
																							"src": "2106:3:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2088:3:7",
																			"statements": []
																		},
																		"src": "2084:152:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2276:72:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "array_1",
																												"nodeType": "YulIdentifier",
																												"src": "2309:7:7"
																											},
																											{
																												"name": "_6",
																												"nodeType": "YulIdentifier",
																												"src": "2318:2:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2305:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2305:16:7"
																									},
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2323:2:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2301:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2301:25:7"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "2328:5:7"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "2294:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2294:40:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2294:40:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "2255:3:7"
																				},
																				{
																					"name": "_6",
																					"nodeType": "YulIdentifier",
																					"src": "2260:2:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "2252:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2252:11:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2249:2:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2368:3:7"
																				},
																				{
																					"name": "array_1",
																					"nodeType": "YulIdentifier",
																					"src": "2373:7:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2361:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2361:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2361:20:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2394:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2405:3:7"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "2410:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2401:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2401:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2394:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2426:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2437:3:7"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "2442:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2433:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2433:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2426:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1451:1:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1454:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1448:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1448:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1458:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1460:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1469:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1472:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1465:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1465:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1460:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1444:3:7",
																"statements": []
															},
															"src": "1440:1015:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2464:14:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2473:5:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2464:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_string_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "963:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "971:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "979:5:7",
														"type": ""
													}
												],
												"src": "915:1569:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2775:1029:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2822:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2831:6:7"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2839:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2824:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2796:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2805:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2817:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2788:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2788:33:7"
															},
															"nodeType": "YulIf",
															"src": "2785:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2897:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2867:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2916:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2960:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2971:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2956:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2956:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2926:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2984:39:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3008:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3019:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2998:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:25:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2988:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3032:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3050:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3054:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3046:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3046:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3058:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3042:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3036:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3087:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3096:6:7"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3104:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3089:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3075:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3083:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3072:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:14:7"
															},
															"nodeType": "YulIf",
															"src": "3069:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3122:81:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3186:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3171:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3195:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3132:38:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:71:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3212:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3238:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3249:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3234:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3228:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3216:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3282:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3291:6:7"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3299:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3284:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3284:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3268:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3278:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3265:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:16:7"
															},
															"nodeType": "YulIf",
															"src": "3262:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3317:84:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3371:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3382:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3393:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3327:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:74:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3317:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3410:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3447:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3426:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:26:7"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3414:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3481:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3490:6:7"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3498:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3483:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3483:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3483:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3467:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3477:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3464:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:16:7"
															},
															"nodeType": "YulIf",
															"src": "3461:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3516:84:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3570:9:7"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3581:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3566:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3566:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3592:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3526:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:74:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3609:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3635:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3646:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3631:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3625:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:26:7"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nodeType": "YulTypedName",
																	"src": "3613:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3680:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "3689:6:7"
																				},
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "3697:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3682:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3682:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3682:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nodeType": "YulIdentifier",
																		"src": "3666:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3676:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3663:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:16:7"
															},
															"nodeType": "YulIf",
															"src": "3660:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3715:83:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3768:9:7"
																			},
																			{
																				"name": "offset_3",
																				"nodeType": "YulIdentifier",
																				"src": "3779:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3764:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3790:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3725:38:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:73:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3715:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2701:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2712:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2724:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2732:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2740:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2748:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2756:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2764:6:7",
														"type": ""
													}
												],
												"src": "2489:1315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3983:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4000:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4034:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4045:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4030:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4030:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4050:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4023:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4023:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4023:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4073:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4084:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4069:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4069:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4089:29:7",
																		"type": "",
																		"value": "nftContract is zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4062:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4062:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4062:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4128:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4140:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4136:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4128:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4a8a5ffdf6154af835b170654284cc0833d932e13c55a495b3559f73ea299f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3960:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3974:4:7",
														"type": ""
													}
												],
												"src": "3809:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4339:237:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4356:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4367:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4349:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4349:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4390:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4401:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4386:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:7",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4379:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4379:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4379:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4429:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4440:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4425:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4425:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4445:34:7",
																		"type": "",
																		"value": "setNftTypes function information"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4500:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4511:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4496:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4496:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4516:17:7",
																		"type": "",
																		"value": " arity mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4489:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4489:45:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4543:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4555:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4566:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4551:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4551:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4dfd2f330a676d1326419f82eeb05a52130ed26733b2b05107e6321b215ade36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4316:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4330:4:7",
														"type": ""
													}
												],
												"src": "4165:411:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4772:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4783:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4765:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4765:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4806:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4817:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4802:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4802:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4822:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4795:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4795:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4845:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4856:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4841:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4841:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4861:34:7",
																		"type": "",
																		"value": "AirdropWrapper can't be modified"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4834:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4834:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4834:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4905:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4917:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4928:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4913:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4913:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4905:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e2542f8cafbb0c5d6331f8ab93ae1f333e1be05184b567329d08fc4b3103194__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4732:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4746:4:7",
														"type": ""
													}
												],
												"src": "4581:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5116:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5133:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5144:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5126:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5167:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5178:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5163:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5163:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5183:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5156:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5156:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5206:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5217:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5202:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5202:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5222:18:7",
																		"type": "",
																		"value": "nftType is empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5195:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5195:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5195:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5250:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5262:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5273:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5258:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f4820ecb86fa038962f1e1e7adaa85fb9e5bc50bd6f8297f5541dfc176887b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5093:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:7",
														"type": ""
													}
												],
												"src": "4942:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5461:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5471:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5471:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5471:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5512:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5523:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5508:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5508:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5528:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5501:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5551:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5562:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5567:25:7",
																		"type": "",
																		"value": "NFT type not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5540:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5540:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5602:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5614:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5625:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5602:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86c8b3f18727dde9a7498ee50083420855086c244c270ea642a5cc069dbfd722__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5438:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5452:4:7",
														"type": ""
													}
												],
												"src": "5287:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5813:239:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5823:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5823:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5823:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5864:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5875:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5860:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5860:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5880:2:7",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5853:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5853:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5903:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5914:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5899:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5899:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5919:34:7",
																		"type": "",
																		"value": "setNFTPermits function informati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5892:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5892:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5974:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5985:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5970:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5970:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5990:19:7",
																		"type": "",
																		"value": "on arity mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5963:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6019:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6031:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6042:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6027:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6019:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b188bf9a199e27127b7f2ce0b6348fba12016e0eab0ae3d2d86fe3db1e62507a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5790:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5804:4:7",
														"type": ""
													}
												],
												"src": "5639:413:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6231:161:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6248:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6259:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6241:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6282:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6293:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6278:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6298:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6271:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6271:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6271:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6321:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6332:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6317:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6317:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6337:13:7",
																		"type": "",
																		"value": "invalid key"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6310:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6310:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6360:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6372:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6383:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6368:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6368:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6360:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1674f01222d591fcbce2c2b6ddff3cecc1eab7d1c1d62d5c9c662bcab901dd8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6208:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6222:4:7",
														"type": ""
													}
												],
												"src": "6057:335:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6442:230:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6452:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6462:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6462:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6452:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6480:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6502:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "6518:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6524:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6514:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6514:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6533:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6529:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6529:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6510:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6484:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6613:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6615:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6615:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6615:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6556:10:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6576:2:7",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6580:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6572:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6572:10:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6584:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6568:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6568:18:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6553:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6553:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6592:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6604:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6589:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6589:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6550:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6550:62:7"
															},
															"nodeType": "YulIf",
															"src": "6547:2:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6651:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6655:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6644:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6644:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6644:22:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6422:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6431:6:7",
														"type": ""
													}
												],
												"src": "6397:275:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6746:114:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6790:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6792:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6792:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6792:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6762:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6778:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6782:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6774:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6774:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6786:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6770:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6770:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6759:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:30:7"
															},
															"nodeType": "YulIf",
															"src": "6756:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6821:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6837:1:7",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6840:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6833:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6833:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6849:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6829:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:25:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6821:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6726:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6737:4:7",
														"type": ""
													}
												],
												"src": "6677:183:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:189:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6951:115:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "6972:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6981:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6986:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6977:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6977:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6965:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6965:33:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6965:33:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7018:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7021:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7011:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7011:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7011:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "7046:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7051:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7039:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7039:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7039:17:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6928:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6939:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6935:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6935:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6925:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:17:7"
															},
															"nodeType": "YulIf",
															"src": "6922:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7075:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7086:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7093:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7082:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7082:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7075:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6894:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6904:3:7",
														"type": ""
													}
												],
												"src": "6865:236:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7138:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7155:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7162:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7167:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7158:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7158:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7148:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7195:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7198:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7188:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7188:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7188:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7219:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7222:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7212:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7212:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7106:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_string_dyn_fromMemory(offset, end) -> array\n    {\n        let _1 := 0x1f\n        if iszero(slt(add(offset, _1), end)) { revert(array, array) }\n        let _2 := mload(offset)\n        let _3 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_2))\n        let dst_1 := dst\n        mstore(dst, _2)\n        dst := add(dst, _3)\n        let src := add(offset, _3)\n        if gt(add(add(offset, shl(5, _2)), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _2) { i := add(i, 1) }\n        {\n            let innerOffset := mload(src)\n            let _4 := sub(shl(64, 1), 1)\n            if gt(innerOffset, _4) { revert(array, array) }\n            let _5 := add(offset, innerOffset)\n            if iszero(slt(add(_5, 63), end)) { revert(array, array) }\n            let _6 := mload(add(_5, _3))\n            if gt(_6, _4) { panic_error_0x41() }\n            let array_1 := allocate_memory(add(and(add(_6, _1), not(31)), _3))\n            mstore(array_1, _6)\n            let _7 := 64\n            if gt(add(add(_5, _6), _7), end) { revert(array, array) }\n            let i_1 := array\n            for { } lt(i_1, _6) { i_1 := add(i_1, _3) }\n            {\n                mstore(add(add(array_1, i_1), _3), mload(add(add(_5, i_1), _7)))\n            }\n            if gt(i_1, _6)\n            {\n                mstore(add(add(array_1, _6), _3), array)\n            }\n            mstore(dst, array_1)\n            dst := add(dst, _3)\n            src := add(src, _3)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_array_string_dyn_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset_2), dataEnd)\n        let offset_3 := mload(add(headStart, 160))\n        if gt(offset_3, _1) { revert(value5, value5) }\n        value5 := abi_decode_array_string_dyn_fromMemory(add(headStart, offset_3), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_4b4a8a5ffdf6154af835b170654284cc0833d932e13c55a495b3559f73ea299f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"nftContract is zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4dfd2f330a676d1326419f82eeb05a52130ed26733b2b05107e6321b215ade36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"setNftTypes function information\")\n        mstore(add(headStart, 96), \" arity mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4e2542f8cafbb0c5d6331f8ab93ae1f333e1be05184b567329d08fc4b3103194__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"AirdropWrapper can't be modified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f4820ecb86fa038962f1e1e7adaa85fb9e5bc50bd6f8297f5541dfc176887b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"nftType is empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_86c8b3f18727dde9a7498ee50083420855086c244c270ea642a5cc069dbfd722__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"NFT type not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b188bf9a199e27127b7f2ce0b6348fba12016e0eab0ae3d2d86fe3db1e62507a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"setNFTPermits function informati\")\n        mstore(add(headStart, 96), \"on arity mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c1674f01222d591fcbce2c2b6ddff3cecc1eab7d1c1d62d5c9c662bcab901dd8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"invalid key\")\n        tail := add(headStart, 96)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200163738038062001637833981016040819052620000349162000736565b85620000408162000080565b50600180546001600160a01b0319166001600160a01b038716179055620000688484620000d0565b620000748282620001c8565b505050505050620008a6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146200013f5760405162461bcd60e51b815260206004820152602f60248201527f7365744e667454797065732066756e6374696f6e20696e666f726d6174696f6e60448201526e040c2e4d2e8f240dad2e6dac2e8c6d608b1b60648201526084015b60405180910390fd5b60005b8151811015620001c357620001ae8382815181106200017157634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106200019a57634e487b7160e01b600052603260045260246000fd5b6020026020010151620002b960201b60201c565b80620001ba8162000868565b91505062000142565b505050565b8051825114620002355760405162461bcd60e51b815260206004820152603160248201527f7365744e46545065726d6974732066756e6374696f6e20696e666f726d6174696044820152700dedc40c2e4d2e8f240dad2e6dac2e8c6d607b1b606482015260840162000136565b60005b8251811015620001c357620002a48382815181106200026757634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106200029057634e487b7160e01b600052603260045260246000fd5b60200260200101516200036f60201b60201c565b80620002b08162000868565b91505062000238565b8151620002fc5760405162461bcd60e51b815260206004820152601060248201526f6e66745479706520697320656d70747960801b604482015260640162000136565b600062000314836200053b60201b620004d41760201c565b60008181526002602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519293509183917f22be69269c1f7d73e73dcb25b710dd88c7aa1cf374c16d945def98df2107c2f891a3505050565b6001600160a01b038216620003c75760405162461bcd60e51b815260206004820152601b60248201527f6e6674436f6e7472616374206973207a65726f20616464726573730000000000604482015260640162000136565b6000620003df826200053b60201b620004d41760201c565b905080156200044e576000818152600260205260409020546001600160a01b03166200044e5760405162461bcd60e51b815260206004820152601760248201527f4e46542074797065206e6f742072656769737465726564000000000000000000604482015260640162000136565b6200048a6040518060400160405280600e81526020016d20b4b9323937b82bb930b83832b960911b8152506200053b60201b620004d41760201c565b6001600160a01b0384166000908152600360205260409020541415620004f35760405162461bcd60e51b815260206004820181905260248201527f41697264726f70577261707065722063616e2774206265206d6f646966696564604482015260640162000136565b6001600160a01b038316600081815260036020526040808220849055518392917f903a211c8bcdc0ab18afc116fc4776504a9aac5c0121be0fda712d399017bd2291a3505050565b60006020825111156200057f5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b604482015260640162000136565b506020015190565b80516001600160a01b03811681146200059f57600080fd5b919050565b600082601f830112620005b5578081fd5b81516020620005ce620005c88362000842565b6200080f565b80838252828201915082860187848660051b8901011115620005ee578586fd5b855b858110156200061757620006048262000587565b84529284019290840190600101620005f0565b5090979650505050505050565b6000601f838184011262000636578182fd5b8251602062000649620005c88362000842565b80838252828201915082870188848660051b8a0101111562000669578687fd5b865b85811015620007285781516001600160401b03808211156200068b57898afd5b818b0191508b603f8301126200069f57898afd5b8682015181811115620006b657620006b662000890565b620006c9818b01601f191689016200080f565b915080825260408d81838601011115620006e1578b8cfd5b8b5b8281101562000700578481018201518482018b01528901620006e3565b8281111562000711578c8a84860101525b50505085525092840192908401906001016200066b565b509098975050505050505050565b60008060008060008060c087890312156200074f578182fd5b6200075a8762000587565b95506200076a6020880162000587565b60408801519095506001600160401b038082111562000787578384fd5b620007958a838b0162000624565b95506060890151915080821115620007ab578384fd5b620007b98a838b01620005a4565b94506080890151915080821115620007cf578384fd5b620007dd8a838b01620005a4565b935060a0890151915080821115620007f3578283fd5b506200080289828a0162000624565b9150509295509295509295565b604051601f8201601f191681016001600160401b03811182821017156200083a576200083a62000890565b604052919050565b60006001600160401b038211156200085e576200085e62000890565b5060051b60200190565b60006000198214156200088957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610d8180620008b66000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806395244b941161006657806395244b941461013a578063b8c8aff81461014d578063c88641a214610160578063d8e4e93e14610173578063f2fde38b1461018657600080fd5b80630a21cc43146100a35780631a3dd0a5146100b8578063365a86fc146100e85780636651f11d146100fb5780638da5cb5b14610132575b600080fd5b6100b66100b1366004610bb4565b610199565b005b6100cb6100c6366004610c0a565b6101df565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100cb906001600160a01b031681565b610124610109366004610ad9565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100df565b6100cb6101fa565b6100b6610148366004610b5e565b610209565b6100cb61015b366004610ad9565b610242565b6100b661016e366004610b11565b61026b565b6100b6610181366004610c22565b6103fb565b6100b6610194366004610ad9565b610434565b336101a26101fa565b6001600160a01b0316146101d15760405162461bcd60e51b81526004016101c890610c71565b60405180910390fd5b6101db828261051e565b5050565b6000908152600260205260409020546001600160a01b031690565b6000546001600160a01b031690565b336102126101fa565b6001600160a01b0316146102385760405162461bcd60e51b81526004016101c890610c71565b6101db82826105fd565b6001600160a01b038116600090815260036020526040812054610264816101df565b9392505050565b8061029b6040518060400160405280600e81526020016d20b4b9323937b82bb930b83832b960911b8152506104d4565b6102a4826104d4565b14156103975733600154604051631c2d8fb360e31b81526e41495244524f505f464143544f525960881b60048201526001600160a01b03928316929091169063e16c7d989060240160206040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610af5565b6001600160a01b0316146103925760405162461bcd60e51b815260206004820152601c60248201527f63616c6c6572206973206e6f742041697264726f70466163746f72790000000060448201526064016101c8565b6103ec565b336103a06101fa565b6001600160a01b0316146103ec5760405162461bcd60e51b815260206004820152601360248201527231b0b63632b91034b9903737ba1037bbb732b960691b60448201526064016101c8565b6103f683836106de565b505050565b336104046101fa565b6001600160a01b03161461042a5760405162461bcd60e51b81526004016101c890610c71565b6101db8282610881565b3361043d6101fa565b6001600160a01b0316146104635760405162461bcd60e51b81526004016101c890610c71565b6001600160a01b0381166104c85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c8565b6104d181610928565b50565b60006020825111156105165760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b60448201526064016101c8565b506020015190565b80518251146105875760405162461bcd60e51b815260206004820152602f60248201527f7365744e667454797065732066756e6374696f6e20696e666f726d6174696f6e60448201526e040c2e4d2e8f240dad2e6dac2e8c6d608b1b60648201526084016101c8565b60005b81518110156103f6576105eb8382815181106105b657634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106105de57634e487b7160e01b600052603260045260246000fd5b6020026020010151610881565b806105f581610cf9565b91505061058a565b80518251146106685760405162461bcd60e51b815260206004820152603160248201527f7365744e46545065726d6974732066756e6374696f6e20696e666f726d6174696044820152700dedc40c2e4d2e8f240dad2e6dac2e8c6d607b1b60648201526084016101c8565b60005b82518110156103f6576106cc83828151811061069757634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106106bf57634e487b7160e01b600052603260045260246000fd5b60200260200101516106de565b806106d681610cf9565b91505061066b565b6001600160a01b0382166107345760405162461bcd60e51b815260206004820152601b60248201527f6e6674436f6e7472616374206973207a65726f2061646472657373000000000060448201526064016101c8565b600061073f826104d4565b905080156107a3576000610752826101df565b6001600160a01b031614156107a35760405162461bcd60e51b8152602060048201526017602482015276139195081d1e5c19481b9bdd081c9959da5cdd195c9959604a1b60448201526064016101c8565b6107d26040518060400160405280600e81526020016d20b4b9323937b82bb930b83832b960911b8152506104d4565b6001600160a01b03841660009081526003602052604090205414156108395760405162461bcd60e51b815260206004820181905260248201527f41697264726f70577261707065722063616e2774206265206d6f64696669656460448201526064016101c8565b6001600160a01b038316600081815260036020526040808220849055518392917f903a211c8bcdc0ab18afc116fc4776504a9aac5c0121be0fda712d399017bd2291a3505050565b81516108c25760405162461bcd60e51b815260206004820152601060248201526f6e66745479706520697320656d70747960801b60448201526064016101c8565b60006108cd836104d4565b60008181526002602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519293509183917f22be69269c1f7d73e73dcb25b710dd88c7aa1cf374c16d945def98df2107c2f891a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f830112610988578081fd5b8135602061099d61099883610cd6565b610ca6565b80838252828201915082860187848660051b89010111156109bc578586fd5b855b858110156109e35781356109d181610d36565b845292840192908401906001016109be565b5090979650505050505050565b600082601f830112610a00578081fd5b81356020610a1061099883610cd6565b80838252828201915082860187848660051b8901011115610a2f578586fd5b855b858110156109e35781356001600160401b03811115610a4e578788fd5b610a5c8a87838c0101610a6f565b8552509284019290840190600101610a31565b600082601f830112610a7f578081fd5b81356001600160401b03811115610a9857610a98610d20565b610aab601f8201601f1916602001610ca6565b818152846020838601011115610abf578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610aea578081fd5b813561026481610d36565b600060208284031215610b06578081fd5b815161026481610d36565b60008060408385031215610b23578081fd5b8235610b2e81610d36565b915060208301356001600160401b03811115610b48578182fd5b610b5485828601610a6f565b9150509250929050565b60008060408385031215610b70578182fd5b82356001600160401b0380821115610b86578384fd5b610b9286838701610978565b93506020850135915080821115610ba7578283fd5b50610b54858286016109f0565b60008060408385031215610bc6578182fd5b82356001600160401b0380821115610bdc578384fd5b610be8868387016109f0565b93506020850135915080821115610bfd578283fd5b50610b5485828601610978565b600060208284031215610c1b578081fd5b5035919050565b60008060408385031215610c34578182fd5b82356001600160401b03811115610c49578283fd5b610c5585828601610a6f565b9250506020830135610c6681610d36565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715610cce57610cce610d20565b604052919050565b60006001600160401b03821115610cef57610cef610d20565b5060051b60200190565b6000600019821415610d1957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104d157600080fdfea2646970667358221220c9ae7940801d4662fcdd30394691ef1ffc53e6fa217faedc0dbb11ede3ad441864736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1637 CODESIZE SUB DUP1 PUSH3 0x1637 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x736 JUMP JUMPDEST DUP6 PUSH3 0x40 DUP2 PUSH3 0x80 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE PUSH3 0x68 DUP5 DUP5 PUSH3 0xD0 JUMP JUMPDEST PUSH3 0x74 DUP3 DUP3 PUSH3 0x1C8 JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x8A6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x13F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744E667454797065732066756E6374696F6E20696E666F726D6174696F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x40C2E4D2E8F240DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x1C3 JUMPI PUSH3 0x1AE DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x171 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x19A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x2B9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH3 0x1BA DUP2 PUSH3 0x868 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x142 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744E46545065726D6974732066756E6374696F6E20696E666F726D617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0xDEDC40C2E4D2E8F240DAD2E6DAC2E8C6D PUSH1 0x7B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x136 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x1C3 JUMPI PUSH3 0x2A4 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x267 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x290 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x36F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH3 0x2B0 DUP2 PUSH3 0x868 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x238 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E66745479706520697320656D707479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x136 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x314 DUP4 PUSH3 0x53B PUSH1 0x20 SHL PUSH3 0x4D4 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP3 SWAP4 POP SWAP2 DUP4 SWAP2 PUSH32 0x22BE69269C1F7D73E73DCB25B710DD88C7AA1CF374C16D945DEF98DF2107C2F8 SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6674436F6E7472616374206973207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x136 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DF DUP3 PUSH3 0x53B PUSH1 0x20 SHL PUSH3 0x4D4 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x44E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E46542074797065206E6F742072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x136 JUMP JUMPDEST PUSH3 0x48A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x20B4B9323937B82BB930B83832B9 PUSH1 0x91 SHL DUP2 MSTORE POP PUSH3 0x53B PUSH1 0x20 SHL PUSH3 0x4D4 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ ISZERO PUSH3 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F70577261707065722063616E2774206265206D6F646966696564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x136 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0x903A211C8BCDC0AB18AFC116FC4776504A9AAC5C0121BE0FDA712D399017BD22 SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD GT ISZERO PUSH3 0x57F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x696E76616C6964206B6579 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x136 JUMP JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5B5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH3 0x5CE PUSH3 0x5C8 DUP4 PUSH3 0x842 JUMP JUMPDEST PUSH3 0x80F JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH3 0x5EE JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x617 JUMPI PUSH3 0x604 DUP3 PUSH3 0x587 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x5F0 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT PUSH3 0x636 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 PUSH3 0x649 PUSH3 0x5C8 DUP4 PUSH3 0x842 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP8 ADD DUP9 DUP5 DUP7 PUSH1 0x5 SHL DUP11 ADD ADD GT ISZERO PUSH3 0x669 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x728 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x68B JUMPI DUP10 DUP11 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x3F DUP4 ADD SLT PUSH3 0x69F JUMPI DUP10 DUP11 REVERT JUMPDEST DUP7 DUP3 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x6B6 JUMPI PUSH3 0x6B6 PUSH3 0x890 JUMP JUMPDEST PUSH3 0x6C9 DUP2 DUP12 ADD PUSH1 0x1F NOT AND DUP10 ADD PUSH3 0x80F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x40 DUP14 DUP2 DUP4 DUP7 ADD ADD GT ISZERO PUSH3 0x6E1 JUMPI DUP12 DUP13 REVERT JUMPDEST DUP12 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x700 JUMPI DUP5 DUP2 ADD DUP3 ADD MLOAD DUP5 DUP3 ADD DUP12 ADD MSTORE DUP10 ADD PUSH3 0x6E3 JUMP JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x711 JUMPI DUP13 DUP11 DUP5 DUP7 ADD ADD MSTORE JUMPDEST POP POP POP DUP6 MSTORE POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x66B JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x74F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x75A DUP8 PUSH3 0x587 JUMP JUMPDEST SWAP6 POP PUSH3 0x76A PUSH1 0x20 DUP9 ADD PUSH3 0x587 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x787 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x795 DUP11 DUP4 DUP12 ADD PUSH3 0x624 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x7AB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x7B9 DUP11 DUP4 DUP12 ADD PUSH3 0x5A4 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x7CF JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x7DD DUP11 DUP4 DUP12 ADD PUSH3 0x5A4 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x7F3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x802 DUP10 DUP3 DUP11 ADD PUSH3 0x624 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x83A JUMPI PUSH3 0x83A PUSH3 0x890 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH3 0x85E JUMPI PUSH3 0x85E PUSH3 0x890 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD81 DUP1 PUSH3 0x8B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95244B94 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95244B94 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xB8C8AFF8 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xC88641A2 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xD8E4E93E EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA21CC43 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1A3DD0A5 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x365A86FC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6651F11D EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0xCB PUSH2 0x1FA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST CALLER PUSH2 0x1A2 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x212 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x238 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x1DB DUP3 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x264 DUP2 PUSH2 0x1DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x29B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x20B4B9323937B82BB930B83832B9 PUSH1 0x91 SHL DUP2 MSTORE POP PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x2A4 DUP3 PUSH2 0x4D4 JUMP JUMPDEST EQ ISZERO PUSH2 0x397 JUMPI CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C2D8FB3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH15 0x41495244524F505F464143544F5259 PUSH1 0x88 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE16C7D98 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F742041697264726F70466163746F727900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST CALLER PUSH2 0x3A0 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x31B0B63632B91034B9903737BA1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x3F6 DUP4 DUP4 PUSH2 0x6DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH2 0x404 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x1DB DUP3 DUP3 PUSH2 0x881 JUMP JUMPDEST CALLER PUSH2 0x43D PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x4D1 DUP2 PUSH2 0x928 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD GT ISZERO PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x696E76616C6964206B6579 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x587 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744E667454797065732066756E6374696F6E20696E666F726D6174696F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x40C2E4D2E8F240DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x5EB DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x881 JUMP JUMPDEST DUP1 PUSH2 0x5F5 DUP2 PUSH2 0xCF9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x58A JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744E46545065726D6974732066756E6374696F6E20696E666F726D617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0xDEDC40C2E4D2E8F240DAD2E6DAC2E8C6D PUSH1 0x7B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x6CC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x697 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6DE JUMP JUMPDEST DUP1 PUSH2 0x6D6 DUP2 PUSH2 0xCF9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6674436F6E7472616374206973207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F DUP3 PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 PUSH2 0x752 DUP3 PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x139195081D1E5C19481B9BDD081C9959DA5CDD195C9959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x7D2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x20B4B9323937B82BB930B83832B9 PUSH1 0x91 SHL DUP2 MSTORE POP PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F70577261707065722063616E2774206265206D6F646966696564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0x903A211C8BCDC0AB18AFC116FC4776504A9AAC5C0121BE0FDA712D399017BD22 SWAP2 LOG3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E66745479706520697320656D707479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CD DUP4 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP3 SWAP4 POP SWAP2 DUP4 SWAP2 PUSH32 0x22BE69269C1F7D73E73DCB25B710DD88C7AA1CF374C16D945DEF98DF2107C2F8 SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x988 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x99D PUSH2 0x998 DUP4 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x9BC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI DUP2 CALLDATALOAD PUSH2 0x9D1 DUP2 PUSH2 0xD36 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x9BE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA10 PUSH2 0x998 DUP4 PUSH2 0xCD6 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0xA2F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA4E JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0xA5C DUP11 DUP8 DUP4 DUP13 ADD ADD PUSH2 0xA6F JUMP JUMPDEST DUP6 MSTORE POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA7F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA98 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xAAB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xCA6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xABF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x264 DUP2 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB06 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x264 DUP2 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB23 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB2E DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB48 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB70 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xB86 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xB92 DUP7 DUP4 DUP8 ADD PUSH2 0x978 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBA7 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBC6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xBDC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xBE8 DUP7 DUP4 DUP8 ADD PUSH2 0x9F0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBFD JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC34 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC49 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xC55 DUP6 DUP3 DUP7 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC66 DUP2 PUSH2 0xD36 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCE PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0xCEF JUMPI PUSH2 0xCEF PUSH2 0xD20 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xD19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xAE PUSH26 0x40801D4662FCDD30394691EF1FFC53E6FA217FAEDC0DBB11EDE3 0xAD DIFFICULTY XOR PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "416:9766:1:-:0;;;2714:438;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2972:6;1264:24:6;2972:6:1;1264:9:6;:24::i;:::-;-1:-1:-1;2990:3:1::1;:26:::0;;-1:-1:-1;;;;;;2990:26:1::1;-1:-1:-1::0;;;;;2990:26:1;::::1;;::::0;;3026:51:::1;3039:16:::0;3057:19;3026:12:::1;:51::i;:::-;3087:58;3102:22:::0;3126:18;3087:14:::1;:58::i;:::-;2714:438:::0;;;;;;416:9766;;1847:172:6;1903:16;1922:6;;-1:-1:-1;;;;;1938:18:6;;;-1:-1:-1;;;;;;1938:18:6;;;;;;1971:41;;1922:6;;;;;;;1971:41;;1903:16;1971:41;1847:172;;:::o;7982:332:1:-;8109:12;:19;8089:9;:16;:39;8081:99;;;;-1:-1:-1;;;8081:99:1;;4367:2:7;8081:99:1;;;4349:21:7;4406:2;4386:18;;;4379:30;4445:34;4425:18;;;4418:62;-1:-1:-1;;;4496:18:7;;;4489:45;4551:19;;8081:99:1;;;;;;;;;8196:9;8191:117;8215:12;:19;8211:1;:23;8191:117;;;8255:42;8267:9;8277:1;8267:12;;;;;;-1:-1:-1;;;8267:12:1;;;;;;;;;;;;;;;8281;8294:1;8281:15;;;;;;-1:-1:-1;;;8281:15:1;;;;;;;;;;;;;;;8255:11;;;:42;;:::i;:::-;8236:3;;;;:::i;:::-;;;;8191:117;;;;7982:332;;:::o;9838:342::-;9972:9;:16;9948:13;:20;:40;9940:102;;;;-1:-1:-1;;;9940:102:1;;5841:2:7;9940:102:1;;;5823:21:7;5880:2;5860:18;;;5853:30;5919:34;5899:18;;;5892:62;-1:-1:-1;;;5970:18:7;;;5963:47;6027:19;;9940:102:1;5813:239:7;9940:102:1;10058:9;10053:121;10077:13;:20;10073:1;:24;10053:121;;;10118:45;10132:13;10146:1;10132:16;;;;;;-1:-1:-1;;;10132:16:1;;;;;;;;;;;;;;;10150:9;10160:1;10150:12;;;;;;-1:-1:-1;;;10150:12:1;;;;;;;;;;;;;;;10118:13;;;:45;;:::i;:::-;10099:3;;;;:::i;:::-;;;;10053:121;;7246:317;7339:22;;7331:56;;;;-1:-1:-1;;;7331:56:1;;5144:2:7;7331:56:1;;;5126:21:7;5183:2;5163:18;;;5156:30;-1:-1:-1;;;5202:18:7;;;5195:46;5258:18;;7331:56:1;5116:166:7;7331:56:1;7397:18;7418:41;7450:8;7418:31;;;;;:41;;:::i;:::-;7470:20;;;;:8;:20;;;;;;:34;;-1:-1:-1;;;;;;7470:34:1;-1:-1:-1;;;;;7470:34:1;;;;;;;;7520:36;;7470:20;;-1:-1:-1;7470:34:1;:20;;7520:36;;;7246:317;;;:::o;8758:651::-;-1:-1:-1;;;;;8854:26:1;;8846:66;;;;-1:-1:-1;;;8846:66:1;;4011:2:7;8846:66:1;;;3993:21:7;4050:2;4030:18;;;4023:30;4089:29;4069:18;;;4062:57;4136:18;;8846:66:1;3983:177:7;8846:66:1;8922:18;8943:41;8975:8;8943:31;;;;;:41;;:::i;:::-;8922:62;-1:-1:-1;8999:15:1;;8995:125;;9079:1;6846:18;;;:8;:18;;;;;;-1:-1:-1;;;;;6846:18:1;9030:79;;;;-1:-1:-1;;;9030:79:1;;5489:2:7;9030:79:1;;;5471:21:7;5528:2;5508:18;;;5501:30;5567:25;5547:18;;;5540:53;5610:18;;9030:79:1;5461:173:7;9030:79:1;9179:68;9211:35;;;;;;;;;;;;;-1:-1:-1;;;9211:35:1;;;9179:31;;;;;:68;;:::i;:::-;-1:-1:-1;;;;;9151:24:1;;;;;;:10;:24;;;;;;:96;;9130:175;;;;-1:-1:-1;;;9130:175:1;;4783:2:7;9130:175:1;;;4765:21:7;;;4802:18;;;4795:30;4861:34;4841:18;;;4834:62;4913:18;;9130:175:1;4755:182:7;9130:175:1;-1:-1:-1;;;;;9315:24:1;;;;;;:10;:24;;;;;;:37;;;9367:35;9342:10;;9315:24;9367:35;;;8758:651;;;:::o;1365:273:5:-;1436:10;1488:2;1472:4;1466:18;:24;;1458:48;;;;-1:-1:-1;;;1458:48:5;;6259:2:7;1458:48:5;;;6241:21:7;6298:2;6278:18;;;6271:30;-1:-1:-1;;;6317:18:7;;;6310:41;6368:18;;1458:48:5;6231:161:7;1458:48:5;-1:-1:-1;1618:2:5;1608:13;1602:20;;1582:50::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:714::-;261:5;314:3;307:4;299:6;295:17;291:27;281:2;;336:5;329;322:20;281:2;369:6;363:13;395:4;419:60;435:43;475:2;435:43;:::i;:::-;419:60;:::i;:::-;501:3;525:2;520:3;513:15;553:2;548:3;544:12;537:19;;588:2;580:6;576:15;640:3;635:2;629;626:1;622:10;614:6;610:23;606:32;603:41;600:2;;;661:5;654;647:20;600:2;687:5;701:180;715:2;712:1;709:9;701:180;;;772:34;802:3;772:34;:::i;:::-;760:47;;827:12;;;;859;;;;733:1;726:9;701:180;;;-1:-1:-1;899:5:7;;271:639;-1:-1:-1;;;;;;;271:639:7:o;915:1569::-;979:5;1009:4;1053:3;1048:2;1040:6;1036:15;1032:25;1022:2;;1075:5;1068;1061:20;1022:2;1108:6;1102:13;1134:4;1158:60;1174:43;1214:2;1174:43;:::i;1158:60::-;1240:3;1264:2;1259:3;1252:15;1292:2;1287:3;1283:12;1276:19;;1327:2;1319:6;1315:15;1379:3;1374:2;1368;1365:1;1361:10;1353:6;1349:23;1345:32;1342:41;1339:2;;;1400:5;1393;1386:20;1339:2;1426:5;1440:1015;1454:2;1451:1;1448:9;1440:1015;;;1518:10;;-1:-1:-1;;;;;1585:19:7;;;1582:2;;;1621:5;1614;1607:20;1582:2;1664:11;1656:6;1652:24;1642:34;;1716:3;1711:2;1707;1703:11;1699:21;1689:2;;1738:5;1731;1724:20;1689:2;1783;1779;1775:11;1769:18;1810:2;1806;1803:10;1800:2;;;1816:18;;:::i;:::-;1864:51;1888:11;;;-1:-1:-1;;1884:25:7;1880:34;;1864:51;:::i;:::-;1849:66;;1944:2;1935:7;1928:19;1970:2;2013:3;2008:2;2003;1999;1995:11;1991:20;1988:29;1985:2;;;2034:5;2027;2020:20;1985:2;2066:5;2084:152;2100:2;2095:3;2092:11;2084:152;;;2203:12;;;2199:21;;2193:28;2169:17;;;2165:26;;2158:64;2113:12;;2084:152;;;2260:2;2255:3;2252:11;2249:2;;;2328:5;2323:2;2318;2309:7;2305:16;2301:25;2294:40;2249:2;-1:-1:-1;;;2361:20:7;;-1:-1:-1;2401:12:7;;;;2433;;;;1472:1;1465:9;1440:1015;;;-1:-1:-1;2473:5:7;;989:1495;-1:-1:-1;;;;;;;;989:1495:7:o;2489:1315::-;2724:6;2732;2740;2748;2756;2764;2817:3;2805:9;2796:7;2792:23;2788:33;2785:2;;;2839:6;2831;2824:22;2785:2;2867:40;2897:9;2867:40;:::i;:::-;2857:50;;2926:49;2971:2;2960:9;2956:18;2926:49;:::i;:::-;3019:2;3004:18;;2998:25;2916:59;;-1:-1:-1;;;;;;3072:14:7;;;3069:2;;;3104:6;3096;3089:22;3069:2;3132:71;3195:7;3186:6;3175:9;3171:22;3132:71;:::i;:::-;3122:81;;3249:2;3238:9;3234:18;3228:25;3212:41;;3278:2;3268:8;3265:16;3262:2;;;3299:6;3291;3284:22;3262:2;3327:74;3393:7;3382:8;3371:9;3367:24;3327:74;:::i;:::-;3317:84;;3447:3;3436:9;3432:19;3426:26;3410:42;;3477:2;3467:8;3464:16;3461:2;;;3498:6;3490;3483:22;3461:2;3526:74;3592:7;3581:8;3570:9;3566:24;3526:74;:::i;:::-;3516:84;;3646:3;3635:9;3631:19;3625:26;3609:42;;3676:2;3666:8;3663:16;3660:2;;;3697:6;3689;3682:22;3660:2;;3725:73;3790:7;3779:8;3768:9;3764:24;3725:73;:::i;:::-;3715:83;;;2775:1029;;;;;;;;:::o;6397:275::-;6468:2;6462:9;6533:2;6514:13;;-1:-1:-1;;6510:27:7;6498:40;;-1:-1:-1;;;;;6553:34:7;;6589:22;;;6550:62;6547:2;;;6615:18;;:::i;:::-;6651:2;6644:22;6442:230;;-1:-1:-1;6442:230:7:o;6677:183::-;6737:4;-1:-1:-1;;;;;6759:30:7;;6756:2;;;6792:18;;:::i;:::-;-1:-1:-1;6837:1:7;6833:14;6849:4;6829:25;;6746:114::o;6865:236::-;6904:3;-1:-1:-1;;6925:17:7;;6922:2;;;-1:-1:-1;;;6965:33:7;;7021:4;7018:1;7011:15;7051:4;6972:3;7039:17;6922:2;-1:-1:-1;7093:1:7;7082:13;;6912:189::o;7106:127::-;7167:10;7162:3;7158:20;7155:1;7148:31;7198:4;7195:1;7188:15;7222:4;7219:1;7212:15;7138:95;416:9766:1;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10820:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:704:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "136:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "143:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:7"
															},
															"nodeType": "YulIf",
															"src": "88:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "160:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "183:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "170:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "164:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "199:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "209:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "203:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "222:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "289:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "249:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "249:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "233:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "226:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "302:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "315:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "306:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "334:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "339:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "327:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "351:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "362:3:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "367:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "351:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "379:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "402:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "390:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "383:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "459:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "468:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "475:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "461:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "461:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "461:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "428:6:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "440:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "443:2:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "436:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "436:10:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "424:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "424:23:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "449:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "420:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "420:32:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "454:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "417:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:41:7"
															},
															"nodeType": "YulIf",
															"src": "414:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "492:14:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "501:5:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "496:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "560:193:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "574:30:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "600:3:7"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "587:12:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "587:17:7"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "578:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "642:5:7"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "617:24:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "617:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "617:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "668:3:7"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "673:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "661:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "661:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "661:18:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "692:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "703:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "708:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "699:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "724:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "735:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "740:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "731:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "724:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "526:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "529:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "523:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "533:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "535:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "544:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "547:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "540:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "535:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "519:3:7",
																"statements": []
															},
															"src": "515:238:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "762:14:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "771:5:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "762:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:7",
														"type": ""
													}
												],
												"src": "14:768:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "850:794:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "899:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "908:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "915:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "901:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "901:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "901:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "878:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "886:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "874:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "874:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "893:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "870:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "863:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:35:7"
															},
															"nodeType": "YulIf",
															"src": "860:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "932:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "955:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "942:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "936:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "971:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "981:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "975:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "994:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1061:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "1021:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1005:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "998:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1074:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1087:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1078:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1106:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1111:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1099:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1099:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1123:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1134:3:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1139:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1130:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1151:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1166:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1174:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1162:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1155:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1240:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1247:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1200:6:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1212:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1215:2:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1208:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1208:10:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1196:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1196:23:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1221:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1192:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1192:32:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1226:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1189:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:41:7"
															},
															"nodeType": "YulIf",
															"src": "1186:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:14:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1273:5:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1268:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1332:283:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1346:36:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1378:3:7"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "1365:12:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:17:7"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "1350:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1434:24:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:7"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1450:5:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1436:20:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:20:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "1401:11:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1414:18:7",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1398:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:35:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1395:2:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1478:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "1509:6:7"
																										},
																										{
																											"name": "innerOffset",
																											"nodeType": "YulIdentifier",
																											"src": "1517:11:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1505:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1505:24:7"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1531:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1501:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1501:33:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1536:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_string",
																						"nodeType": "YulIdentifier",
																						"src": "1483:17:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1483:57:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1471:70:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1471:70:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1554:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1565:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1570:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1561:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1561:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1554:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1586:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1597:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1602:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1593:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1586:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1298:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1301:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1295:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1295:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1305:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1307:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1316:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1319:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1312:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1312:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1307:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1291:3:7",
																"statements": []
															},
															"src": "1287:328:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1624:14:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1633:5:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1624:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_string_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "824:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "832:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "840:5:7",
														"type": ""
													}
												],
												"src": "787:857:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:498:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1760:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1767:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1753:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1753:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1753:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1738:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1726:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1726:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1745:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1722:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:35:7"
															},
															"nodeType": "YulIf",
															"src": "1712:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1784:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1807:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1794:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1794:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1788:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1853:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1855:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1855:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1829:2:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1833:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1826:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:26:7"
															},
															"nodeType": "YulIf",
															"src": "1823:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1884:70:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1927:2:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1931:4:7",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1923:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1923:13:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1942:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1938:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1938:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1919:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1919:27:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1948:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1915:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1915:38:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1899:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:55:7"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "1888:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "1970:7:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1979:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1963:19:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2039:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2046:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2032:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2032:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2005:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2013:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2001:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2001:15:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2018:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1997:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1997:26:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1994:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:35:7"
															},
															"nodeType": "YulIf",
															"src": "1991:2:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2080:7:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2089:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2076:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2100:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2108:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2096:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:17:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2115:2:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2063:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2063:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "2142:7:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2138:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2138:16:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2156:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2134:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2134:27:7"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2163:5:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2178:16:7",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "2187:7:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2178:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1676:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1684:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1692:5:7",
														"type": ""
													}
												],
												"src": "1649:551:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2275:187:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2321:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2330:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2338:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2323:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2323:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2323:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2296:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2292:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2292:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2317:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2288:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2288:32:7"
															},
															"nodeType": "YulIf",
															"src": "2285:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2356:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2369:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2360:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2426:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2401:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2401:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2441:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2451:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2241:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2252:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2264:6:7",
														"type": ""
													}
												],
												"src": "2205:257:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:180:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2603:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2611:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2596:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2569:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2578:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2590:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:32:7"
															},
															"nodeType": "YulIf",
															"src": "2558:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2629:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2642:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2633:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2667:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2667:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2707:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2717:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2514:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2525:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2537:6:7",
														"type": ""
													}
												],
												"src": "2467:261:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2830:380:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2876:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2885:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2893:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2878:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2878:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2878:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2851:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2860:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2847:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2847:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2843:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:32:7"
															},
															"nodeType": "YulIf",
															"src": "2840:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2911:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2937:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2924:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2915:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2981:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2956:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2956:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2996:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3006:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2996:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3020:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3051:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3062:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3034:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3024:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3109:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3118:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3126:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3111:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3111:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3111:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3081:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:30:7"
															},
															"nodeType": "YulIf",
															"src": "3075:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3144:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3196:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3154:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:50:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2788:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2799:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2811:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2819:6:7",
														"type": ""
													}
												],
												"src": "2733:477:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3362:487:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3408:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3417:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3425:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3410:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3410:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3410:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3383:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3392:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3379:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3379:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3404:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3375:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3375:32:7"
															},
															"nodeType": "YulIf",
															"src": "3372:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3443:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3470:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3457:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3447:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3489:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3499:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3493:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3544:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3553:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3561:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3546:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3546:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3546:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3532:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3540:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3529:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3529:14:7"
															},
															"nodeType": "YulIf",
															"src": "3526:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3579:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3622:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3633:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3618:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3618:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3642:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3589:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3659:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3692:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3703:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3688:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3688:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3675:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3663:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3736:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3745:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3753:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3738:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3738:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3738:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3722:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3732:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3719:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:16:7"
															},
															"nodeType": "YulIf",
															"src": "3716:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3771:72:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3813:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3824:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3835:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3781:27:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:62:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3771:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3320:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3331:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3343:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3351:6:7",
														"type": ""
													}
												],
												"src": "3215:634:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4001:487:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4047:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4056:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4064:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4049:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4049:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4049:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4022:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4014:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4014:32:7"
															},
															"nodeType": "YulIf",
															"src": "4011:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4082:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4109:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4096:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4086:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4128:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4138:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4132:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4183:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4192:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4200:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4185:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4185:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4185:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4171:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4179:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4168:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4168:14:7"
															},
															"nodeType": "YulIf",
															"src": "4165:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4218:70:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4260:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4271:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4256:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4256:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4280:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4228:27:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:60:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4218:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4297:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4313:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4313:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4301:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4374:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "4383:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "4391:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4376:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4376:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4376:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4360:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4370:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4357:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:16:7"
															},
															"nodeType": "YulIf",
															"src": "4354:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4409:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4452:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4463:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4448:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4448:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4474:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4419:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3959:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3970:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3982:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3990:6:7",
														"type": ""
													}
												],
												"src": "3854:634:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4563:120:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4609:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4618:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4626:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4611:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4611:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4611:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4584:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4593:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4580:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4605:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4576:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:32:7"
															},
															"nodeType": "YulIf",
															"src": "4573:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4644:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4667:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4654:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4644:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4529:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4540:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4552:6:7",
														"type": ""
													}
												],
												"src": "4493:190:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4785:380:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4831:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4840:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4848:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4833:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4833:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4833:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4806:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4815:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4802:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4802:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4827:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4798:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:32:7"
															},
															"nodeType": "YulIf",
															"src": "4795:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4866:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4893:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4880:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4870:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4946:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4955:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4963:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4948:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4948:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4948:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4918:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4926:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4915:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:30:7"
															},
															"nodeType": "YulIf",
															"src": "4912:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4981:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5013:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5024:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5009:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5033:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4991:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5050:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5080:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5091:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5076:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5063:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5063:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5054:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5129:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5104:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5104:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5144:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5154:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5144:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4754:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4766:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4774:6:7",
														"type": ""
													}
												],
												"src": "4688:477:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5281:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5293:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5289:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5281:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5323:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5338:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5354:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5359:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5350:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5350:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5363:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5346:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5346:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5334:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5334:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5316:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5316:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5240:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5251:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5262:4:7",
														"type": ""
													}
												],
												"src": "5170:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5479:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5489:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5501:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5512:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5497:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5489:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5531:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5542:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5448:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5459:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5470:4:7",
														"type": ""
													}
												],
												"src": "5378:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5678:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5688:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5700:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5711:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5696:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5688:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5730:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5745:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5761:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5766:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5757:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5757:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5770:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5753:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5753:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5741:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5741:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5723:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5723:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INftfiHub_$483__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5647:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5658:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5669:4:7",
														"type": ""
													}
												],
												"src": "5560:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5959:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5976:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5987:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5969:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5969:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5969:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6010:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6021:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6026:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5999:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5999:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6049:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6060:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6045:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6065:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6038:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6038:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6120:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6131:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6116:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6136:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6109:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6109:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6154:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6166:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6177:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6162:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6154:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5936:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5950:4:7",
														"type": ""
													}
												],
												"src": "5785:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6366:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6383:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6376:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6376:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6417:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6428:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6413:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6433:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6406:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6406:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6406:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6456:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6467:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6472:29:7",
																		"type": "",
																		"value": "nftContract is zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6445:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6445:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6445:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6511:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6523:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6534:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6519:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6511:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4a8a5ffdf6154af835b170654284cc0833d932e13c55a495b3559f73ea299f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6343:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6357:4:7",
														"type": ""
													}
												],
												"src": "6192:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6722:237:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6732:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6732:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6732:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6773:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6784:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6769:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6769:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:2:7",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6762:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6762:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6812:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6823:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6808:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6808:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6828:34:7",
																		"type": "",
																		"value": "setNftTypes function information"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6801:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6883:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6894:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6879:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6899:17:7",
																		"type": "",
																		"value": " arity mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:45:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6926:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6938:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6949:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6934:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6934:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6926:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4dfd2f330a676d1326419f82eeb05a52130ed26733b2b05107e6321b215ade36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6699:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6713:4:7",
														"type": ""
													}
												],
												"src": "6548:411:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7138:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7148:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7200:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7185:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7205:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7178:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7228:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7239:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7224:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7244:34:7",
																		"type": "",
																		"value": "AirdropWrapper can't be modified"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7217:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7288:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7300:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7311:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7288:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e2542f8cafbb0c5d6331f8ab93ae1f333e1be05184b567329d08fc4b3103194__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7115:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7129:4:7",
														"type": ""
													}
												],
												"src": "6964:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7499:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7516:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7527:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7509:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7509:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7509:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7550:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7561:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7546:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7566:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7539:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7539:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7539:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7589:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7600:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7585:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7585:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7605:18:7",
																		"type": "",
																		"value": "nftType is empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7578:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7578:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7578:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7633:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7645:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7641:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7641:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7633:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f4820ecb86fa038962f1e1e7adaa85fb9e5bc50bd6f8297f5541dfc176887b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7476:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7490:4:7",
														"type": ""
													}
												],
												"src": "7325:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7844:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7861:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7872:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7854:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7895:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7906:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7891:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7891:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7884:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7934:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7945:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7930:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7930:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7950:21:7",
																		"type": "",
																		"value": "caller is not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7923:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7923:49:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7981:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7993:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8004:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7989:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7981:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7821:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7835:4:7",
														"type": ""
													}
												],
												"src": "7670:343:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8192:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8209:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8220:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8202:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8254:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8239:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8259:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8232:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8282:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8293:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8298:25:7",
																		"type": "",
																		"value": "NFT type not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8271:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8271:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8333:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8345:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8341:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8341:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8333:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86c8b3f18727dde9a7498ee50083420855086c244c270ea642a5cc069dbfd722__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8169:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8183:4:7",
														"type": ""
													}
												],
												"src": "8018:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8544:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8561:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8572:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8554:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8595:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8591:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8591:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8611:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8584:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8645:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8630:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8650:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8623:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8623:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8623:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8694:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8706:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8717:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8702:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8694:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8521:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8535:4:7",
														"type": ""
													}
												],
												"src": "8370:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8905:239:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8922:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8933:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8915:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8915:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8915:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8956:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8967:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8952:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8952:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8972:2:7",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8945:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8945:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8945:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8995:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9006:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8991:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8991:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9011:34:7",
																		"type": "",
																		"value": "setNFTPermits function informati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8984:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8984:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9066:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9077:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9062:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9062:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9082:19:7",
																		"type": "",
																		"value": "on arity mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9055:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9055:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9111:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9123:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9134:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9119:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9119:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9111:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b188bf9a199e27127b7f2ce0b6348fba12016e0eab0ae3d2d86fe3db1e62507a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8882:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8896:4:7",
														"type": ""
													}
												],
												"src": "8731:413:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9323:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9340:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9351:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9333:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9333:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9333:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9374:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9385:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9370:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9370:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9390:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9363:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9363:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9363:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9413:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9424:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9409:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9409:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9429:30:7",
																		"type": "",
																		"value": "caller is not AirdropFactory"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9402:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9402:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9402:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9469:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9481:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9492:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9477:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9477:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9469:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2b2ca33fa18b4111bbdd05bc0f019673362a9f0f47e04ce9590cab30af108b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9300:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9314:4:7",
														"type": ""
													}
												],
												"src": "9149:352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9680:161:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9697:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9708:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9690:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9690:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9690:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9731:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9742:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9727:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9727:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9747:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9720:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9770:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9781:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9766:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9786:13:7",
																		"type": "",
																		"value": "invalid key"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9759:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9759:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9759:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9809:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9821:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9832:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9817:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9817:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9809:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1674f01222d591fcbce2c2b6ddff3cecc1eab7d1c1d62d5c9c662bcab901dd8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9657:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9671:4:7",
														"type": ""
													}
												],
												"src": "9506:335:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9891:230:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9901:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9917:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9911:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9901:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9929:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9951:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "9967:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9973:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9963:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9963:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9982:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9978:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9978:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9959:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9947:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9947:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9933:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10062:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10064:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10064:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10064:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10005:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10017:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10002:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10002:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10041:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10053:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10038:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10038:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9999:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:62:7"
															},
															"nodeType": "YulIf",
															"src": "9996:2:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10100:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10104:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10093:22:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9871:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9880:6:7",
														"type": ""
													}
												],
												"src": "9846:275:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10195:114:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10239:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10241:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10241:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10241:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10211:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10219:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10208:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10208:30:7"
															},
															"nodeType": "YulIf",
															"src": "10205:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10270:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10286:1:7",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10289:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10282:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10282:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10298:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10278:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10278:25:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10270:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10175:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10186:4:7",
														"type": ""
													}
												],
												"src": "10126:183:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10361:189:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10400:115:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "10421:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10430:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10435:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10426:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10426:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10414:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10414:33:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10414:33:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10467:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10470:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10460:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10460:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10460:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "10495:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10500:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10488:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10488:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10488:17:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10377:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10388:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10384:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10374:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10374:17:7"
															},
															"nodeType": "YulIf",
															"src": "10371:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10524:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10535:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10542:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10531:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10531:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10343:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10353:3:7",
														"type": ""
													}
												],
												"src": "10314:236:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10587:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10604:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10611:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10616:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10607:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10607:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10597:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10644:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10647:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10637:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10637:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10637:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10668:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10671:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10661:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10661:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10661:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10555:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10732:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10796:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10805:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10808:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10798:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10798:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10798:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10755:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10766:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10781:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10786:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "10777:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10777:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10790:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "10773:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10773:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10762:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10762:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10752:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10752:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10745:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:50:7"
															},
															"nodeType": "YulIf",
															"src": "10742:2:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10721:5:7",
														"type": ""
													}
												],
												"src": "10687:131:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_string_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert(array, array) }\n            mstore(dst, abi_decode_string(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_array_string_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_array_string_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_INftfiHub_$483__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4b4a8a5ffdf6154af835b170654284cc0833d932e13c55a495b3559f73ea299f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"nftContract is zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4dfd2f330a676d1326419f82eeb05a52130ed26733b2b05107e6321b215ade36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"setNftTypes function information\")\n        mstore(add(headStart, 96), \" arity mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4e2542f8cafbb0c5d6331f8ab93ae1f333e1be05184b567329d08fc4b3103194__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"AirdropWrapper can't be modified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f4820ecb86fa038962f1e1e7adaa85fb9e5bc50bd6f8297f5541dfc176887b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"nftType is empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"caller is not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_86c8b3f18727dde9a7498ee50083420855086c244c270ea642a5cc069dbfd722__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"NFT type not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b188bf9a199e27127b7f2ce0b6348fba12016e0eab0ae3d2d86fe3db1e62507a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"setNFTPermits function informati\")\n        mstore(add(headStart, 96), \"on arity mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b2b2ca33fa18b4111bbdd05bc0f019673362a9f0f47e04ce9590cab30af108b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"caller is not AirdropFactory\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c1674f01222d591fcbce2c2b6ddff3cecc1eab7d1c1d62d5c9c662bcab901dd8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"invalid key\")\n        tail := add(headStart, 96)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806395244b941161006657806395244b941461013a578063b8c8aff81461014d578063c88641a214610160578063d8e4e93e14610173578063f2fde38b1461018657600080fd5b80630a21cc43146100a35780631a3dd0a5146100b8578063365a86fc146100e85780636651f11d146100fb5780638da5cb5b14610132575b600080fd5b6100b66100b1366004610bb4565b610199565b005b6100cb6100c6366004610c0a565b6101df565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100cb906001600160a01b031681565b610124610109366004610ad9565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100df565b6100cb6101fa565b6100b6610148366004610b5e565b610209565b6100cb61015b366004610ad9565b610242565b6100b661016e366004610b11565b61026b565b6100b6610181366004610c22565b6103fb565b6100b6610194366004610ad9565b610434565b336101a26101fa565b6001600160a01b0316146101d15760405162461bcd60e51b81526004016101c890610c71565b60405180910390fd5b6101db828261051e565b5050565b6000908152600260205260409020546001600160a01b031690565b6000546001600160a01b031690565b336102126101fa565b6001600160a01b0316146102385760405162461bcd60e51b81526004016101c890610c71565b6101db82826105fd565b6001600160a01b038116600090815260036020526040812054610264816101df565b9392505050565b8061029b6040518060400160405280600e81526020016d20b4b9323937b82bb930b83832b960911b8152506104d4565b6102a4826104d4565b14156103975733600154604051631c2d8fb360e31b81526e41495244524f505f464143544f525960881b60048201526001600160a01b03928316929091169063e16c7d989060240160206040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610af5565b6001600160a01b0316146103925760405162461bcd60e51b815260206004820152601c60248201527f63616c6c6572206973206e6f742041697264726f70466163746f72790000000060448201526064016101c8565b6103ec565b336103a06101fa565b6001600160a01b0316146103ec5760405162461bcd60e51b815260206004820152601360248201527231b0b63632b91034b9903737ba1037bbb732b960691b60448201526064016101c8565b6103f683836106de565b505050565b336104046101fa565b6001600160a01b03161461042a5760405162461bcd60e51b81526004016101c890610c71565b6101db8282610881565b3361043d6101fa565b6001600160a01b0316146104635760405162461bcd60e51b81526004016101c890610c71565b6001600160a01b0381166104c85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c8565b6104d181610928565b50565b60006020825111156105165760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b60448201526064016101c8565b506020015190565b80518251146105875760405162461bcd60e51b815260206004820152602f60248201527f7365744e667454797065732066756e6374696f6e20696e666f726d6174696f6e60448201526e040c2e4d2e8f240dad2e6dac2e8c6d608b1b60648201526084016101c8565b60005b81518110156103f6576105eb8382815181106105b657634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106105de57634e487b7160e01b600052603260045260246000fd5b6020026020010151610881565b806105f581610cf9565b91505061058a565b80518251146106685760405162461bcd60e51b815260206004820152603160248201527f7365744e46545065726d6974732066756e6374696f6e20696e666f726d6174696044820152700dedc40c2e4d2e8f240dad2e6dac2e8c6d607b1b60648201526084016101c8565b60005b82518110156103f6576106cc83828151811061069757634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106106bf57634e487b7160e01b600052603260045260246000fd5b60200260200101516106de565b806106d681610cf9565b91505061066b565b6001600160a01b0382166107345760405162461bcd60e51b815260206004820152601b60248201527f6e6674436f6e7472616374206973207a65726f2061646472657373000000000060448201526064016101c8565b600061073f826104d4565b905080156107a3576000610752826101df565b6001600160a01b031614156107a35760405162461bcd60e51b8152602060048201526017602482015276139195081d1e5c19481b9bdd081c9959da5cdd195c9959604a1b60448201526064016101c8565b6107d26040518060400160405280600e81526020016d20b4b9323937b82bb930b83832b960911b8152506104d4565b6001600160a01b03841660009081526003602052604090205414156108395760405162461bcd60e51b815260206004820181905260248201527f41697264726f70577261707065722063616e2774206265206d6f64696669656460448201526064016101c8565b6001600160a01b038316600081815260036020526040808220849055518392917f903a211c8bcdc0ab18afc116fc4776504a9aac5c0121be0fda712d399017bd2291a3505050565b81516108c25760405162461bcd60e51b815260206004820152601060248201526f6e66745479706520697320656d70747960801b60448201526064016101c8565b60006108cd836104d4565b60008181526002602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519293509183917f22be69269c1f7d73e73dcb25b710dd88c7aa1cf374c16d945def98df2107c2f891a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f830112610988578081fd5b8135602061099d61099883610cd6565b610ca6565b80838252828201915082860187848660051b89010111156109bc578586fd5b855b858110156109e35781356109d181610d36565b845292840192908401906001016109be565b5090979650505050505050565b600082601f830112610a00578081fd5b81356020610a1061099883610cd6565b80838252828201915082860187848660051b8901011115610a2f578586fd5b855b858110156109e35781356001600160401b03811115610a4e578788fd5b610a5c8a87838c0101610a6f565b8552509284019290840190600101610a31565b600082601f830112610a7f578081fd5b81356001600160401b03811115610a9857610a98610d20565b610aab601f8201601f1916602001610ca6565b818152846020838601011115610abf578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610aea578081fd5b813561026481610d36565b600060208284031215610b06578081fd5b815161026481610d36565b60008060408385031215610b23578081fd5b8235610b2e81610d36565b915060208301356001600160401b03811115610b48578182fd5b610b5485828601610a6f565b9150509250929050565b60008060408385031215610b70578182fd5b82356001600160401b0380821115610b86578384fd5b610b9286838701610978565b93506020850135915080821115610ba7578283fd5b50610b54858286016109f0565b60008060408385031215610bc6578182fd5b82356001600160401b0380821115610bdc578384fd5b610be8868387016109f0565b93506020850135915080821115610bfd578283fd5b50610b5485828601610978565b600060208284031215610c1b578081fd5b5035919050565b60008060408385031215610c34578182fd5b82356001600160401b03811115610c49578283fd5b610c5585828601610a6f565b9250506020830135610c6681610d36565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715610cce57610cce610d20565b604052919050565b60006001600160401b03821115610cef57610cef610d20565b5060051b60200190565b6000600019821415610d1957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104d157600080fdfea2646970667358221220c9ae7940801d4662fcdd30394691ef1ffc53e6fa217faedc0dbb11ede3ad441864736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95244B94 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95244B94 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xB8C8AFF8 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xC88641A2 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xD8E4E93E EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA21CC43 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1A3DD0A5 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x365A86FC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6651F11D EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0xCB PUSH2 0x1FA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST CALLER PUSH2 0x1A2 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x212 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x238 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x1DB DUP3 DUP3 PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x264 DUP2 PUSH2 0x1DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x29B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x20B4B9323937B82BB930B83832B9 PUSH1 0x91 SHL DUP2 MSTORE POP PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x2A4 DUP3 PUSH2 0x4D4 JUMP JUMPDEST EQ ISZERO PUSH2 0x397 JUMPI CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C2D8FB3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH15 0x41495244524F505F464143544F5259 PUSH1 0x88 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE16C7D98 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F742041697264726F70466163746F727900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST CALLER PUSH2 0x3A0 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x31B0B63632B91034B9903737BA1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x3F6 DUP4 DUP4 PUSH2 0x6DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH2 0x404 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x1DB DUP3 DUP3 PUSH2 0x881 JUMP JUMPDEST CALLER PUSH2 0x43D PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x4D1 DUP2 PUSH2 0x928 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD GT ISZERO PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x696E76616C6964206B6579 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x587 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744E667454797065732066756E6374696F6E20696E666F726D6174696F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x40C2E4D2E8F240DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x5EB DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x881 JUMP JUMPDEST DUP1 PUSH2 0x5F5 DUP2 PUSH2 0xCF9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x58A JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365744E46545065726D6974732066756E6374696F6E20696E666F726D617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0xDEDC40C2E4D2E8F240DAD2E6DAC2E8C6D PUSH1 0x7B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x6CC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x697 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6DE JUMP JUMPDEST DUP1 PUSH2 0x6D6 DUP2 PUSH2 0xCF9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6674436F6E7472616374206973207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F DUP3 PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 PUSH2 0x752 DUP3 PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x139195081D1E5C19481B9BDD081C9959DA5CDD195C9959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x7D2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x20B4B9323937B82BB930B83832B9 PUSH1 0x91 SHL DUP2 MSTORE POP PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F70577261707065722063616E2774206265206D6F646966696564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0x903A211C8BCDC0AB18AFC116FC4776504A9AAC5C0121BE0FDA712D399017BD22 SWAP2 LOG3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E66745479706520697320656D707479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CD DUP4 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP3 SWAP4 POP SWAP2 DUP4 SWAP2 PUSH32 0x22BE69269C1F7D73E73DCB25B710DD88C7AA1CF374C16D945DEF98DF2107C2F8 SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x988 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x99D PUSH2 0x998 DUP4 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x9BC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI DUP2 CALLDATALOAD PUSH2 0x9D1 DUP2 PUSH2 0xD36 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x9BE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA10 PUSH2 0x998 DUP4 PUSH2 0xCD6 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0xA2F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA4E JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0xA5C DUP11 DUP8 DUP4 DUP13 ADD ADD PUSH2 0xA6F JUMP JUMPDEST DUP6 MSTORE POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA7F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA98 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xAAB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xCA6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xABF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x264 DUP2 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB06 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x264 DUP2 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB23 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB2E DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB48 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB70 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xB86 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xB92 DUP7 DUP4 DUP8 ADD PUSH2 0x978 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBA7 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBC6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xBDC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xBE8 DUP7 DUP4 DUP8 ADD PUSH2 0x9F0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBFD JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0x978 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC34 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC49 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xC55 DUP6 DUP3 DUP7 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC66 DUP2 PUSH2 0xD36 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCE PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0xCEF JUMPI PUSH2 0xCEF PUSH2 0xD20 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xD19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xAE PUSH26 0x40801D4662FCDD30394691EF1FFC53E6FA217FAEDC0DBB11EDE3 0xAD DIFFICULTY XOR PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "416:9766:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6369:152;;;;;;:::i;:::-;;:::i;:::-;;6754:117;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5334:32:7;;;5316:51;;5304:2;5289:18;6754:117:1;;;;;;;;487:20;;;;;-1:-1:-1;;;;;487:20:1;;;4918:133;;;;;;:::i;:::-;-1:-1:-1;;;;;5020:24:1;4994:7;5020:24;;;:10;:24;;;;;;;4918:133;;;;5524:25:7;;;5512:2;5497:18;4918:133:1;5479:76:7;1712:85:6;;;:::i;4423:158:1:-;;;;;;:::i;:::-;;:::i;5274:188::-;;;;;;:::i;:::-;;:::i;3710:204::-;;;;;;:::i;:::-;;:::i;5837:135::-;;;;;;:::i;:::-;;:::i;1444:192:6:-;;;;;;:::i;:::-;;:::i;6369:152:1:-;719:10:0;1039:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1039:23:6;;1031:68;;;;-1:-1:-1;;;1031:68:6;;;;;;;:::i;:::-;;;;;;;;;6477:37:1::1;6490:9;6501:12;6477;:37::i;:::-;6369:152:::0;;:::o;6754:117::-;6820:7;6846:18;;;:8;:18;;;;;;-1:-1:-1;;;;;6846:18:1;;6754:117::o;1712:85:6:-;1758:7;1784:6;-1:-1:-1;;;;;1784:6:6;;1712:85::o;4423:158:1:-;719:10:0;1039:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1039:23:6;;1031:68;;;;-1:-1:-1;;;1031:68:6;;;;;;;:::i;:::-;4534:40:1::1;4549:13;4564:9;4534:14;:40::i;5274:188::-:0;-1:-1:-1;;;;;5388:24:1;;5351:7;5388:24;;;:10;:24;;;;;;5429:26;5388:24;5429:17;:26::i;:::-;5422:33;5274:188;-1:-1:-1;;;5274:188:1:o;3710:204::-;3846:8;1715:68;1747:35;;;;;;;;;;;;;-1:-1:-1;;;1747:35:1;;;1715:31;:68::i;:::-;1658:41;1690:8;1658:31;:41::i;:::-;:125;1641:366;;;719:10:0;1816:3:1;;:45;;-1:-1:-1;;;1816:45:1;;-1:-1:-1;;;1816:45:1;;;5524:25:7;-1:-1:-1;;;;;1816:61:1;;;;:3;;;;:15;;5497:18:7;;1816:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1816:61:1;;1808:102;;;;-1:-1:-1;;;1808:102:1;;9351:2:7;1808:102:1;;;9333:21:7;9390:2;9370:18;;;9363:30;9429;9409:18;;;9402:58;9477:18;;1808:102:1;9323:178:7;1808:102:1;1641:366;;;719:10:0;1949:7:1;:5;:7::i;:::-;-1:-1:-1;;;;;1949:23:1;;1941:55;;;;-1:-1:-1;;;1941:55:1;;7872:2:7;1941:55:1;;;7854:21:7;7911:2;7891:18;;;7884:30;-1:-1:-1;;;7930:18:7;;;7923:49;7989:18;;1941:55:1;7844:169:7;1941:55:1;3870:37:::1;3884:12;3898:8;3870:13;:37::i;:::-;3710:204:::0;;;:::o;5837:135::-;719:10:0;1039:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1039:23:6;;1031:68;;;;-1:-1:-1;;;1031:68:6;;;;;;;:::i;:::-;5931:34:1::1;5943:8;5953:11;5931;:34::i;1444:192:6:-:0;719:10:0;1039:7:6;:5;:7::i;:::-;-1:-1:-1;;;;;1039:23:6;;1031:68;;;;-1:-1:-1;;;1031:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1533:23:6;::::1;1525:74;;;::::0;-1:-1:-1;;;1525:74:6;;5987:2:7;1525:74:6::1;::::0;::::1;5969:21:7::0;6026:2;6006:18;;;5999:30;6065:34;6045:18;;;6038:62;-1:-1:-1;;;6116:18:7;;;6109:36;6162:19;;1525:74:6::1;5959:228:7::0;1525:74:6::1;1609:20;1619:9;1609;:20::i;:::-;1444:192:::0;:::o;1365:273:5:-;1436:10;1488:2;1472:4;1466:18;:24;;1458:48;;;;-1:-1:-1;;;1458:48:5;;9708:2:7;1458:48:5;;;9690:21:7;9747:2;9727:18;;;9720:30;-1:-1:-1;;;9766:18:7;;;9759:41;9817:18;;1458:48:5;9680:161:7;1458:48:5;-1:-1:-1;1618:2:5;1608:13;1602:20;;1582:50::o;7982:332:1:-;8109:12;:19;8089:9;:16;:39;8081:99;;;;-1:-1:-1;;;8081:99:1;;6750:2:7;8081:99:1;;;6732:21:7;6789:2;6769:18;;;6762:30;6828:34;6808:18;;;6801:62;-1:-1:-1;;;6879:18:7;;;6872:45;6934:19;;8081:99:1;6722:237:7;8081:99:1;8196:9;8191:117;8215:12;:19;8211:1;:23;8191:117;;;8255:42;8267:9;8277:1;8267:12;;;;;;-1:-1:-1;;;8267:12:1;;;;;;;;;;;;;;;8281;8294:1;8281:15;;;;;;-1:-1:-1;;;8281:15:1;;;;;;;;;;;;;;;8255:11;:42::i;:::-;8236:3;;;;:::i;:::-;;;;8191:117;;9838:342;9972:9;:16;9948:13;:20;:40;9940:102;;;;-1:-1:-1;;;9940:102:1;;8933:2:7;9940:102:1;;;8915:21:7;8972:2;8952:18;;;8945:30;9011:34;8991:18;;;8984:62;-1:-1:-1;;;9062:18:7;;;9055:47;9119:19;;9940:102:1;8905:239:7;9940:102:1;10058:9;10053:121;10077:13;:20;10073:1;:24;10053:121;;;10118:45;10132:13;10146:1;10132:16;;;;;;-1:-1:-1;;;10132:16:1;;;;;;;;;;;;;;;10150:9;10160:1;10150:12;;;;;;-1:-1:-1;;;10150:12:1;;;;;;;;;;;;;;;10118:13;:45::i;:::-;10099:3;;;;:::i;:::-;;;;10053:121;;8758:651;-1:-1:-1;;;;;8854:26:1;;8846:66;;;;-1:-1:-1;;;8846:66:1;;6394:2:7;8846:66:1;;;6376:21:7;6433:2;6413:18;;;6406:30;6472:29;6452:18;;;6445:57;6519:18;;8846:66:1;6366:177:7;8846:66:1;8922:18;8943:41;8975:8;8943:31;:41::i;:::-;8922:62;-1:-1:-1;8999:15:1;;8995:125;;9079:1;9038:29;9056:10;9038:17;:29::i;:::-;-1:-1:-1;;;;;9038:43:1;;;9030:79;;;;-1:-1:-1;;;9030:79:1;;8220:2:7;9030:79:1;;;8202:21:7;8259:2;8239:18;;;8232:30;-1:-1:-1;;;8278:18:7;;;8271:53;8341:18;;9030:79:1;8192:173:7;9030:79:1;9179:68;9211:35;;;;;;;;;;;;;-1:-1:-1;;;9211:35:1;;;9179:31;:68::i;:::-;-1:-1:-1;;;;;9151:24:1;;;;;;:10;:24;;;;;;:96;;9130:175;;;;-1:-1:-1;;;9130:175:1;;7166:2:7;9130:175:1;;;7148:21:7;;;7185:18;;;7178:30;7244:34;7224:18;;;7217:62;7296:18;;9130:175:1;7138:182:7;9130:175:1;-1:-1:-1;;;;;9315:24:1;;;;;;:10;:24;;;;;;:37;;;9367:35;9342:10;;9315:24;9367:35;;;8758:651;;;:::o;7246:317::-;7339:22;;7331:56;;;;-1:-1:-1;;;7331:56:1;;7527:2:7;7331:56:1;;;7509:21:7;7566:2;7546:18;;;7539:30;-1:-1:-1;;;7585:18:7;;;7578:46;7641:18;;7331:56:1;7499:166:7;7331:56:1;7397:18;7418:41;7450:8;7418:31;:41::i;:::-;7470:20;;;;:8;:20;;;;;;:34;;-1:-1:-1;;;;;;7470:34:1;-1:-1:-1;;;;;7470:34:1;;;;;;;;7520:36;;7470:20;;-1:-1:-1;7470:34:1;:20;;7520:36;;;7246:317;;;:::o;1847:172:6:-;1903:16;1922:6;;-1:-1:-1;;;;;1938:18:6;;;-1:-1:-1;;;;;;1938:18:6;;;;;;1971:41;;1922:6;;;;;;;1971:41;;1903:16;1971:41;1847:172;;:::o;14:768:7:-;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;183:6;170:20;209:4;233:60;249:43;289:2;249:43;:::i;:::-;233:60;:::i;:::-;315:3;339:2;334:3;327:15;367:2;362:3;358:12;351:19;;402:2;394:6;390:15;454:3;449:2;443;440:1;436:10;428:6;424:23;420:32;417:41;414:2;;;475:5;468;461:20;414:2;501:5;515:238;529:2;526:1;523:9;515:238;;;600:3;587:17;617:31;642:5;617:31;:::i;:::-;661:18;;699:12;;;;731;;;;547:1;540:9;515:238;;;-1:-1:-1;771:5:7;;78:704;-1:-1:-1;;;;;;;78:704:7:o;787:857::-;840:5;893:3;886:4;878:6;874:17;870:27;860:2;;915:5;908;901:20;860:2;955:6;942:20;981:4;1005:60;1021:43;1061:2;1021:43;:::i;1005:60::-;1087:3;1111:2;1106:3;1099:15;1139:2;1134:3;1130:12;1123:19;;1174:2;1166:6;1162:15;1226:3;1221:2;1215;1212:1;1208:10;1200:6;1196:23;1192:32;1189:41;1186:2;;;1247:5;1240;1233:20;1186:2;1273:5;1287:328;1301:2;1298:1;1295:9;1287:328;;;1378:3;1365:17;-1:-1:-1;;;;;1401:11:7;1398:35;1395:2;;;1450:5;1443;1436:20;1395:2;1483:57;1536:3;1531:2;1517:11;1509:6;1505:24;1501:33;1483:57;:::i;:::-;1471:70;;-1:-1:-1;1561:12:7;;;;1593;;;;1319:1;1312:9;1287:328;;1649:551;1692:5;1745:3;1738:4;1730:6;1726:17;1722:27;1712:2;;1767:5;1760;1753:20;1712:2;1807:6;1794:20;-1:-1:-1;;;;;1829:2:7;1826:26;1823:2;;;1855:18;;:::i;:::-;1899:55;1942:2;1923:13;;-1:-1:-1;;1919:27:7;1948:4;1915:38;1899:55;:::i;:::-;1979:2;1970:7;1963:19;2025:3;2018:4;2013:2;2005:6;2001:15;1997:26;1994:35;1991:2;;;2046:5;2039;2032:20;1991:2;2115;2108:4;2100:6;2096:17;2089:4;2080:7;2076:18;2063:55;2138:16;;;2156:4;2134:27;2127:42;;;;2142:7;1702:498;-1:-1:-1;;1702:498:7:o;2205:257::-;2264:6;2317:2;2305:9;2296:7;2292:23;2288:32;2285:2;;;2338:6;2330;2323:22;2285:2;2382:9;2369:23;2401:31;2426:5;2401:31;:::i;2467:261::-;2537:6;2590:2;2578:9;2569:7;2565:23;2561:32;2558:2;;;2611:6;2603;2596:22;2558:2;2648:9;2642:16;2667:31;2692:5;2667:31;:::i;2733:477::-;2811:6;2819;2872:2;2860:9;2851:7;2847:23;2843:32;2840:2;;;2893:6;2885;2878:22;2840:2;2937:9;2924:23;2956:31;2981:5;2956:31;:::i;:::-;3006:5;-1:-1:-1;3062:2:7;3047:18;;3034:32;-1:-1:-1;;;;;3078:30:7;;3075:2;;;3126:6;3118;3111:22;3075:2;3154:50;3196:7;3187:6;3176:9;3172:22;3154:50;:::i;:::-;3144:60;;;2830:380;;;;;:::o;3215:634::-;3343:6;3351;3404:2;3392:9;3383:7;3379:23;3375:32;3372:2;;;3425:6;3417;3410:22;3372:2;3470:9;3457:23;-1:-1:-1;;;;;3540:2:7;3532:6;3529:14;3526:2;;;3561:6;3553;3546:22;3526:2;3589:61;3642:7;3633:6;3622:9;3618:22;3589:61;:::i;:::-;3579:71;;3703:2;3692:9;3688:18;3675:32;3659:48;;3732:2;3722:8;3719:16;3716:2;;;3753:6;3745;3738:22;3716:2;;3781:62;3835:7;3824:8;3813:9;3809:24;3781:62;:::i;3854:634::-;3982:6;3990;4043:2;4031:9;4022:7;4018:23;4014:32;4011:2;;;4064:6;4056;4049:22;4011:2;4109:9;4096:23;-1:-1:-1;;;;;4179:2:7;4171:6;4168:14;4165:2;;;4200:6;4192;4185:22;4165:2;4228:60;4280:7;4271:6;4260:9;4256:22;4228:60;:::i;:::-;4218:70;;4341:2;4330:9;4326:18;4313:32;4297:48;;4370:2;4360:8;4357:16;4354:2;;;4391:6;4383;4376:22;4354:2;;4419:63;4474:7;4463:8;4452:9;4448:24;4419:63;:::i;4493:190::-;4552:6;4605:2;4593:9;4584:7;4580:23;4576:32;4573:2;;;4626:6;4618;4611:22;4573:2;-1:-1:-1;4654:23:7;;4563:120;-1:-1:-1;4563:120:7:o;4688:477::-;4766:6;4774;4827:2;4815:9;4806:7;4802:23;4798:32;4795:2;;;4848:6;4840;4833:22;4795:2;4893:9;4880:23;-1:-1:-1;;;;;4918:6:7;4915:30;4912:2;;;4963:6;4955;4948:22;4912:2;4991:50;5033:7;5024:6;5013:9;5009:22;4991:50;:::i;:::-;4981:60;;;5091:2;5080:9;5076:18;5063:32;5104:31;5129:5;5104:31;:::i;:::-;5154:5;5144:15;;;4785:380;;;;;:::o;8370:356::-;8572:2;8554:21;;;8591:18;;;8584:30;8650:34;8645:2;8630:18;;8623:62;8717:2;8702:18;;8544:182::o;9846:275::-;9917:2;9911:9;9982:2;9963:13;;-1:-1:-1;;9959:27:7;9947:40;;-1:-1:-1;;;;;10002:34:7;;10038:22;;;9999:62;9996:2;;;10064:18;;:::i;:::-;10100:2;10093:22;9891:230;;-1:-1:-1;9891:230:7:o;10126:183::-;10186:4;-1:-1:-1;;;;;10211:6:7;10208:30;10205:2;;;10241:18;;:::i;:::-;-1:-1:-1;10286:1:7;10282:14;10298:4;10278:25;;10195:114::o;10314:236::-;10353:3;-1:-1:-1;;10374:17:7;;10371:2;;;-1:-1:-1;;;10414:33:7;;10470:4;10467:1;10460:15;10500:4;10421:3;10488:17;10371:2;-1:-1:-1;10542:1:7;10531:13;;10361:189::o;10555:127::-;10616:10;10611:3;10607:20;10604:1;10597:31;10647:4;10644:1;10637:15;10671:4;10668:1;10661:15;10687:131;-1:-1:-1;;;;;10762:31:7;;10752:42;;10742:2;;10808:1;10805;10798:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "691400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getNFTPermit(address)": "1298",
								"getNFTWrapper(address)": "infinite",
								"getNftTypeWrapper(bytes32)": "1201",
								"hub()": "1071",
								"owner()": "1124",
								"setNFTPermit(address,string)": "infinite",
								"setNFTPermits(address[],string[])": "infinite",
								"setNftType(string,address)": "infinite",
								"setNftTypes(string[],address[])": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_setNFTPermit(address,string memory)": "infinite",
								"_setNFTPermits(address[] memory,string memory[] memory)": "infinite",
								"_setNftType(string memory,address)": "infinite",
								"_setNftTypes(string memory[] memory,address[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 416,
									"end": 10182,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2972,
									"end": 2978,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1264,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2972,
									"end": 2978,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1264,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1264,
									"end": 1288,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1264,
									"end": 1288,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1264,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2990,
									"end": 2993,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 3016,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3026,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3039,
									"end": 3055,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3057,
									"end": 3076,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3026,
									"end": 3038,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3026,
									"end": 3077,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3026,
									"end": 3077,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3026,
									"end": 3077,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3087,
									"end": 3145,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3102,
									"end": 3124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3087,
									"end": 3101,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3087,
									"end": 3145,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3087,
									"end": 3145,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3087,
									"end": 3145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 3152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 2019,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1847,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1956,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 2012,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1971,
									"end": 2012,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 2012,
									"name": "PUSH",
									"source": 6,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1971,
									"end": 2012,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 2012,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 2019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 2019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 2019,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 7982,
									"end": 8314,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7982,
									"end": 8314,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8109,
									"end": 8121,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8109,
									"end": 8128,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8089,
									"end": 8098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8089,
									"end": 8105,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8089,
									"end": 8128,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4367,
									"end": 4369,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4349,
									"end": 4370,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4408,
									"name": "PUSH",
									"source": 7,
									"value": "2F"
								},
								{
									"begin": 4386,
									"end": 4404,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4386,
									"end": 4404,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4386,
									"end": 4404,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4379,
									"end": 4409,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4445,
									"end": 4479,
									"name": "PUSH",
									"source": 7,
									"value": "7365744E667454797065732066756E6374696F6E20696E666F726D6174696F6E"
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4418,
									"end": 4480,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40C2E4D2E8F240DAD2E6DAC2E8C6D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "8B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4496,
									"end": 4514,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4496,
									"end": 4514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4496,
									"end": 4514,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4489,
									"end": 4534,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4551,
									"end": 4570,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4551,
									"end": 4570,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 8081,
									"end": 8180,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8196,
									"end": 8205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8215,
									"end": 8227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8215,
									"end": 8234,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8211,
									"end": 8212,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8255,
									"end": 8297,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8267,
									"end": 8276,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8277,
									"end": 8278,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8279,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8293,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8294,
									"end": 8295,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8296,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8255,
									"end": 8266,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8255,
									"end": 8266,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8255,
									"end": 8266,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 8255,
									"end": 8297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8255,
									"end": 8297,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 8255,
									"end": 8297,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8255,
									"end": 8297,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8255,
									"end": 8297,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8191,
									"end": 8308,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7982,
									"end": 8314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7982,
									"end": 8314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7982,
									"end": 8314,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 9838,
									"end": 10180,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 9838,
									"end": 10180,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9972,
									"end": 9981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9972,
									"end": 9988,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9948,
									"end": 9961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9948,
									"end": 9968,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9948,
									"end": 9988,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5843,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5823,
									"end": 5844,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5880,
									"end": 5882,
									"name": "PUSH",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5853,
									"end": 5883,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5919,
									"end": 5953,
									"name": "PUSH",
									"source": 7,
									"value": "7365744E46545065726D6974732066756E6374696F6E20696E666F726D617469"
								},
								{
									"begin": 5899,
									"end": 5917,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5899,
									"end": 5917,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5899,
									"end": 5917,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5892,
									"end": 5954,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DEDC40C2E4D2E8F240DAD2E6DAC2E8C6D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5970,
									"end": 5988,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5970,
									"end": 5988,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5970,
									"end": 5988,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6010,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6027,
									"end": 6046,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 6027,
									"end": 6046,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 5813,
									"end": 6052,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 9940,
									"end": 10042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10058,
									"end": 10067,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10053,
									"end": 10174,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 10053,
									"end": 10174,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10077,
									"end": 10090,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10077,
									"end": 10097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10073,
									"end": 10074,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10073,
									"end": 10097,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10053,
									"end": 10174,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10053,
									"end": 10174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 10053,
									"end": 10174,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10118,
									"end": 10163,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 10132,
									"end": 10145,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10146,
									"end": 10147,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10159,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10160,
									"end": 10161,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10150,
									"end": 10162,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10118,
									"end": 10131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 10118,
									"end": 10131,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10118,
									"end": 10131,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 10118,
									"end": 10163,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10118,
									"end": 10163,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 10118,
									"end": 10163,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 10118,
									"end": 10163,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 10118,
									"end": 10163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10099,
									"end": 10102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10053,
									"end": 10174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 10053,
									"end": 10174,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7563,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7246,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7339,
									"end": 7361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7339,
									"end": 7361,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5146,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5126,
									"end": 5147,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5183,
									"end": 5185,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 5163,
									"end": 5181,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5163,
									"end": 5181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5163,
									"end": 5181,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5156,
									"end": 5186,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6E66745479706520697320656D707479"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5202,
									"end": 5220,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5202,
									"end": 5220,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5202,
									"end": 5220,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5195,
									"end": 5241,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5258,
									"end": 5276,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5258,
									"end": 5276,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 5116,
									"end": 5282,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7331,
									"end": 7387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7397,
									"end": 7415,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7418,
									"end": 7459,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 7450,
									"end": 7458,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7418,
									"end": 7449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 7418,
									"end": 7449,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7418,
									"end": 7449,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7418,
									"end": 7449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551672"
								},
								{
									"begin": 7418,
									"end": 7449,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7418,
									"end": 7459,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7418,
									"end": 7459,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7418,
									"end": 7459,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7418,
									"end": 7459,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 7418,
									"end": 7459,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7478,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7520,
									"end": 7556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7520,
									"end": 7556,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7470,
									"end": 7504,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7470,
									"end": 7490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7520,
									"end": 7556,
									"name": "PUSH",
									"source": 1,
									"value": "22BE69269C1F7D73E73DCB25B710DD88C7AA1CF374C16D945DEF98DF2107C2F8"
								},
								{
									"begin": 7520,
									"end": 7556,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7520,
									"end": 7556,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7563,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7563,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7563,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7563,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 8758,
									"end": 9409,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 8758,
									"end": 9409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4011,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3993,
									"end": 4014,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 7,
									"value": "1B"
								},
								{
									"begin": 4030,
									"end": 4048,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4030,
									"end": 4048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4030,
									"end": 4048,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4023,
									"end": 4053,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4089,
									"end": 4118,
									"name": "PUSH",
									"source": 7,
									"value": "6E6674436F6E7472616374206973207A65726F20616464726573730000000000"
								},
								{
									"begin": 4069,
									"end": 4087,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4069,
									"end": 4087,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4069,
									"end": 4087,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4119,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4136,
									"end": 4154,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4136,
									"end": 4154,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 3983,
									"end": 4160,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 8846,
									"end": 8912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8922,
									"end": 8940,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8943,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8975,
									"end": 8983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8943,
									"end": 8974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 8943,
									"end": 8974,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8943,
									"end": 8974,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 8943,
									"end": 8974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551672"
								},
								{
									"begin": 8943,
									"end": 8974,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8943,
									"end": 8984,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8943,
									"end": 8984,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 8943,
									"end": 8984,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8943,
									"end": 8984,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8943,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8922,
									"end": 8984,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8999,
									"end": 9014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8999,
									"end": 9014,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8995,
									"end": 9120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 8995,
									"end": 9120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9079,
									"end": 9080,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6854,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6846,
									"end": 6864,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5530,
									"name": "PUSH",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 5508,
									"end": 5526,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5508,
									"end": 5526,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5508,
									"end": 5526,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5501,
									"end": 5531,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "PUSH",
									"source": 7,
									"value": "4E46542074797065206E6F742072656769737465726564000000000000000000"
								},
								{
									"begin": 5547,
									"end": 5565,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5547,
									"end": 5565,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5547,
									"end": 5565,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5540,
									"end": 5593,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5610,
									"end": 5628,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5610,
									"end": 5628,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 5461,
									"end": 5634,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 9030,
									"end": 9109,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9179,
									"end": 9247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20B4B9323937B82BB930B83832B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "91"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9211,
									"end": 9246,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9179,
									"end": 9210,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 9179,
									"end": 9210,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9179,
									"end": 9210,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 9179,
									"end": 9210,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551672"
								},
								{
									"begin": 9179,
									"end": 9210,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9179,
									"end": 9247,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9179,
									"end": 9247,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 9179,
									"end": 9247,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 9179,
									"end": 9247,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 9179,
									"end": 9247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9161,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9175,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9247,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9151,
									"end": 9247,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4783,
									"end": 4785,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4765,
									"end": 4786,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4765,
									"end": 4786,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4765,
									"end": 4786,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4802,
									"end": 4820,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4802,
									"end": 4820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4802,
									"end": 4820,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4795,
									"end": 4825,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4895,
									"name": "PUSH",
									"source": 7,
									"value": "41697264726F70577261707065722063616E2774206265206D6F646966696564"
								},
								{
									"begin": 4841,
									"end": 4859,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4841,
									"end": 4859,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4841,
									"end": 4859,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4834,
									"end": 4896,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4913,
									"end": 4931,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4913,
									"end": 4931,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 4755,
									"end": 4937,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 9130,
									"end": 9305,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9325,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9352,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9352,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9352,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 9367,
									"end": 9402,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9342,
									"end": 9352,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9342,
									"end": 9352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9315,
									"end": 9339,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9367,
									"end": 9402,
									"name": "PUSH",
									"source": 1,
									"value": "903A211C8BCDC0AB18AFC116FC4776504A9AAC5C0121BE0FDA712D399017BD22"
								},
								{
									"begin": 9367,
									"end": 9402,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9367,
									"end": 9402,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 9409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 9409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 9409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 9409,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1365,
									"end": 1638,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1365,
									"end": 1638,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1446,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1466,
									"end": 1484,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1466,
									"end": 1490,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1466,
									"end": 1490,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6259,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6241,
									"end": 6262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6298,
									"end": 6300,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 6278,
									"end": 6296,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6278,
									"end": 6296,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6278,
									"end": 6296,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6271,
									"end": 6301,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "696E76616C6964206B6579"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6317,
									"end": 6335,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 6317,
									"end": 6335,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6335,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6310,
									"end": 6351,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6386,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6368,
									"end": 6386,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 6231,
									"end": 6392,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1458,
									"end": 1506,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1618,
									"end": 1620,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1608,
									"end": 1621,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1602,
									"end": 1622,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1602,
									"end": 1622,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1632,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 910,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 196,
									"end": 910,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 261,
									"end": 266,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 317,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 307,
									"end": 311,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 299,
									"end": 305,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 295,
									"end": 312,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 291,
									"end": 318,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 281,
									"end": 283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 283,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 336,
									"end": 341,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 329,
									"end": 334,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 322,
									"end": 342,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 281,
									"end": 283,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 369,
									"end": 375,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 363,
									"end": 376,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 395,
									"end": 399,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 419,
									"end": 479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 435,
									"end": 478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 475,
									"end": 477,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 435,
									"end": 478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 435,
									"end": 478,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 435,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 435,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 419,
									"end": 479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 419,
									"end": 479,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 419,
									"end": 479,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 419,
									"end": 479,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 501,
									"end": 504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 525,
									"end": 527,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 520,
									"end": 523,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 513,
									"end": 528,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 553,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 548,
									"end": 551,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 544,
									"end": 556,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 537,
									"end": 556,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 537,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 640,
									"end": 643,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 635,
									"end": 637,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 629,
									"end": 631,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 626,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 614,
									"end": 620,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 610,
									"end": 633,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 606,
									"end": 638,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 603,
									"end": 644,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 600,
									"end": 602,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 600,
									"end": 602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 600,
									"end": 602,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 661,
									"end": 666,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 654,
									"end": 659,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 647,
									"end": 667,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 600,
									"end": 602,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 600,
									"end": 602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 687,
									"end": 692,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 701,
									"end": 881,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 701,
									"end": 881,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 715,
									"end": 717,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 713,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 709,
									"end": 718,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 701,
									"end": 881,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 701,
									"end": 881,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 701,
									"end": 881,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 772,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 802,
									"end": 805,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 772,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 772,
									"end": 806,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 772,
									"end": 806,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 772,
									"end": 806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 760,
									"end": 807,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 760,
									"end": 807,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 827,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 827,
									"end": 839,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 827,
									"end": 839,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 827,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 859,
									"end": 871,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 859,
									"end": 871,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 859,
									"end": 871,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 859,
									"end": 871,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 726,
									"end": 735,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 881,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 701,
									"end": 881,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 701,
									"end": 881,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 701,
									"end": 881,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 899,
									"end": 904,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 899,
									"end": 904,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 271,
									"end": 910,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 271,
									"end": 910,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 915,
									"end": 2484,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 915,
									"end": 2484,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 979,
									"end": 984,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1013,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1053,
									"end": 1056,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1057,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 1022,
									"end": 1024,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1068,
									"end": 1073,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1081,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1024,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 1022,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1102,
									"end": 1115,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1158,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1174,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1214,
									"end": 1216,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1174,
									"end": 1217,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1158,
									"end": 1218,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1158,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1240,
									"end": 1243,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1264,
									"end": 1266,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1287,
									"end": 1290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1295,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1382,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1374,
									"end": 1376,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1370,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1361,
									"end": 1371,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1372,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1345,
									"end": 1377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1383,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1339,
									"end": 1341,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1339,
									"end": 1341,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1339,
									"end": 1341,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1400,
									"end": 1405,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1398,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1406,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1339,
									"end": 1341,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1339,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1426,
									"end": 1431,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1454,
									"end": 1456,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1452,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1518,
									"end": 1528,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1518,
									"end": 1528,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1585,
									"end": 1604,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1585,
									"end": 1604,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1585,
									"end": 1604,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1584,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1582,
									"end": 1584,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1621,
									"end": 1626,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1619,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1607,
									"end": 1627,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1584,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1582,
									"end": 1584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1664,
									"end": 1675,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1662,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1652,
									"end": 1676,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1676,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1719,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1713,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 1707,
									"end": 1709,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1703,
									"end": 1714,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1720,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1738,
									"end": 1743,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1731,
									"end": 1736,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1724,
									"end": 1744,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1785,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1775,
									"end": 1786,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1769,
									"end": 1787,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 1812,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1806,
									"end": 1808,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1813,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1802,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1802,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1800,
									"end": 1802,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1816,
									"end": 1834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1816,
									"end": 1834,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1816,
									"end": 1834,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1816,
									"end": 1834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1864,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1888,
									"end": 1899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1899,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1899,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1884,
									"end": 1909,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1880,
									"end": 1914,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1880,
									"end": 1914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1864,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1864,
									"end": 1915,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1864,
									"end": 1915,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1864,
									"end": 1915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1849,
									"end": 1915,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1849,
									"end": 1915,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1946,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1935,
									"end": 1942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1947,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2013,
									"end": 2016,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 2008,
									"end": 2010,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2003,
									"end": 2005,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1999,
									"end": 2001,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2006,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2011,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1988,
									"end": 2017,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 1987,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1985,
									"end": 1987,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2039,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2027,
									"end": 2032,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 2020,
									"end": 2040,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 1987,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1985,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2066,
									"end": 2071,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2095,
									"end": 2098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2092,
									"end": 2103,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2203,
									"end": 2215,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2203,
									"end": 2215,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2203,
									"end": 2215,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2199,
									"end": 2220,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2199,
									"end": 2220,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2221,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2186,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2165,
									"end": 2191,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2165,
									"end": 2191,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2222,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2125,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2125,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2084,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2258,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2263,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2333,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2325,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2320,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2309,
									"end": 2316,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2321,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2301,
									"end": 2326,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2294,
									"end": 2334,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2361,
									"end": 2381,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2361,
									"end": 2381,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2401,
									"end": 2413,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2413,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2413,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2413,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2445,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2445,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2445,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2445,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1473,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1465,
									"end": 1474,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1440,
									"end": 2455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2473,
									"end": 2478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2478,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 989,
									"end": 2484,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 989,
									"end": 2484,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2489,
									"end": 3804,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2489,
									"end": 3804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2724,
									"end": 2730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2732,
									"end": 2738,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2740,
									"end": 2746,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2748,
									"end": 2754,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2756,
									"end": 2762,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2764,
									"end": 2770,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2817,
									"end": 2820,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 2805,
									"end": 2814,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2796,
									"end": 2803,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 2815,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2821,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2787,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2787,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2785,
									"end": 2787,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2839,
									"end": 2845,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2831,
									"end": 2837,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2846,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2787,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2785,
									"end": 2787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2897,
									"end": 2906,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2907,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2907,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2926,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2971,
									"end": 2973,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2960,
									"end": 2969,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2926,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2926,
									"end": 2975,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2926,
									"end": 2975,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2926,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3019,
									"end": 3021,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3022,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3022,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2998,
									"end": 3023,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2916,
									"end": 2975,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2916,
									"end": 2975,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3072,
									"end": 3086,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3086,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3086,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3069,
									"end": 3071,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3069,
									"end": 3071,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3069,
									"end": 3071,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3104,
									"end": 3110,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3096,
									"end": 3102,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3111,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3069,
									"end": 3071,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3069,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3132,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3195,
									"end": 3202,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3186,
									"end": 3192,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3184,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3171,
									"end": 3193,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3132,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3132,
									"end": 3203,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3132,
									"end": 3203,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3132,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3122,
									"end": 3203,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3122,
									"end": 3203,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3249,
									"end": 3251,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3238,
									"end": 3247,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 3234,
									"end": 3252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3228,
									"end": 3253,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3212,
									"end": 3253,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3212,
									"end": 3253,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3278,
									"end": 3280,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3268,
									"end": 3276,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3265,
									"end": 3281,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3262,
									"end": 3264,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3262,
									"end": 3264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3262,
									"end": 3264,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3299,
									"end": 3305,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3297,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3284,
									"end": 3306,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3262,
									"end": 3264,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3262,
									"end": 3264,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3327,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3393,
									"end": 3400,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3382,
									"end": 3390,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3371,
									"end": 3380,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3367,
									"end": 3391,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3327,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3327,
									"end": 3401,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3327,
									"end": 3401,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3327,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3317,
									"end": 3401,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3317,
									"end": 3401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3447,
									"end": 3450,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3436,
									"end": 3445,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3451,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3452,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3452,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3452,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3477,
									"end": 3479,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3464,
									"end": 3480,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3461,
									"end": 3463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3461,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3461,
									"end": 3463,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3498,
									"end": 3504,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3490,
									"end": 3496,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3505,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3461,
									"end": 3463,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3461,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3592,
									"end": 3599,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3581,
									"end": 3589,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3570,
									"end": 3579,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 3566,
									"end": 3590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3526,
									"end": 3600,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3526,
									"end": 3600,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3526,
									"end": 3600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3600,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3646,
									"end": 3649,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 3635,
									"end": 3644,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3650,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3651,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3651,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3651,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3676,
									"end": 3678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3666,
									"end": 3674,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3663,
									"end": 3679,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3662,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3660,
									"end": 3662,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3703,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3689,
									"end": 3695,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3704,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3662,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3660,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 3798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3790,
									"end": 3797,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 3779,
									"end": 3787,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3777,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 3764,
									"end": 3788,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 3798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3725,
									"end": 3798,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3725,
									"end": 3798,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3725,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3715,
									"end": 3798,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3715,
									"end": 3798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3715,
									"end": 3798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 3804,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 6397,
									"end": 6672,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 6397,
									"end": 6672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6468,
									"end": 6470,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6462,
									"end": 6471,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6533,
									"end": 6535,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6514,
									"end": 6527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6510,
									"end": 6537,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6498,
									"end": 6538,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6498,
									"end": 6538,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6553,
									"end": 6587,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6587,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6589,
									"end": 6611,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6589,
									"end": 6611,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6589,
									"end": 6611,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6550,
									"end": 6612,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6549,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6549,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6547,
									"end": 6549,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6615,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 6615,
									"end": 6633,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 6615,
									"end": 6633,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6615,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6653,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6644,
									"end": 6666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6442,
									"end": 6672,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6442,
									"end": 6672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6442,
									"end": 6672,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 6677,
									"end": 6860,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6677,
									"end": 6860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6737,
									"end": 6741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6759,
									"end": 6789,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6759,
									"end": 6789,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6756,
									"end": 6758,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6756,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6756,
									"end": 6758,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6792,
									"end": 6810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6792,
									"end": 6810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 6792,
									"end": 6810,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 6792,
									"end": 6810,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6792,
									"end": 6810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6837,
									"end": 6838,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 6833,
									"end": 6847,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 6849,
									"end": 6853,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6854,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6854,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6860,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 6865,
									"end": 7101,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 6865,
									"end": 7101,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6904,
									"end": 6907,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6925,
									"end": 6942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6942,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 6922,
									"end": 6924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6922,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6922,
									"end": 6924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6965,
									"end": 6998,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6965,
									"end": 6998,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7025,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7018,
									"end": 7019,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7011,
									"end": 7026,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7055,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6972,
									"end": 6975,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7039,
									"end": 7056,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6922,
									"end": 6924,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6922,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7093,
									"end": 7094,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7082,
									"end": 7095,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6912,
									"end": 7101,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7106,
									"end": 7233,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 7106,
									"end": 7233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7177,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 7162,
									"end": 7165,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 7158,
									"end": 7178,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 7155,
									"end": 7156,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7148,
									"end": 7179,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7198,
									"end": 7202,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 7195,
									"end": 7196,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7188,
									"end": 7203,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7222,
									"end": 7226,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7219,
									"end": 7220,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7227,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7138,
									"end": 7233,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7138,
									"end": 7233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 10182,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9ae7940801d4662fcdd30394691ef1ffc53e6fa217faedc0dbb11ede3ad441864736f6c63430008040033",
									".code": [
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "95244B94"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "95244B94"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "B8C8AFF8"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "C88641A2"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "D8E4E93E"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "A21CC43"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "1A3DD0A5"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "365A86FC"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "6651F11D"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 10182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5334,
											"end": 5366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5334,
											"end": 5366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5334,
											"end": 5366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5316,
											"end": 5367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5316,
											"end": 5367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 487,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 507,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 487,
											"end": 507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5030,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5479,
											"end": 5555,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1039,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6521,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6854,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1797,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4423,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1039,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4549,
											"end": 4562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4534,
											"end": 4574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5388,
											"end": 5412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5455,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5274,
											"end": 5462,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B4B9323937B82BB930B83832B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1715,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1715,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1715,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1690,
											"end": 1698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 2007,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1641,
											"end": 2007,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C2D8FB3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "41495244524F505F464143544F5259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1831,
											"name": "PUSH",
											"source": 1,
											"value": "E16C7D98"
										},
										{
											"begin": 1816,
											"end": 1831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9353,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9392,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9363,
											"end": 9393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9459,
											"name": "PUSH",
											"source": 7,
											"value": "63616C6C6572206973206E6F742041697264726F70466163746F727900000000"
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9460,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9323,
											"end": 9501,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1641,
											"end": 2007,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1641,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7884,
											"end": 7914,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B0B63632B91034B9903737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 7972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7844,
											"end": 8013,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1941,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3884,
											"end": 3896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3870,
											"end": 3907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3870,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3870,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3914,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5837,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1039,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5931,
											"end": 5965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1039,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1031,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1556,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5987,
											"end": 5989,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5990,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6038,
											"end": 6100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5959,
											"end": 6187,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1525,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1636,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1365,
											"end": 1638,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1365,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1484,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9708,
											"end": 9710,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 9711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9749,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9720,
											"end": 9750,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C6964206B6579"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9817,
											"end": 9835,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9817,
											"end": 9835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 9680,
											"end": 9841,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1458,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1632,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7982,
											"end": 8314,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7982,
											"end": 8314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8089,
											"end": 8098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8089,
											"end": 8105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8089,
											"end": 8128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6752,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6791,
											"name": "PUSH",
											"source": 7,
											"value": "2F"
										},
										{
											"begin": 6769,
											"end": 6787,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6769,
											"end": 6787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6769,
											"end": 6787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6862,
											"name": "PUSH",
											"source": 7,
											"value": "7365744E667454797065732066756E6374696F6E20696E666F726D6174696F6E"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6863,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C2E4D2E8F240DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6722,
											"end": 6959,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8081,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8308,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8191,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8191,
											"end": 8308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8255,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8267,
											"end": 8276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8279,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8293,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8255,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8255,
											"end": 8297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8255,
											"end": 8297,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8255,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8191,
											"end": 8308,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 10180,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 9838,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9988,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8933,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 8974,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8945,
											"end": 8975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9011,
											"end": 9045,
											"name": "PUSH",
											"source": 7,
											"value": "7365744E46545065726D6974732066756E6374696F6E20696E666F726D617469"
										},
										{
											"begin": 8991,
											"end": 9009,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8991,
											"end": 9009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8984,
											"end": 9046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DEDC40C2E4D2E8F240DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9055,
											"end": 9102,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9138,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9119,
											"end": 9138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 8905,
											"end": 9144,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 9940,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10058,
											"end": 10067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10053,
											"end": 10174,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 10053,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10073,
											"end": 10097,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10053,
											"end": 10174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10053,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10053,
											"end": 10174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 10132,
											"end": 10145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10146,
											"end": 10147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 10118,
											"end": 10163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10163,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 10118,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10053,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 10053,
											"end": 10174,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 9409,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8758,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8854,
											"end": 8880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8854,
											"end": 8880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6397,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6433,
											"end": 6435,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6501,
											"name": "PUSH",
											"source": 7,
											"value": "6E6674436F6E7472616374206973207A65726F20616464726573730000000000"
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6445,
											"end": 6502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6519,
											"end": 6537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6366,
											"end": 6543,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8846,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 8943,
											"end": 8984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8943,
											"end": 8984,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8943,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8999,
											"end": 9014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9014,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 8995,
											"end": 9120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9079,
											"end": 9080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 9056,
											"end": 9066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9038,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9038,
											"end": 9067,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9038,
											"end": 9067,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 9038,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9038,
											"end": 9081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9038,
											"end": 9081,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9038,
											"end": 9081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8222,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8261,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139195081D1E5C19481B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8271,
											"end": 8324,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 8192,
											"end": 8365,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9030,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B4B9323937B82BB930B83832B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 9179,
											"end": 9247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9179,
											"end": 9247,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9179,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9161,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9247,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7166,
											"end": 7168,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7244,
											"end": 7278,
											"name": "PUSH",
											"source": 7,
											"value": "41697264726F70577261707065722063616E2774206265206D6F646966696564"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7279,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7314,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7296,
											"end": 7314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7138,
											"end": 7320,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9130,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9325,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9352,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9352,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9367,
											"end": 9402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9342,
											"end": 9352,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9342,
											"end": 9352,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9367,
											"end": 9402,
											"name": "PUSH",
											"source": 1,
											"value": "903A211C8BCDC0AB18AFC116FC4776504A9AAC5C0121BE0FDA712D399017BD22"
										},
										{
											"begin": 9367,
											"end": 9402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9367,
											"end": 9402,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 9409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 9409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 9409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 9409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7246,
											"end": 7563,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7246,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7529,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7568,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E66745479706520697320656D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7499,
											"end": 7665,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7331,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7450,
											"end": 7458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7418,
											"end": 7459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7418,
											"end": 7459,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7418,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7478,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7520,
											"end": 7556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7520,
											"end": 7556,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7520,
											"end": 7556,
											"name": "PUSH",
											"source": 1,
											"value": "22BE69269C1F7D73E73DCB25B710DD88C7AA1CF374C16D945DEF98DF2107C2F8"
										},
										{
											"begin": 7520,
											"end": 7556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7520,
											"end": 7556,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7563,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1847,
											"end": 2019,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1847,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2012,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1971,
											"end": 2012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2012,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 2019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 2019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 2019,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 14,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 68,
											"end": 73,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 114,
											"end": 118,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 106,
											"end": 112,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 98,
											"end": 125,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 90,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 88,
											"end": 90,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 143,
											"end": 148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 136,
											"end": 141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 129,
											"end": 149,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 90,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 88,
											"end": 90,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 183,
											"end": 189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 170,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 209,
											"end": 213,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 249,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 289,
											"end": 291,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 249,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 249,
											"end": 292,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 292,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 249,
											"end": 292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 233,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 233,
											"end": 293,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 293,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 233,
											"end": 293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 315,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 339,
											"end": 341,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 334,
											"end": 337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 327,
											"end": 342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 367,
											"end": 369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 362,
											"end": 365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 358,
											"end": 370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 402,
											"end": 404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 390,
											"end": 405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 449,
											"end": 451,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 443,
											"end": 445,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 436,
											"end": 446,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 428,
											"end": 434,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 424,
											"end": 447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 420,
											"end": 452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 417,
											"end": 458,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 414,
											"end": 416,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 475,
											"end": 480,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 468,
											"end": 473,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 461,
											"end": 481,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 414,
											"end": 416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 501,
											"end": 506,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 515,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 515,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 529,
											"end": 531,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 532,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 753,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 515,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 515,
											"end": 753,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 600,
											"end": 603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 604,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 617,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 642,
											"end": 647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 617,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 617,
											"end": 648,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 617,
											"end": 648,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 617,
											"end": 648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 661,
											"end": 679,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 661,
											"end": 679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 699,
											"end": 711,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 699,
											"end": 711,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 699,
											"end": 711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 699,
											"end": 711,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 731,
											"end": 743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 731,
											"end": 743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 731,
											"end": 743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 547,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 515,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 515,
											"end": 753,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 515,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 515,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 771,
											"end": 776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 776,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 78,
											"end": 782,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 78,
											"end": 782,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 787,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 787,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 840,
											"end": 845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 886,
											"end": 890,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 874,
											"end": 891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 860,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 860,
											"end": 862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 921,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 860,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 860,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 962,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 981,
											"end": 985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1021,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1021,
											"end": 1064,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1065,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1005,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1113,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1229,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1217,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1230,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1233,
											"end": 1253,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1278,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1615,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1295,
											"end": 1304,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1615,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1287,
											"end": 1615,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1381,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1433,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1448,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1436,
											"end": 1456,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1536,
											"end": 1539,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1483,
											"end": 1540,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1483,
											"end": 1540,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1483,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1541,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1541,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1561,
											"end": 1573,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1573,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1573,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1615,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 2200,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1649,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1730,
											"end": 1736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1814,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1855,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1855,
											"end": 1873,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 1873,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1855,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1942,
											"end": 1944,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1952,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1915,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2022,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2011,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2029,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2046,
											"end": 2051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2118,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2149,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 2200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 2200,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2205,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2303,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2315,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2320,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2287,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2285,
											"end": 2287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2287,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2285,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2392,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2401,
											"end": 2432,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2467,
											"end": 2728,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2467,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2588,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2593,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2667,
											"end": 2698,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 3210,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2733,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2874,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 2869,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2870,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2875,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2893,
											"end": 2899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2947,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2981,
											"end": 2986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2956,
											"end": 2987,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2956,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3011,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3062,
											"end": 3064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3047,
											"end": 3065,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3111,
											"end": 3133,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3185,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3154,
											"end": 3204,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3204,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3154,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 3210,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 3210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 3210,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 3210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 3210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 3210,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3215,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3215,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3383,
											"end": 3390,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3402,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3407,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3425,
											"end": 3431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3432,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3480,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3543,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3546,
											"end": 3568,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3589,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3642,
											"end": 3649,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3633,
											"end": 3639,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3631,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3589,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3589,
											"end": 3650,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3589,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3650,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3675,
											"end": 3707,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3659,
											"end": 3707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3659,
											"end": 3707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3734,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3735,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3760,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3813,
											"end": 3822,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3781,
											"end": 3843,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3854,
											"end": 4488,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3854,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4045,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4029,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4041,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4046,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4118,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4119,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4179,
											"end": 4181,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4182,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4207,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4228,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4280,
											"end": 4287,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4271,
											"end": 4277,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4260,
											"end": 4269,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4228,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4228,
											"end": 4288,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4228,
											"end": 4288,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4228,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4218,
											"end": 4288,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4218,
											"end": 4288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4345,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4368,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4373,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4398,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4474,
											"end": 4481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4419,
											"end": 4482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4683,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4607,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4602,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4603,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4608,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4633,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4677,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4683,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4688,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4688,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4824,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4813,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4825,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4830,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 4797,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4795,
											"end": 4797,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4848,
											"end": 4854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4840,
											"end": 4846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4855,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 4797,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4795,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4880,
											"end": 4903,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 4945,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5033,
											"end": 5040,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5022,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4991,
											"end": 5041,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4991,
											"end": 5041,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4991,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5089,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5095,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5129,
											"end": 5134,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 5104,
											"end": 5135,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5135,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5104,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5159,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 5165,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8370,
											"end": 8726,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8370,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8574,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8575,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8554,
											"end": 8575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8554,
											"end": 8575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8591,
											"end": 8609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8591,
											"end": 8609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8591,
											"end": 8609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8614,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8650,
											"end": 8684,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8645,
											"end": 8647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8623,
											"end": 8685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8719,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8544,
											"end": 8726,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9846,
											"end": 10121,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 9846,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9917,
											"end": 9919,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9911,
											"end": 9920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9982,
											"end": 9984,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9963,
											"end": 9976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9963,
											"end": 9976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9959,
											"end": 9986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9947,
											"end": 9987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9947,
											"end": 9987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10002,
											"end": 10036,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10061,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10064,
											"end": 10082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10102,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 10121,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 10121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9891,
											"end": 10121,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10126,
											"end": 10309,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10126,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10238,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10207,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10205,
											"end": 10207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10286,
											"end": 10287,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10282,
											"end": 10296,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10298,
											"end": 10302,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10195,
											"end": 10309,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10314,
											"end": 10550,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10314,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10353,
											"end": 10356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10374,
											"end": 10391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10374,
											"end": 10391,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10414,
											"end": 10447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10474,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10467,
											"end": 10468,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10504,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10542,
											"end": 10543,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10531,
											"end": 10544,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10531,
											"end": 10544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10550,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10555,
											"end": 10682,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 10555,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10616,
											"end": 10626,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 10611,
											"end": 10614,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10604,
											"end": 10605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10597,
											"end": 10628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10647,
											"end": 10651,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 10644,
											"end": 10645,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10637,
											"end": 10652,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10671,
											"end": 10675,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10668,
											"end": 10669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10676,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10818,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 10687,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10762,
											"end": 10793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10762,
											"end": 10793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 10794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 10794,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10742,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 10742,
											"end": 10744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10805,
											"end": 10806,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10798,
											"end": 10810,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getNFTPermit(address)": "6651f11d",
							"getNFTWrapper(address)": "b8c8aff8",
							"getNftTypeWrapper(bytes32)": "1a3dd0a5",
							"hub()": "365a86fc",
							"owner()": "8da5cb5b",
							"setNFTPermit(address,string)": "c88641a2",
							"setNFTPermits(address[],string[])": "95244b94",
							"setNftType(string,address)": "d8e4e93e",
							"setNftTypes(string[],address[])": "0a21cc43",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftfiHub\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_definedNftTypes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_definedNftWrappers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_permittedNftContracts\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"_permittedNftTypes\",\"type\":\"string[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nftType\",\"type\":\"bytes32\"}],\"name\":\"NFTPermit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nftType\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftWrapper\",\"type\":\"address\"}],\"name\":\"TypeUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"name\":\"getNFTPermit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"name\":\"getNFTWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nftType\",\"type\":\"bytes32\"}],\"name\":\"getNftTypeWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract INftfiHub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nftType\",\"type\":\"string\"}],\"name\":\"setNFTPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_nftContracts\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"_nftTypes\",\"type\":\"string[]\"}],\"name\":\"setNFTPermits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nftType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_nftWrapper\",\"type\":\"address\"}],\"name\":\"setNftType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_nftTypes\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_nftWrappers\",\"type\":\"address[]\"}],\"name\":\"setNftTypes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Registry for NFT contracts supported by NFTfi. Each NFT is associated with an NFT Type.\",\"events\":{\"NFTPermit(address,bytes32)\":{\"params\":{\"nftContract\":\"- Address of the NFT contract.\",\"nftType\":\"- NTF type e.g. bytes32(\\\"CRYPTO_KITTIES\\\")\"}},\"TypeUpdated(bytes32,address)\":{\"params\":{\"nftType\":\"- Nft type represented by keccak256('nft type').\",\"nftWrapper\":\"- Address of the wrapper contract.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets `nftTypeRegistry` Initialize `nftPermits` with a batch of permitted NFTs\",\"params\":{\"_admin\":\"- Initial admin of this contract.\",\"_definedNftTypes\":\"- All the ossible nft types\",\"_definedNftWrappers\":\"- All the possible wrappers for the types\",\"_nftfiHub\":\"- Address of the NftfiHub contract\",\"_permittedNftContracts\":\"- The addresses of the NFT contracts.\",\"_permittedNftTypes\":\"- The NFT Types. e.g. \\\"CRYPTO_KITTIES\\\" - \\\"\\\" means \\\"disable this permit\\\" - != \\\"\\\" means \\\"enable permit with the given NFT Type\\\"\"}},\"getNFTPermit(address)\":{\"params\":{\"_nftContract\":\"- The address of the NFT contract.\"}},\"getNFTWrapper(address)\":{\"params\":{\"_nftContract\":\"- The address of the NFT contract.\"}},\"getNftTypeWrapper(bytes32)\":{\"params\":{\"_nftType\":\"- The nft type, e.g. bytes32(\\\"ERC721\\\"), or bytes32(\\\"ERC1155\\\").\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"setNFTPermit(address,string)\":{\"params\":{\"_nftContract\":\"- The address of the NFT contract.\",\"_nftType\":\"- The NFT Type. e.g. \\\"CRYPTO_KITTIES\\\" - \\\"\\\" means \\\"disable this permit\\\" - != \\\"\\\" means \\\"enable permit with the given NFT Type\\\"\"}},\"setNFTPermits(address[],string[])\":{\"params\":{\"_nftContracts\":\"- The addresses of the NFT contracts.\",\"_nftTypes\":\"- The NFT Types. e.g. \\\"CRYPTO_KITTIES\\\" - \\\"\\\" means \\\"disable this permit\\\" - != \\\"\\\" means \\\"enable permit with the given NFT Type\\\"\"}},\"setNftType(string,address)\":{\"params\":{\"_nftType\":\"- The nft type, e.g. \\\"ERC721\\\", or \\\"ERC1155\\\".\",\"_nftWrapper\":\"- The address of the wrapper contract that implements INftWrapper behaviour for dealing with NFTs.\"}},\"setNftTypes(string[],address[])\":{\"params\":{\"_nftTypes\":\"- The nft types, e.g. \\\"ERC721\\\", or \\\"ERC1155\\\".\",\"_nftWrappers\":\"- The addresses of the wrapper contract that implements INftWrapper behaviour for dealing with NFTs.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PermittedNFTsAndTypeRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"NFTPermit(address,bytes32)\":{\"notice\":\"This event is fired whenever the admin sets a NFT's permit.\"},\"TypeUpdated(bytes32,address)\":{\"notice\":\"This event is fired whenever the admins register a ntf type.\"}},\"kind\":\"user\",\"methods\":{\"getNFTPermit(address)\":{\"notice\":\"This function can be called by anyone to lookup the Nft Type associated with the contract.Returns the NFT Type: - bytes32(\\\"\\\") means \\\"not permitted\\\" - != bytes32(\\\"\\\") means \\\"permitted with the given NFT Type\\\"\"},\"getNFTWrapper(address)\":{\"notice\":\"This function can be called by anyone to lookup the address of the NftWrapper associated to the `_nftContract` type.\"},\"getNftTypeWrapper(bytes32)\":{\"notice\":\"This function can be called by anyone to get the contract address that implements the given nft type.\"},\"setNFTPermit(address,string)\":{\"notice\":\"This function can be called by admins to change the permitted list status of an NFT contract. This includes both adding an NFT contract to the permitted list and removing it. `_nftContract` can not be zero address.\"},\"setNFTPermits(address[],string[])\":{\"notice\":\"This function can be called by admins to change the permitted list status of a batch NFT contracts. This includes both adding an NFT contract to the permitted list and removing it. `_nftContract` can not be zero address.\"},\"setNftType(string,address)\":{\"notice\":\"Set or update the wrapper contract address for the given NFT Type. Set address(0) for a nft type for un-register such type.\"},\"setNftTypes(string[],address[])\":{\"notice\":\"Batch set or update the wrappers contract address for the given batch of NFT Types. Set address(0) for a nft type for un-register such type.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PermittedNFTsAndTypeRegistry.sol\":\"PermittedNFTsAndTypeRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/PermittedNFTsAndTypeRegistry.sol\":{\"keccak256\":\"0xe0c318fd694920af812aaf908f8a36c929c59c6c92a359dd698027a5da6320ab\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://71330ec6fb6340c1fb0aee3399d5945a81cb088920531cc8d642532e73af14fe\",\"dweb:/ipfs/QmSfMWFsAVeGMbdJtRer2jYXNSu7vnqfPLLt27oxDasxn4\"]},\"contracts/interfaces/INftTypeRegistry.sol\":{\"keccak256\":\"0x8b44cd0a43a4d793116016b977a48cc9ee6cd7e72b05d2aa479ae8da38711538\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3e789f750b28f6516260d62b0e8523a9351d1b9ca5ca6d91dc4930b341e107ec\",\"dweb:/ipfs/QmXsdi3XxTDus4vF783VZEtdYf9peuGiawFSKvWTRyMtUS\"]},\"contracts/interfaces/INftfiHub.sol\":{\"keccak256\":\"0x9c4c27933c916224e63d7944d2f928b713ca1f82993c1c95fcc33bbfba83ad74\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://abddf22b64aad3062da9a6bc3b581ef14793baa306128d2e27068e8e2eaf97b4\",\"dweb:/ipfs/QmcUMV6w6vNDu7CJSas33Ech85Pfkjxb1cowAYSMekjdf2\"]},\"contracts/interfaces/IPermittedNFTs.sol\":{\"keccak256\":\"0x0eb676dad47c26800c3b6d6b64c227dc2e54eb1afcd2119f82e79b5435e28ab2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a0a055c496c0212854ae7c4c55bfdfc3f3377531eae2ea950cdb639c94bee7af\",\"dweb:/ipfs/QmZRecY9miLKaLvGLX5kRYEsBFRzLryduKgsMEGjvCnnCv\"]},\"contracts/utils/ContractKeys.sol\":{\"keccak256\":\"0x18c3f3a08195e774d39dbbeef091645330e1ec8546a9be2355bbf3fc271e547c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c662ce06df0f011f6494c8119e0141254f65da860bb0294f0b4b6d599a37ec6c\",\"dweb:/ipfs/QmZ1FtiUm6stxQNGT3PdNssqHw4D6uYUG3nazb3v7BF8zE\"]},\"contracts/utils/Ownable.sol\":{\"keccak256\":\"0x1b8d373c36c6429d0cf59f2e8dc40de843ec026b06bbac985928b898dd577e95\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d15eadcec99d6a998620138c359000bfa1a8b9be237f0ac9c171efb63dab638e\",\"dweb:/ipfs/QmS3GKw9bXChFdD2LegDq9rkx8j6wGPAAJwyCEmEFuFyD8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 615,
								"contract": "contracts/PermittedNFTsAndTypeRegistry.sol:PermittedNFTsAndTypeRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 36,
								"contract": "contracts/PermittedNFTsAndTypeRegistry.sol:PermittedNFTsAndTypeRegistry",
								"label": "hub",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(INftfiHub)483"
							},
							{
								"astId": 40,
								"contract": "contracts/PermittedNFTsAndTypeRegistry.sol:PermittedNFTsAndTypeRegistry",
								"label": "nftTypes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_address)"
							},
							{
								"astId": 45,
								"contract": "contracts/PermittedNFTsAndTypeRegistry.sol:PermittedNFTsAndTypeRegistry",
								"label": "nftPermits",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bytes32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(INftfiHub)483": {
								"encoding": "inplace",
								"label": "contract INftfiHub",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							}
						}
					},
					"userdoc": {
						"events": {
							"NFTPermit(address,bytes32)": {
								"notice": "This event is fired whenever the admin sets a NFT's permit."
							},
							"TypeUpdated(bytes32,address)": {
								"notice": "This event is fired whenever the admins register a ntf type."
							}
						},
						"kind": "user",
						"methods": {
							"getNFTPermit(address)": {
								"notice": "This function can be called by anyone to lookup the Nft Type associated with the contract.Returns the NFT Type: - bytes32(\"\") means \"not permitted\" - != bytes32(\"\") means \"permitted with the given NFT Type\""
							},
							"getNFTWrapper(address)": {
								"notice": "This function can be called by anyone to lookup the address of the NftWrapper associated to the `_nftContract` type."
							},
							"getNftTypeWrapper(bytes32)": {
								"notice": "This function can be called by anyone to get the contract address that implements the given nft type."
							},
							"setNFTPermit(address,string)": {
								"notice": "This function can be called by admins to change the permitted list status of an NFT contract. This includes both adding an NFT contract to the permitted list and removing it. `_nftContract` can not be zero address."
							},
							"setNFTPermits(address[],string[])": {
								"notice": "This function can be called by admins to change the permitted list status of a batch NFT contracts. This includes both adding an NFT contract to the permitted list and removing it. `_nftContract` can not be zero address."
							},
							"setNftType(string,address)": {
								"notice": "Set or update the wrapper contract address for the given NFT Type. Set address(0) for a nft type for un-register such type."
							},
							"setNftTypes(string[],address[])": {
								"notice": "Batch set or update the wrappers contract address for the given batch of NFT Types. Set address(0) for a nft type for un-register such type."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/INftTypeRegistry.sol": {
				"INftTypeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_nftType",
									"type": "bytes32"
								}
							],
							"name": "getNftTypeWrapper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_nftType",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_nftWrapper",
									"type": "address"
								}
							],
							"name": "setNftType",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "NFTfi",
						"details": "Interface for NFT Types Registry supported by NFTfi.",
						"kind": "dev",
						"methods": {},
						"title": "INftTypeRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getNftTypeWrapper(bytes32)": "1a3dd0a5",
							"setNftType(bytes32,address)": "65f79615"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nftType\",\"type\":\"bytes32\"}],\"name\":\"getNftTypeWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nftType\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_nftWrapper\",\"type\":\"address\"}],\"name\":\"setNftType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Interface for NFT Types Registry supported by NFTfi.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"INftTypeRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INftTypeRegistry.sol\":\"INftTypeRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INftTypeRegistry.sol\":{\"keccak256\":\"0x8b44cd0a43a4d793116016b977a48cc9ee6cd7e72b05d2aa479ae8da38711538\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3e789f750b28f6516260d62b0e8523a9351d1b9ca5ca6d91dc4930b341e107ec\",\"dweb:/ipfs/QmXsdi3XxTDus4vF783VZEtdYf9peuGiawFSKvWTRyMtUS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/INftfiHub.sol": {
				"INftfiHub": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_contractKey",
									"type": "bytes32"
								}
							],
							"name": "getContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_contractKey",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "setContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "NFTfi",
						"details": "NftfiHub interface",
						"kind": "dev",
						"methods": {},
						"title": "INftfiHub",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getContract(bytes32)": "e16c7d98",
							"setContract(string,address)": "3f0ed0df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_contractKey\",\"type\":\"bytes32\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"NftfiHub interface\",\"kind\":\"dev\",\"methods\":{},\"title\":\"INftfiHub\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INftfiHub.sol\":\"INftfiHub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INftfiHub.sol\":{\"keccak256\":\"0x9c4c27933c916224e63d7944d2f928b713ca1f82993c1c95fcc33bbfba83ad74\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://abddf22b64aad3062da9a6bc3b581ef14793baa306128d2e27068e8e2eaf97b4\",\"dweb:/ipfs/QmcUMV6w6vNDu7CJSas33Ech85Pfkjxb1cowAYSMekjdf2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPermittedNFTs.sol": {
				"IPermittedNFTs": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								}
							],
							"name": "getNFTPermit",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								}
							],
							"name": "getNFTWrapper",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_nftType",
									"type": "string"
								}
							],
							"name": "setNFTPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getNFTPermit(address)": "6651f11d",
							"getNFTWrapper(address)": "b8c8aff8",
							"setNFTPermit(address,string)": "c88641a2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"name\":\"getNFTPermit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"name\":\"getNFTWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nftType\",\"type\":\"string\"}],\"name\":\"setNFTPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPermittedNFTs.sol\":\"IPermittedNFTs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPermittedNFTs.sol\":{\"keccak256\":\"0x0eb676dad47c26800c3b6d6b64c227dc2e54eb1afcd2119f82e79b5435e28ab2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a0a055c496c0212854ae7c4c55bfdfc3f3377531eae2ea950cdb639c94bee7af\",\"dweb:/ipfs/QmZRecY9miLKaLvGLX5kRYEsBFRzLryduKgsMEGjvCnnCv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/ContractKeys.sol": {
				"ContractKeys": {
					"abi": [],
					"devdoc": {
						"author": "NFTfi",
						"details": "Common library for contract keys",
						"kind": "dev",
						"methods": {},
						"title": "ContractKeys",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/ContractKeys.sol\":151:1640  library ContractKeys {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/ContractKeys.sol\":151:1640  library ContractKeys {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122091b16920b843922819ff39fc1d77f12f4c71cd36629194611b9a5ee651e5393d64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091b16920b843922819ff39fc1d77f12f4c71cd36629194611b9a5ee651e5393d64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xB1 PUSH10 0x20B843922819FF39FC1D PUSH24 0xF12F4C71CD36629194611B9A5EE651E5393D64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "151:1489:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;151:1489:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091b16920b843922819ff39fc1d77f12f4c71cd36629194611b9a5ee651e5393d64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xB1 PUSH10 0x20B843922819FF39FC1D PUSH24 0xF12F4C71CD36629194611B9A5EE651E5393D64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "151:1489:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getIdFromStringKey(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 151,
									"end": 1640,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091b16920b843922819ff39fc1d77f12f4c71cd36629194611b9a5ee651e5393d64736f6c63430008040033",
									".code": [
										{
											"begin": 151,
											"end": 1640,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 151,
											"end": 1640,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Common library for contract keys\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ContractKeys\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/ContractKeys.sol\":\"ContractKeys\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/utils/ContractKeys.sol\":{\"keccak256\":\"0x18c3f3a08195e774d39dbbeef091645330e1ec8546a9be2355bbf3fc271e547c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c662ce06df0f011f6494c8119e0141254f65da860bb0294f0b4b6d599a37ec6c\",\"dweb:/ipfs/QmZ1FtiUm6stxQNGT3PdNssqHw4D6uYUG3nazb3v7BF8zE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner. Modified version from openzeppelin/contracts/access/Ownable.sol that allows to initialize the owner using a parameter in the constructor",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner. Modified version from openzeppelin/contracts/access/Ownable.sol that allows to initialize the owner using a parameter in the constructor\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Ownable.sol\":{\"keccak256\":\"0x1b8d373c36c6429d0cf59f2e8dc40de843ec026b06bbac985928b898dd577e95\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d15eadcec99d6a998620138c359000bfa1a8b9be237f0ac9c171efb63dab638e\",\"dweb:/ipfs/QmS3GKw9bXChFdD2LegDq9rkx8j6wGPAAJwyCEmEFuFyD8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 615,
								"contract": "contracts/utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"contracts/PermittedNFTsAndTypeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/PermittedNFTsAndTypeRegistry.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ContractKeys": [
							607
						],
						"INftTypeRegistry": [
							465
						],
						"INftfiHub": [
							483
						],
						"IPermittedNFTs": [
							507
						],
						"Ownable": [
							699
						],
						"PermittedNFTsAndTypeRegistry": [
							447
						]
					},
					"id": 448,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:1"
						},
						{
							"absolutePath": "contracts/interfaces/IPermittedNFTs.sol",
							"file": "./interfaces/IPermittedNFTs.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 508,
							"src": "62:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/INftTypeRegistry.sol",
							"file": "./interfaces/INftTypeRegistry.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 466,
							"src": "104:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/INftfiHub.sol",
							"file": "./interfaces/INftfiHub.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 484,
							"src": "148:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Ownable.sol",
							"file": "./utils/Ownable.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 700,
							"src": "186:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/ContractKeys.sol",
							"file": "./utils/ContractKeys.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 608,
							"src": "216:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 30,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "457:7:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "457:7:1"
								},
								{
									"baseName": {
										"id": 32,
										"name": "IPermittedNFTs",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 507,
										"src": "466:14:1"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "466:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 29,
								"nodeType": "StructuredDocumentation",
								"src": "252:163:1",
								"text": " @title  PermittedNFTsAndTypeRegistry\n @author NFTfi\n @dev Registry for NFT contracts supported by NFTfi.\n Each NFT is associated with an NFT Type."
							},
							"fullyImplemented": true,
							"id": 447,
							"linearizedBaseContracts": [
								447,
								507,
								699,
								21
							],
							"name": "PermittedNFTsAndTypeRegistry",
							"nameLocation": "425:28:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "365a86fc",
									"id": 36,
									"mutability": "mutable",
									"name": "hub",
									"nameLocation": "504:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "487:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INftfiHub_$483",
										"typeString": "contract INftfiHub"
									},
									"typeName": {
										"id": 35,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 34,
											"name": "INftfiHub",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 483,
											"src": "487:9:1"
										},
										"referencedDeclaration": 483,
										"src": "487:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INftfiHub_$483",
											"typeString": "contract INftfiHub"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "mutable",
									"name": "nftTypes",
									"nameLocation": "549:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "513:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 39,
										"keyType": {
											"id": 37,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "521:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "513:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "532:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "564:153:1",
										"text": " @notice A mapping from an NFT contract's address to the Token type of that contract. A zero Token Type indicates\n non-permitted."
									},
									"id": 45,
									"mutability": "mutable",
									"name": "nftPermits",
									"nameLocation": "758:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "722:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
										"typeString": "mapping(address => bytes32)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "730:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "722:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
											"typeString": "mapping(address => bytes32)"
										},
										"valueType": {
											"id": 43,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "741:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "827:225:1",
										"text": " @notice This event is fired whenever the admins register a ntf type.\n @param nftType - Nft type represented by keccak256('nft type').\n @param nftWrapper - Address of the wrapper contract."
									},
									"id": 52,
									"name": "TypeUpdated",
									"nameLocation": "1063:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftType",
												"nameLocation": "1091:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1075:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 47,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftWrapper",
												"nameLocation": "1116:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1100:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:53:1"
									},
									"src": "1057:71:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "1134:214:1",
										"text": " @notice This event is fired whenever the admin sets a NFT's permit.\n @param nftContract - Address of the NFT contract.\n @param nftType - NTF type e.g. bytes32(\"CRYPTO_KITTIES\")"
									},
									"id": 59,
									"name": "NFTPermit",
									"nameLocation": "1359:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1385:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1369:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftType",
												"nameLocation": "1414:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1398:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 56,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:54:1"
									},
									"src": "1353:70:1"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1631:393:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 66,
																"name": "_nftType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1690:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 64,
																"name": "ContractKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "1658:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																	"typeString": "type(library ContractKeys)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getIdFromStringKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 606,
															"src": "1658:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (string memory) pure returns (bytes32)"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1658:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 70,
																	"name": "ContractKeys",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "1747:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																		"typeString": "type(library ContractKeys)"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "AIRDROP_WRAPPER_STRING",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 585,
																"src": "1747:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 68,
																"name": "ContractKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "1715:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																	"typeString": "type(library ContractKeys)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getIdFromStringKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 606,
															"src": "1715:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (string memory) pure returns (bytes32)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1715:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1658:125:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "1927:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 88,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "1949:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 89,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1949:7:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 90,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "1960:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 91,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1960:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1949:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "63616c6c6572206973206e6f74206f776e6572",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1974:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197",
																			"typeString": "literal_string \"caller is not owner\""
																		},
																		"value": "caller is not owner"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_71bf1d68d1389a2700f2d22d4c4aeb9705cf8c62dc7efd39c7b83facc381f197",
																			"typeString": "literal_string \"caller is not owner\""
																		}
																	],
																	"id": 87,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1941:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1941:55:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 95,
															"nodeType": "ExpressionStatement",
															"src": "1941:55:1"
														}
													]
												},
												"id": 97,
												"nodeType": "IfStatement",
												"src": "1641:366:1",
												"trueBody": {
													"id": 86,
													"nodeType": "Block",
													"src": "1794:127:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 77,
																						"name": "ContractKeys",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 607,
																						"src": "1832:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																							"typeString": "type(library ContractKeys)"
																						}
																					},
																					"id": 78,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "AIRDROP_FACTORY",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 570,
																					"src": "1832:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 75,
																					"name": "hub",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 36,
																					"src": "1816:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_INftfiHub_$483",
																						"typeString": "contract INftfiHub"
																					}
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "getContract",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 482,
																				"src": "1816:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																					"typeString": "function (bytes32) view external returns (address)"
																				}
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1816:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 80,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "1865:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 81,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1865:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1816:61:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "63616c6c6572206973206e6f742041697264726f70466163746f7279",
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1879:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b2b2ca33fa18b4111bbdd05bc0f019673362a9f0f47e04ce9590cab30af108b3",
																			"typeString": "literal_string \"caller is not AirdropFactory\""
																		},
																		"value": "caller is not AirdropFactory"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b2b2ca33fa18b4111bbdd05bc0f019673362a9f0f47e04ce9590cab30af108b3",
																			"typeString": "literal_string \"caller is not AirdropFactory\""
																		}
																	],
																	"id": 74,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1808:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1808:102:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 85,
															"nodeType": "ExpressionStatement",
															"src": "1808:102:1"
														}
													]
												}
											},
											{
												"id": 98,
												"nodeType": "PlaceholderStatement",
												"src": "2016:1:1"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1490:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 100,
									"name": "onlyOwnerOrAirdropFactory",
									"nameLocation": "1581:25:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "1621:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1607:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 61,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1607:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:24:1"
									},
									"src": "1572:452:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2980:172:1",
										"statements": [
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "hub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2990:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INftfiHub_$483",
															"typeString": "contract INftfiHub"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 125,
																"name": "_nftfiHub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "3006:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 124,
															"name": "INftfiHub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2996:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INftfiHub_$483_$",
																"typeString": "type(contract INftfiHub)"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2996:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INftfiHub_$483",
															"typeString": "contract INftfiHub"
														}
													},
													"src": "2990:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INftfiHub_$483",
														"typeString": "contract INftfiHub"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2990:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 130,
															"name": "_definedNftTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3039:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														{
															"id": 131,
															"name": "_definedNftWrappers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3057:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 129,
														"name": "_setNftTypes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3026:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (string memory[] memory,address[] memory)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3026:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "3026:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "_permittedNftContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3102:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 136,
															"name": "_permittedNftTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3126:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														],
														"id": 134,
														"name": "_setNFTPermits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "3087:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,string memory[] memory)"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3087:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3087:58:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2097:612:1",
										"text": " @dev Sets `nftTypeRegistry`\n Initialize `nftPermits` with a batch of permitted NFTs\n @param _admin - Initial admin of this contract.\n @param _nftfiHub - Address of the NftfiHub contract\n @param _definedNftTypes - All the ossible nft types\n @param _definedNftWrappers - All the possible wrappers for the types\n @param _permittedNftContracts - The addresses of the NFT contracts.\n @param _permittedNftTypes - The NFT Types. e.g. \"CRYPTO_KITTIES\"\n - \"\" means \"disable this permit\"\n - != \"\" means \"enable permit with the given NFT Type\""
									},
									"id": 140,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 120,
													"name": "_admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 103,
													"src": "2972:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 121,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 119,
												"name": "Ownable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "2964:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2964:15:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "2743:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2735:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2735:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_nftfiHub",
												"nameLocation": "2767:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2759:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_definedNftTypes",
												"nameLocation": "2802:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2786:32:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 106,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2786:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 107,
													"nodeType": "ArrayTypeName",
													"src": "2786:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "_definedNftWrappers",
												"nameLocation": "2845:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2828:36:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 109,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2828:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 110,
													"nodeType": "ArrayTypeName",
													"src": "2828:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "_permittedNftContracts",
												"nameLocation": "2891:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2874:39:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 112,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2874:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 113,
													"nodeType": "ArrayTypeName",
													"src": "2874:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_permittedNftTypes",
												"nameLocation": "2939:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2923:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 115,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2923:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 116,
													"nodeType": "ArrayTypeName",
													"src": "2923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:238:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2980:0:1"
									},
									"scope": 447,
									"src": "2714:438:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										492
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "3860:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3884:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "_nftType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3898:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 152,
														"name": "_setNFTPermit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3870:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3870:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "3870:37:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3219:486:1",
										"text": " @notice This function can be called by admins to change the permitted list status of an NFT contract. This\n includes both adding an NFT contract to the permitted list and removing it.\n `_nftContract` can not be zero address.\n @param _nftContract - The address of the NFT contract.\n @param _nftType - The NFT Type. e.g. \"CRYPTO_KITTIES\"\n - \"\" means \"disable this permit\"\n - != \"\" means \"enable permit with the given NFT Type\""
									},
									"functionSelector": "c88641a2",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 149,
													"name": "_nftType",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "3846:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 148,
												"name": "onlyOwnerOrAirdropFactory",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 100,
												"src": "3820:25:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3820:35:1"
										}
									],
									"name": "setNFTPermit",
									"nameLocation": "3719:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 147,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3803:8:1"
									},
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "3740:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3732:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3754:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3754:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:46:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3860:0:1"
									},
									"scope": 447,
									"src": "3710:204:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "4524:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "_nftContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4549:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 172,
															"name": "_nftTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4564:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														],
														"id": 170,
														"name": "_setNFTPermits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "4534:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,string memory[] memory)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4534:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "4534:40:1"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "3920:498:1",
										"text": " @notice This function can be called by admins to change the permitted list status of a batch NFT contracts. This\n includes both adding an NFT contract to the permitted list and removing it.\n `_nftContract` can not be zero address.\n @param _nftContracts - The addresses of the NFT contracts.\n @param _nftTypes - The NFT Types. e.g. \"CRYPTO_KITTIES\"\n - \"\" means \"disable this permit\"\n - != \"\" means \"enable permit with the given NFT Type\""
									},
									"functionSelector": "95244b94",
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 635,
												"src": "4514:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4514:9:1"
										}
									],
									"name": "setNFTPermits",
									"nameLocation": "4432:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "_nftContracts",
												"nameLocation": "4463:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4446:30:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 160,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4446:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 161,
													"nodeType": "ArrayTypeName",
													"src": "4446:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_nftTypes",
												"nameLocation": "4494:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4478:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 163,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "4478:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 164,
													"nodeType": "ArrayTypeName",
													"src": "4478:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4445:59:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4524:0:1"
									},
									"scope": 447,
									"src": "4423:158:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										499
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5003:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 185,
														"name": "nftPermits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "5020:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
															"typeString": "mapping(address => bytes32)"
														}
													},
													"id": 187,
													"indexExpression": {
														"id": 186,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "5031:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5020:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "5013:31:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4587:326:1",
										"text": " @notice This function can be called by anyone to lookup the Nft Type associated with the contract.\n @param  _nftContract - The address of the NFT contract.\n @notice Returns the NFT Type:\n - bytes32(\"\") means \"not permitted\"\n - != bytes32(\"\") means \"permitted with the given NFT Type\""
									},
									"functionSelector": "6651f11d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTPermit",
									"nameLocation": "4927:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4976:8:1"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "4948:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "4940:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4939:22:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "4994:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:1"
									},
									"scope": 447,
									"src": "4918:133:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										506
									],
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "5360:102:1",
										"statements": [
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "nftType",
														"nameLocation": "5378:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "5370:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 199,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5370:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"baseExpression": {
														"id": 201,
														"name": "nftPermits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "5388:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
															"typeString": "mapping(address => bytes32)"
														}
													},
													"id": 203,
													"indexExpression": {
														"id": 202,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "5399:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5388:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5370:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "nftType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5447:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 205,
														"name": "getNftTypeWrapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5429:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) view returns (address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 198,
												"id": 208,
												"nodeType": "Return",
												"src": "5422:33:1"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5057:212:1",
										"text": " @notice This function can be called by anyone to lookup the address of the NftWrapper associated to the\n `_nftContract` type.\n @param _nftContract - The address of the NFT contract."
									},
									"functionSelector": "b8c8aff8",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTWrapper",
									"nameLocation": "5283:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5333:8:1"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "5305:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5297:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5296:22:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5351:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:9:1"
									},
									"scope": 447,
									"src": "5274:188:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "5921:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "_nftType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "5943:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 222,
															"name": "_nftWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5953:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 220,
														"name": "_setNftType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5931:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5931:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "5931:34:1"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "5468:364:1",
										"text": " @notice Set or update the wrapper contract address for the given NFT Type.\n Set address(0) for a nft type for un-register such type.\n @param _nftType - The nft type, e.g. \"ERC721\", or \"ERC1155\".\n @param _nftWrapper - The address of the wrapper contract that implements INftWrapper behaviour for dealing with\n NFTs."
									},
									"functionSelector": "d8e4e93e",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 218,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 217,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 635,
												"src": "5911:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5911:9:1"
										}
									],
									"name": "setNftType",
									"nameLocation": "5846:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "5871:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5857:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 212,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5857:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_nftWrapper",
												"nameLocation": "5889:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5881:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5856:45:1"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:0:1"
									},
									"scope": 447,
									"src": "5837:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6467:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_nftTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6490:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														{
															"id": 240,
															"name": "_nftWrappers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6501:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 238,
														"name": "_setNftTypes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "6477:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (string memory[] memory,address[] memory)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6477:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "6477:37:1"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5978:386:1",
										"text": " @notice Batch set or update the wrappers contract address for the given batch of NFT Types.\n Set address(0) for a nft type for un-register such type.\n @param _nftTypes - The nft types, e.g. \"ERC721\", or \"ERC1155\".\n @param _nftWrappers - The addresses of the wrapper contract that implements INftWrapper behaviour for dealing\n with NFTs."
									},
									"functionSelector": "0a21cc43",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 236,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 235,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 635,
												"src": "6457:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6457:9:1"
										}
									],
									"name": "setNftTypes",
									"nameLocation": "6378:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_nftTypes",
												"nameLocation": "6406:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6390:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 228,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "6390:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 229,
													"nodeType": "ArrayTypeName",
													"src": "6390:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "_nftWrappers",
												"nameLocation": "6434:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6417:29:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 231,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6417:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 232,
													"nodeType": "ArrayTypeName",
													"src": "6417:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6389:58:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6467:0:1"
									},
									"scope": 447,
									"src": "6369:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6829:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 252,
														"name": "nftTypes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "6846:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 254,
													"indexExpression": {
														"id": 253,
														"name": "_nftType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "6855:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6846:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 255,
												"nodeType": "Return",
												"src": "6839:25:1"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "6527:222:1",
										"text": " @notice This function can be called by anyone to get the contract address that implements the given nft type.\n @param  _nftType - The nft type, e.g. bytes32(\"ERC721\"), or bytes32(\"ERC1155\")."
									},
									"functionSelector": "1a3dd0a5",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNftTypeWrapper",
									"nameLocation": "6763:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "6789:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6781:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6780:18:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:9:1"
									},
									"scope": 447,
									"src": "6754:117:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "7321:242:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 268,
																			"name": "_nftType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "7345:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7339:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 266,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "7339:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7339:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7339:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7339:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e66745479706520697320656d707479",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7368:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f4820ecb86fa038962f1e1e7adaa85fb9e5bc50bd6f8297f5541dfc176887b6",
																"typeString": "literal_string \"nftType is empty\""
															},
															"value": "nftType is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f4820ecb86fa038962f1e1e7adaa85fb9e5bc50bd6f8297f5541dfc176887b6",
																"typeString": "literal_string \"nftType is empty\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7331:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7331:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "7331:56:1"
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "nftTypeKey",
														"nameLocation": "7405:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "7397:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 276,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7397:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 282,
												"initialValue": {
													"arguments": [
														{
															"id": 280,
															"name": "_nftType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "7450:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 278,
															"name": "ContractKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7418:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																"typeString": "type(library ContractKeys)"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getIdFromStringKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "7418:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7418:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7397:62:1"
											},
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 283,
															"name": "nftTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "7470:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "nftTypeKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "7479:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7470:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_nftWrapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "7493:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7470:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7470:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 290,
															"name": "nftTypeKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "7532:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 291,
															"name": "_nftWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "7544:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 289,
														"name": "TypeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "7520:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7520:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "EmitStatement",
												"src": "7515:41:1"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6877:364:1",
										"text": " @notice Set or update the wrapper contract address for the given NFT Type.\n Set address(0) for a nft type for un-register such type.\n @param _nftType - The nft type, e.g. \"ERC721\", or \"ERC1155\".\n @param _nftWrapper - The address of the wrapper contract that implements INftWrapper behaviour for dealing with\n NFTs."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNftType",
									"nameLocation": "7255:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "7281:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7267:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7267:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "_nftWrapper",
												"nameLocation": "7299:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "7291:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7266:45:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7321:0:1"
									},
									"scope": 447,
									"src": "7246:317:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "8071:243:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 306,
																	"name": "_nftTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "8089:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8089:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 308,
																	"name": "_nftWrappers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "8109:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8109:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8089:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7365744e667454797065732066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d61746368",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8130:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4dfd2f330a676d1326419f82eeb05a52130ed26733b2b05107e6321b215ade36",
																"typeString": "literal_string \"setNftTypes function information arity mismatch\""
															},
															"value": "setNftTypes function information arity mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4dfd2f330a676d1326419f82eeb05a52130ed26733b2b05107e6321b215ade36",
																"typeString": "literal_string \"setNftTypes function information arity mismatch\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8081:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "8081:99:1"
											},
											{
												"body": {
													"id": 334,
													"nodeType": "Block",
													"src": "8241:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 326,
																			"name": "_nftTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "8267:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 328,
																		"indexExpression": {
																			"id": 327,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "8277:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8267:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 329,
																			"name": "_nftWrappers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "8281:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 331,
																		"indexExpression": {
																			"id": 330,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "8294:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8281:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 325,
																	"name": "_setNftType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "8255:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
																		"typeString": "function (string memory,address)"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8255:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 333,
															"nodeType": "ExpressionStatement",
															"src": "8255:42:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "8211:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 319,
															"name": "_nftWrappers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "8215:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8215:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8211:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"initializationExpression": {
													"assignments": [
														315
													],
													"declarations": [
														{
															"constant": false,
															"id": 315,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8204:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 335,
															"src": "8196:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 314,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8196:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 317,
													"initialValue": {
														"hexValue": "30",
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8208:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8196:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8236:3:1",
														"subExpression": {
															"id": 322,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "8236:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 324,
													"nodeType": "ExpressionStatement",
													"src": "8236:3:1"
												},
												"nodeType": "ForStatement",
												"src": "8191:117:1"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "7569:408:1",
										"text": " @notice Batch set or update the wrappers contract address for the given batch of NFT Types.\n Set address(0) for a nft type for un-register such type.\n @param _nftTypes - The nft types, e.g. keccak256(\"ERC721\"), or keccak256(\"ERC1155\").\n @param _nftWrappers - The addresses of the wrapper contract that implements INftWrapper behaviour for dealing\n with NFTs."
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNftTypes",
									"nameLocation": "7991:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "_nftTypes",
												"nameLocation": "8020:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "8004:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 297,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "8004:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 298,
													"nodeType": "ArrayTypeName",
													"src": "8004:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "_nftWrappers",
												"nameLocation": "8048:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "8031:29:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 300,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8031:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 301,
													"nodeType": "ArrayTypeName",
													"src": "8031:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8003:58:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8071:0:1"
									},
									"scope": 447,
									"src": "7982:332:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "8836:573:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "8854:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8878:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8870:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 347,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8870:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8870:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8854:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6674436f6e7472616374206973207a65726f2061646472657373",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8882:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4a8a5ffdf6154af835b170654284cc0833d932e13c55a495b3559f73ea299f",
																"typeString": "literal_string \"nftContract is zero address\""
															},
															"value": "nftContract is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4a8a5ffdf6154af835b170654284cc0833d932e13c55a495b3559f73ea299f",
																"typeString": "literal_string \"nftContract is zero address\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8846:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8846:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "8846:66:1"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "nftTypeKey",
														"nameLocation": "8930:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "8922:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 355,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "_nftType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "8975:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 357,
															"name": "ContractKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "8943:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																"typeString": "type(library ContractKeys)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getIdFromStringKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "8943:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8943:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8922:62:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "nftTypeKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "8999:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9013:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8999:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "IfStatement",
												"src": "8995:125:1",
												"trueBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "9016:104:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 367,
																					"name": "nftTypeKey",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 356,
																					"src": "9056:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 366,
																				"name": "getNftTypeWrapper",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "9038:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
																					"typeString": "function (bytes32) view returns (address)"
																				}
																			},
																			"id": 368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9038:29:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9079:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9071:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 369,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "9071:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9071:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "9038:43:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e46542074797065206e6f742072656769737465726564",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9083:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_86c8b3f18727dde9a7498ee50083420855086c244c270ea642a5cc069dbfd722",
																			"typeString": "literal_string \"NFT type not registered\""
																		},
																		"value": "NFT type not registered"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_86c8b3f18727dde9a7498ee50083420855086c244c270ea642a5cc069dbfd722",
																			"typeString": "literal_string \"NFT type not registered\""
																		}
																	],
																	"id": 365,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9030:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9030:79:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 376,
															"nodeType": "ExpressionStatement",
															"src": "9030:79:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 380,
																	"name": "nftPermits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "9151:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
																		"typeString": "mapping(address => bytes32)"
																	}
																},
																"id": 382,
																"indexExpression": {
																	"id": 381,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "9162:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9151:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 385,
																			"name": "ContractKeys",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "9211:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																				"typeString": "type(library ContractKeys)"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "AIRDROP_WRAPPER_STRING",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 585,
																		"src": "9211:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 383,
																		"name": "ContractKeys",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "9179:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ContractKeys_$607_$",
																			"typeString": "type(library ContractKeys)"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getIdFromStringKey",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "9179:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9179:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "9151:96:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f70577261707065722063616e2774206265206d6f646966696564",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9261:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e2542f8cafbb0c5d6331f8ab93ae1f333e1be05184b567329d08fc4b3103194",
																"typeString": "literal_string \"AirdropWrapper can't be modified\""
															},
															"value": "AirdropWrapper can't be modified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e2542f8cafbb0c5d6331f8ab93ae1f333e1be05184b567329d08fc4b3103194",
																"typeString": "literal_string \"AirdropWrapper can't be modified\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9130:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9130:175:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "9130:175:1"
											},
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 392,
															"name": "nftPermits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "9315:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
																"typeString": "mapping(address => bytes32)"
															}
														},
														"id": 394,
														"indexExpression": {
															"id": 393,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "9326:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9315:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 395,
														"name": "nftTypeKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "9342:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "9315:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "9315:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "9377:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "nftTypeKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "9391:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 398,
														"name": "NFTPermit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "9367:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (address,bytes32)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9367:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "EmitStatement",
												"src": "9362:40:1"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "8320:433:1",
										"text": " @notice This function changes the permitted list status of an NFT contract. This includes both adding an NFT\n contract to the permitted list and removing it.\n @param _nftContract - The address of the NFT contract.\n @param _nftType - The NFT Type. e.g. bytes32(\"CRYPTO_KITTIES\")\n - bytes32(\"\") means \"disable this permit\"\n - != bytes32(\"\") means \"enable permit with the given NFT Type\""
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNFTPermit",
									"nameLocation": "8767:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "8789:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "8781:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "8817:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "8803:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8803:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8780:46:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8836:0:1"
									},
									"scope": 447,
									"src": "8758:651:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "9930:250:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 415,
																	"name": "_nftContracts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9948:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9948:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 417,
																	"name": "_nftTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "9972:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9972:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9948:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7365744e46545065726d6974732066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d61746368",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9990:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b188bf9a199e27127b7f2ce0b6348fba12016e0eab0ae3d2d86fe3db1e62507a",
																"typeString": "literal_string \"setNFTPermits function information arity mismatch\""
															},
															"value": "setNFTPermits function information arity mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b188bf9a199e27127b7f2ce0b6348fba12016e0eab0ae3d2d86fe3db1e62507a",
																"typeString": "literal_string \"setNFTPermits function information arity mismatch\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9940:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9940:102:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "9940:102:1"
											},
											{
												"body": {
													"id": 443,
													"nodeType": "Block",
													"src": "10104:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 435,
																			"name": "_nftContracts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "10132:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 437,
																		"indexExpression": {
																			"id": 436,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "10146:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10132:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 438,
																			"name": "_nftTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "10150:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 440,
																		"indexExpression": {
																			"id": 439,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "10160:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10150:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 434,
																	"name": "_setNFTPermit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "10118:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10118:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "10118:45:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 427,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "10073:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 428,
															"name": "_nftContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10077:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10077:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10073:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"initializationExpression": {
													"assignments": [
														424
													],
													"declarations": [
														{
															"constant": false,
															"id": 424,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10066:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 444,
															"src": "10058:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 423,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10058:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 426,
													"initialValue": {
														"hexValue": "30",
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10070:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10058:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10099:3:1",
														"subExpression": {
															"id": 431,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "10099:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ExpressionStatement",
													"src": "10099:3:1"
												},
												"nodeType": "ForStatement",
												"src": "10053:121:1"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "9415:418:1",
										"text": " @notice This function changes the permitted list status of a batch NFT contracts. This includes both adding an\n NFT contract to the permitted list and removing it.\n @param _nftContracts - The addresses of the NFT contracts.\n @param _nftTypes - The NFT Types. e.g. \"CRYPTO_KITTIES\"\n - \"\" means \"disable this permit\"\n - != \"\" means \"enable permit with the given NFT Type\""
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNFTPermits",
									"nameLocation": "9847:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "_nftContracts",
												"nameLocation": "9879:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "9862:30:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9862:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "9862:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "_nftTypes",
												"nameLocation": "9910:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "9894:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "9894:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "9894:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9861:59:1"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9930:0:1"
									},
									"scope": 447,
									"src": "9838:342:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 448,
							"src": "416:9766:1",
							"usedErrors": []
						}
					],
					"src": "38:10144:1"
				},
				"id": 1
			},
			"contracts/interfaces/INftTypeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/INftTypeRegistry.sol",
					"exportedSymbols": {
						"INftTypeRegistry": [
							465
						]
					},
					"id": 466,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 449,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 450,
								"nodeType": "StructuredDocumentation",
								"src": "62:112:2",
								"text": " @title INftTypeRegistry\n @author NFTfi\n @dev Interface for NFT Types Registry supported by NFTfi."
							},
							"fullyImplemented": false,
							"id": 465,
							"linearizedBaseContracts": [
								465
							],
							"name": "INftTypeRegistry",
							"nameLocation": "185:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "65f79615",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setNftType",
									"nameLocation": "217:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "236:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "228:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_nftWrapper",
												"nameLocation": "254:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "246:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:39:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:0:2"
									},
									"scope": 465,
									"src": "208:68:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a3dd0a5",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNftTypeWrapper",
									"nameLocation": "291:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "317:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "309:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 458,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:18:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "350:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:9:2"
									},
									"scope": 465,
									"src": "282:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 466,
							"src": "175:186:2",
							"usedErrors": []
						}
					],
					"src": "38:323:2"
				},
				"id": 2
			},
			"contracts/interfaces/INftfiHub.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/INftfiHub.sol",
					"exportedSymbols": {
						"INftfiHub": [
							483
						]
					},
					"id": 484,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "62:71:3",
								"text": " @title INftfiHub\n @author NFTfi\n @dev NftfiHub interface"
							},
							"fullyImplemented": false,
							"id": 483,
							"linearizedBaseContracts": [
								483
							],
							"name": "INftfiHub",
							"nameLocation": "144:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3f0ed0df",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContract",
									"nameLocation": "169:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "_contractKey",
												"nameLocation": "197:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "181:28:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "181:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "219:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "211:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:56:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:3"
									},
									"scope": 483,
									"src": "160:86:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e16c7d98",
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContract",
									"nameLocation": "261:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "_contractKey",
												"nameLocation": "281:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "273:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "272:22:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "318:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:9:3"
									},
									"scope": 483,
									"src": "252:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 484,
							"src": "134:195:3",
							"usedErrors": []
						}
					],
					"src": "38:291:3"
				},
				"id": 3
			},
			"contracts/interfaces/IPermittedNFTs.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPermittedNFTs.sol",
					"exportedSymbols": {
						"IPermittedNFTs": [
							507
						]
					},
					"id": 508,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 485,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "IPermittedNFTs",
							"nameLocation": "72:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c88641a2",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setNFTPermit",
									"nameLocation": "102:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "123:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "115:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "_nftType",
												"nameLocation": "151:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "137:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "137:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:46:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "169:0:4"
									},
									"scope": 507,
									"src": "93:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6651f11d",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTPermit",
									"nameLocation": "185:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "206:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "198:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:22:4"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "243:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:9:4"
									},
									"scope": 507,
									"src": "176:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8c8aff8",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTWrapper",
									"nameLocation": "267:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "289:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "281:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:22:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "326:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:9:4"
									},
									"scope": 507,
									"src": "258:77:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 508,
							"src": "62:275:4",
							"usedErrors": []
						}
					],
					"src": "38:299:4"
				},
				"id": 4
			},
			"contracts/utils/ContractKeys.sol": {
				"ast": {
					"absolutePath": "contracts/utils/ContractKeys.sol",
					"exportedSymbols": {
						"ContractKeys": [
							607
						]
					},
					"id": 608,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 510,
								"nodeType": "StructuredDocumentation",
								"src": "62:88:5",
								"text": " @title ContractKeys\n @author NFTfi\n @dev Common library for contract keys"
							},
							"fullyImplemented": true,
							"id": 607,
							"linearizedBaseContracts": [
								607
							],
							"name": "ContractKeys",
							"nameLocation": "159:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 516,
									"mutability": "constant",
									"name": "PERMITTED_ERC20S",
									"nameLocation": "204:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "178:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 511,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "178:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5045524d49545445445f455243323053",
												"id": 514,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "231:18:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a17003b67ce4118f10a78c8e4c9c67fb3e4e44d0b23eeccee906a8c2c414ae24",
													"typeString": "literal_string \"PERMITTED_ERC20S\""
												},
												"value": "PERMITTED_ERC20S"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a17003b67ce4118f10a78c8e4c9c67fb3e4e44d0b23eeccee906a8c2c414ae24",
													"typeString": "literal_string \"PERMITTED_ERC20S\""
												}
											],
											"id": 513,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "223:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 512,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "223:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 515,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "223:27:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 522,
									"mutability": "constant",
									"name": "PERMITTED_NFTS",
									"nameLocation": "282:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "256:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 517,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "256:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5045524d49545445445f4e465453",
												"id": 520,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "307:16:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5e3d6d20641ab8a878cc39f272bb5ae01188d948ca8b292370eebd3953591a0d",
													"typeString": "literal_string \"PERMITTED_NFTS\""
												},
												"value": "PERMITTED_NFTS"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5e3d6d20641ab8a878cc39f272bb5ae01188d948ca8b292370eebd3953591a0d",
													"typeString": "literal_string \"PERMITTED_NFTS\""
												}
											],
											"id": 519,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "299:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 518,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "299:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "299:25:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 528,
									"mutability": "constant",
									"name": "PERMITTED_PARTNERS",
									"nameLocation": "356:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "330:76:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 523,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5045524d49545445445f504152544e455253",
												"id": 526,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "385:20:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_90b2eef783b73afca3e07c172d3a4ac8f45ad6b0382d780405010a2c7400e06f",
													"typeString": "literal_string \"PERMITTED_PARTNERS\""
												},
												"value": "PERMITTED_PARTNERS"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_90b2eef783b73afca3e07c172d3a4ac8f45ad6b0382d780405010a2c7400e06f",
													"typeString": "literal_string \"PERMITTED_PARTNERS\""
												}
											],
											"id": 525,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "377:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 524,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "377:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 527,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "377:29:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 534,
									"mutability": "constant",
									"name": "NFT_TYPE_REGISTRY",
									"nameLocation": "438:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "412:74:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 529,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "412:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e46545f545950455f5245474953545259",
												"id": 532,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "466:19:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_81ab89188631d16a97e424e3325b5f2bef69b10d133e438fec37589968661e94",
													"typeString": "literal_string \"NFT_TYPE_REGISTRY\""
												},
												"value": "NFT_TYPE_REGISTRY"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_81ab89188631d16a97e424e3325b5f2bef69b10d133e438fec37589968661e94",
													"typeString": "literal_string \"NFT_TYPE_REGISTRY\""
												}
											],
											"id": 531,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "458:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 530,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "458:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 533,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "458:28:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 540,
									"mutability": "constant",
									"name": "LOAN_REGISTRY",
									"nameLocation": "518:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "492:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 535,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "492:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c4f414e5f5245474953545259",
												"id": 538,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "542:15:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3f8e135078b69b7bd770685197d36adc373e2167e7ce0749c9c0f1269e959c28",
													"typeString": "literal_string \"LOAN_REGISTRY\""
												},
												"value": "LOAN_REGISTRY"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3f8e135078b69b7bd770685197d36adc373e2167e7ce0749c9c0f1269e959c28",
													"typeString": "literal_string \"LOAN_REGISTRY\""
												}
											],
											"id": 537,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "534:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 536,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "534:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "534:24:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 546,
									"mutability": "constant",
									"name": "PERMITTED_SNFT_RECEIVER",
									"nameLocation": "590:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "564:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 541,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5045524d49545445445f534e46545f5245434549564552",
												"id": 544,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "624:25:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6d27a30b8f3a2ae1ff2a029f5af65afd966c221ceffb8e8218cf2f4defbf6fa2",
													"typeString": "literal_string \"PERMITTED_SNFT_RECEIVER\""
												},
												"value": "PERMITTED_SNFT_RECEIVER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6d27a30b8f3a2ae1ff2a029f5af65afd966c221ceffb8e8218cf2f4defbf6fa2",
													"typeString": "literal_string \"PERMITTED_SNFT_RECEIVER\""
												}
											],
											"id": 543,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "616:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 542,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "616:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 545,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "616:34:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 552,
									"mutability": "constant",
									"name": "PERMITTED_BUNDLE_ERC20S",
									"nameLocation": "682:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "656:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 547,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5045524d49545445445f42554e444c455f455243323053",
												"id": 550,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "716:25:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_66b3d97b04b02cd1a9424558b0951f3a36e413731d20c3ca823e81e17ef38375",
													"typeString": "literal_string \"PERMITTED_BUNDLE_ERC20S\""
												},
												"value": "PERMITTED_BUNDLE_ERC20S"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_66b3d97b04b02cd1a9424558b0951f3a36e413731d20c3ca823e81e17ef38375",
													"typeString": "literal_string \"PERMITTED_BUNDLE_ERC20S\""
												}
											],
											"id": 549,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "708:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 548,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "708:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 551,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "708:34:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 558,
									"mutability": "constant",
									"name": "PERMITTED_AIRDROPS",
									"nameLocation": "774:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "748:76:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 553,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "748:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5045524d49545445445f41495244524f5053",
												"id": 556,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "803:20:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_d25020654ee5a0349303a37690ffc06b0b0f604db1fb66e88501332372d6d620",
													"typeString": "literal_string \"PERMITTED_AIRDROPS\""
												},
												"value": "PERMITTED_AIRDROPS"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_d25020654ee5a0349303a37690ffc06b0b0f604db1fb66e88501332372d6d620",
													"typeString": "literal_string \"PERMITTED_AIRDROPS\""
												}
											],
											"id": 555,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "795:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 554,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "795:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 557,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "795:29:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 564,
									"mutability": "constant",
									"name": "AIRDROP_RECEIVER",
									"nameLocation": "856:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "830:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 559,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41495244524f505f5245434549564552",
												"id": 562,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "883:18:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_d7a2dcea67998c5c9cdfe7c1f3af556ee3689398b9bb37a4b7d4830bca660d64",
													"typeString": "literal_string \"AIRDROP_RECEIVER\""
												},
												"value": "AIRDROP_RECEIVER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_d7a2dcea67998c5c9cdfe7c1f3af556ee3689398b9bb37a4b7d4830bca660d64",
													"typeString": "literal_string \"AIRDROP_RECEIVER\""
												}
											],
											"id": 561,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "875:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 560,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "875:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "875:27:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 570,
									"mutability": "constant",
									"name": "AIRDROP_FACTORY",
									"nameLocation": "934:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "908:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 565,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "908:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41495244524f505f464143544f5259",
												"id": 568,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "960:17:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_015ac1833e4fe062a9699477445bb303771c1d9e21b8ef45c91b57d06f1b7bc1",
													"typeString": "literal_string \"AIRDROP_FACTORY\""
												},
												"value": "AIRDROP_FACTORY"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_015ac1833e4fe062a9699477445bb303771c1d9e21b8ef45c91b57d06f1b7bc1",
													"typeString": "literal_string \"AIRDROP_FACTORY\""
												}
											],
											"id": 567,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "952:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 566,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "952:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 569,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "952:26:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 576,
									"mutability": "constant",
									"name": "AIRDROP_FLASH_LOAN",
									"nameLocation": "1010:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "984:76:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 571,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41495244524f505f464c4153485f4c4f414e",
												"id": 574,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1039:20:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_49a63bc20550515f3444ba86e20f9e1e2dde06c53d6516863796a62eb34e0740",
													"typeString": "literal_string \"AIRDROP_FLASH_LOAN\""
												},
												"value": "AIRDROP_FLASH_LOAN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_49a63bc20550515f3444ba86e20f9e1e2dde06c53d6516863796a62eb34e0740",
													"typeString": "literal_string \"AIRDROP_FLASH_LOAN\""
												}
											],
											"id": 573,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1031:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 572,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1031:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1031:29:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 582,
									"mutability": "constant",
									"name": "NFTFI_BUNDLER",
									"nameLocation": "1092:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "1066:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 577,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1066:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e465446495f42554e444c4552",
												"id": 580,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1116:15:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ee24875ff1d36a49184f442953a49fb99815dec97099efd681f1be270f23e2dc",
													"typeString": "literal_string \"NFTFI_BUNDLER\""
												},
												"value": "NFTFI_BUNDLER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ee24875ff1d36a49184f442953a49fb99815dec97099efd681f1be270f23e2dc",
													"typeString": "literal_string \"NFTFI_BUNDLER\""
												}
											],
											"id": 579,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1108:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 578,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1108:7:5",
												"typeDescriptions": {}
											}
										},
										"id": 581,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1108:24:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 585,
									"mutability": "constant",
									"name": "AIRDROP_WRAPPER_STRING",
									"nameLocation": "1164:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "1139:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 583,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1139:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "41697264726f7057726170706572",
										"id": 584,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1189:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9e4e2bc7ecfbb8e1b07f8653cbdead3935adbfe5b5d14488d70edd1146487c80",
											"typeString": "literal_string \"AirdropWrapper\""
										},
										"value": "AirdropWrapper"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "1448:190:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 596,
																			"name": "_key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "1472:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1466:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 594,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1466:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1466:11:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1466:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3332",
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "1466:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206b6579",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1492:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1674f01222d591fcbce2c2b6ddff3cecc1eab7d1c1d62d5c9c662bcab901dd8",
																"typeString": "literal_string \"invalid key\""
															},
															"value": "invalid key"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1674f01222d591fcbce2c2b6ddff3cecc1eab7d1c1d62d5c9c662bcab901dd8",
																"typeString": "literal_string \"invalid key\""
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1458:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "1458:48:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1582:50:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1596:26:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_key",
																				"nodeType": "YulIdentifier",
																				"src": "1612:4:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1618:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:13:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1602:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:20:5"
															},
															"variableNames": [
																{
																	"name": "id",
																	"nodeType": "YulIdentifier",
																	"src": "1596:2:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 588,
														"isOffset": false,
														"isSlot": false,
														"src": "1612:4:5",
														"valueSize": 1
													},
													{
														"declaration": 591,
														"isOffset": false,
														"isSlot": false,
														"src": "1596:2:5",
														"valueSize": 1
													}
												],
												"id": 604,
												"nodeType": "InlineAssembly",
												"src": "1573:59:5"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "1212:148:5",
										"text": " @notice Returns the bytes32 representation of a string\n @param _key the string key\n @return id bytes32 representation"
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIdFromStringKey",
									"nameLocation": "1374:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "1407:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1393:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:20:5"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 590,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:12:5"
									},
									"scope": 607,
									"src": "1365:273:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 608,
							"src": "151:1489:5",
							"usedErrors": []
						}
					],
					"src": "38:1602:5"
				},
				"id": 5
			},
			"contracts/utils/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							699
						]
					},
					"id": 700,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 609,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 610,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 22,
							"src": "62:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 612,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "785:7:6"
									},
									"id": 613,
									"nodeType": "InheritanceSpecifier",
									"src": "785:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 611,
								"nodeType": "StructuredDocumentation",
								"src": "115:640:6",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner.\n Modified version from openzeppelin/contracts/access/Ownable.sol that allows to\n initialize the owner using a parameter in the constructor"
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699,
								21
							],
							"name": "Ownable",
							"nameLocation": "774:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 615,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "815:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "799:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 614,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "799:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 621,
									"name": "OwnershipTransferred",
									"nameLocation": "834:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "871:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "855:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "902:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "886:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:57:6"
									},
									"src": "828:84:6"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1021:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 625,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "1039:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1039:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 627,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1050:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1050:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1039:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1064:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1031:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1031:68:6"
											},
											{
												"id": 633,
												"nodeType": "PlaceholderStatement",
												"src": "1109:1:6"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "918:77:6",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 635,
									"name": "onlyOwner",
									"nameLocation": "1009:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:2:6"
									},
									"src": "1000:117:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "1254:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 642,
															"name": "_initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1274:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 641,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "1264:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1264:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "1264:24:6"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1123:91:6",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "1239:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1231:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:23:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1254:0:6"
									},
									"scope": 699,
									"src": "1219:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "1515:121:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 655,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "1533:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1554:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 656,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1546:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1546:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1533:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1558:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1525:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "1525:74:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "1619:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 664,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "1609:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1609:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "1609:20:6"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "1301:138:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 651,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 635,
												"src": "1505:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1505:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1453:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1479:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1471:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:19:6"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1515:0:6"
									},
									"scope": 699,
									"src": "1444:192:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "1767:30:6",
										"statements": [
											{
												"expression": {
													"id": 675,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "1784:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 674,
												"id": 676,
												"nodeType": "Return",
												"src": "1777:13:6"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1642:65:6",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1721:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "1758:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:9:6"
									},
									"scope": 699,
									"src": "1712:85:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "1893:126:6",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1911:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "1903:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 684,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1903:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"id": 686,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "1922:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1903:25:6"
											},
											{
												"expression": {
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 688,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "1938:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 689,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "1947:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1938:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "1938:18:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 693,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "1992:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2002:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "1971:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "EmitStatement",
												"src": "1966:46:6"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "1803:39:6",
										"text": " @dev Sets the owner."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "1856:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1874:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1866:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:19:6"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1893:0:6"
									},
									"scope": 699,
									"src": "1847:172:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 700,
							"src": "756:1265:6",
							"usedErrors": []
						}
					],
					"src": "38:1983:6"
				},
				"id": 6
			}
		}
	}
}