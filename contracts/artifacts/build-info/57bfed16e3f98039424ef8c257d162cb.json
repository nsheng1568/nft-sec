{
	"id": "57bfed16e3f98039424ef8c257d162cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC721Wrapper.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./interfaces/INftWrapper.sol\";\n\n/**\n * @title ERC721Wrapper\n * @author NFTfi\n * @dev Provides logic to transfer ERC721\n */\ncontract ERC721Wrapper is INftWrapper {\n    /**\n     * @dev Transfers ERC721 `_nftId` handled by the contract `_nftContract` from `_sender` to `_recipient`\n     *\n     * @param _sender - The current owner of the ERC721\n     * @param _recipient - The new owner of the ERC721\n     * @param _nftContract - ERC721 contract\n     * @param _nftId - ERC721 id\n     *\n     * @return true if successfully transferred, false otherwise\n     */\n    function transferNFT(\n        address _sender,\n        address _recipient,\n        address _nftContract,\n        uint256 _nftId\n    ) external override returns (bool) {\n        IERC721(_nftContract).safeTransferFrom(_sender, _recipient, _nftId);\n        return true;\n    }\n\n    function isOwner(\n        address _owner,\n        address _nftContract,\n        uint256 _tokenId\n    ) external view override returns (bool) {\n        return IERC721(_nftContract).ownerOf(_tokenId) == _owner;\n    }\n\n    function wrapAirdropReceiver(\n        address _recipient,\n        address _nftContract,\n        uint256 _nftId,\n        address _beneficiary\n    ) external override returns (bool) {\n        IERC721(_nftContract).safeTransferFrom(address(this), _recipient, _nftId, abi.encode(_beneficiary));\n\n        return true;\n    }\n}"
			},
			"contracts/interfaces/INftWrapper.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.4;\n\n/**\n * @title INftTypeRegistry\n * @author NFTfi\n * @dev Interface for NFT Wrappers.\n */\ninterface INftWrapper {\n    function transferNFT(\n        address from,\n        address to,\n        address nftContract,\n        uint256 tokenId\n    ) external returns (bool);\n\n    function isOwner(\n        address owner,\n        address nftContract,\n        uint256 tokenId\n    ) external view returns (bool);\n\n    function wrapAirdropReceiver(\n        address _recipient,\n        address _nftContract,\n        uint256 _nftId,\n        address _beneficiary\n    ) external returns (bool);\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721Wrapper.sol": {
				"ERC721Wrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_nftId",
									"type": "uint256"
								}
							],
							"name": "transferNFT",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_nftId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								}
							],
							"name": "wrapAirdropReceiver",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "NFTfi",
						"details": "Provides logic to transfer ERC721",
						"kind": "dev",
						"methods": {
							"transferNFT(address,address,address,uint256)": {
								"details": "Transfers ERC721 `_nftId` handled by the contract `_nftContract` from `_sender` to `_recipient`",
								"params": {
									"_nftContract": "- ERC721 contract",
									"_nftId": "- ERC721 id",
									"_recipient": "- The new owner of the ERC721",
									"_sender": "- The current owner of the ERC721"
								},
								"returns": {
									"_0": "true if successfully transferred, false otherwise"
								}
							}
						},
						"title": "ERC721Wrapper",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721Wrapper.sol\":251:1505  contract ERC721Wrapper is INftWrapper {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721Wrapper.sol\":251:1505  contract ERC721Wrapper is INftWrapper {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb0306671\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc7783aaa\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf370e8c5\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721Wrapper.sol\":687:959  function transferNFT(... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721Wrapper.sol\":1185:1503  function wrapAirdropReceiver(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721Wrapper.sol\":965:1179  function isOwner(... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721Wrapper.sol\":687:959  function transferNFT(... */\n    tag_9:\n        /* \"contracts/ERC721Wrapper.sol\":848:852  bool */\n      0x00\n        /* \"contracts/ERC721Wrapper.sol\":872:884  _nftContract */\n      dup3\n        /* \"contracts/ERC721Wrapper.sol\":864:902  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/ERC721Wrapper.sol\":903:910  _sender */\n      dup7\n        /* \"contracts/ERC721Wrapper.sol\":912:922  _recipient */\n      dup7\n        /* \"contracts/ERC721Wrapper.sol\":924:930  _nftId */\n      dup6\n        /* \"contracts/ERC721Wrapper.sol\":864:931  IERC721(_nftContract).safeTransferFrom(_sender, _recipient, _nftId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721Wrapper.sol\":948:952  true */\n      0x01\n        /* \"contracts/ERC721Wrapper.sol\":941:952  return true */\n      swap1\n      pop\n        /* \"contracts/ERC721Wrapper.sol\":687:959  function transferNFT(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721Wrapper.sol\":1185:1503  function wrapAirdropReceiver(... */\n    tag_15:\n        /* \"contracts/ERC721Wrapper.sol\":1359:1363  bool */\n      0x00\n        /* \"contracts/ERC721Wrapper.sol\":1383:1395  _nftContract */\n      dup4\n        /* \"contracts/ERC721Wrapper.sol\":1375:1413  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/ERC721Wrapper.sol\":1422:1426  this */\n      address\n        /* \"contracts/ERC721Wrapper.sol\":1429:1439  _recipient */\n      dup8\n        /* \"contracts/ERC721Wrapper.sol\":1441:1447  _nftId */\n      dup7\n        /* \"contracts/ERC721Wrapper.sol\":1460:1472  _beneficiary */\n      dup7\n        /* \"contracts/ERC721Wrapper.sol\":1449:1473  abi.encode(_beneficiary) */\n      add(0x20, mload(0x40))\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721Wrapper.sol\":1375:1474  IERC721(_nftContract).safeTransferFrom(address(this), _recipient, _nftId, abi.encode(_beneficiary)) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721Wrapper.sol\":1492:1496  true */\n      0x01\n        /* \"contracts/ERC721Wrapper.sol\":1485:1496  return true */\n      swap1\n      pop\n        /* \"contracts/ERC721Wrapper.sol\":1185:1503  function wrapAirdropReceiver(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721Wrapper.sol\":965:1179  function isOwner(... */\n    tag_20:\n        /* \"contracts/ERC721Wrapper.sol\":1100:1104  bool */\n      0x00\n        /* \"contracts/ERC721Wrapper.sol\":1166:1172  _owner */\n      dup4\n        /* \"contracts/ERC721Wrapper.sol\":1123:1172  IERC721(_nftContract).ownerOf(_tokenId) == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721Wrapper.sol\":1131:1143  _nftContract */\n      dup4\n        /* \"contracts/ERC721Wrapper.sol\":1123:1152  IERC721(_nftContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/ERC721Wrapper.sol\":1153:1161  _tokenId */\n      dup5\n        /* \"contracts/ERC721Wrapper.sol\":1123:1162  IERC721(_nftContract).ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"contracts/ERC721Wrapper.sol\":1123:1172  IERC721(_nftContract).ownerOf(_tokenId) == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721Wrapper.sol\":1116:1172  return IERC721(_nftContract).ownerOf(_tokenId) == _owner */\n      swap1\n      pop\n        /* \"contracts/ERC721Wrapper.sol\":965:1179  function isOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_45:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_47\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_49:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_51\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_48\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":215:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":301:440   */\n    tag_52:\n        /* \"#utility.yul\":347:352   */\n      0x00\n        /* \"#utility.yul\":385:391   */\n      dup2\n        /* \"#utility.yul\":372:392   */\n      calldataload\n        /* \"#utility.yul\":363:392   */\n      swap1\n      pop\n        /* \"#utility.yul\":401:434   */\n      tag_54\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":401:434   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":353:440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":446:730   */\n    tag_43:\n        /* \"#utility.yul\":516:522   */\n      0x00\n        /* \"#utility.yul\":565:567   */\n      0x20\n        /* \"#utility.yul\":553:562   */\n      dup3\n        /* \"#utility.yul\":544:551   */\n      dup5\n        /* \"#utility.yul\":540:563   */\n      sub\n        /* \"#utility.yul\":536:568   */\n      slt\n        /* \"#utility.yul\":533:535   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":581:582   */\n      0x00\n        /* \"#utility.yul\":578:579   */\n      dup1\n        /* \"#utility.yul\":571:583   */\n      revert\n        /* \"#utility.yul\":533:535   */\n    tag_57:\n        /* \"#utility.yul\":624:625   */\n      0x00\n        /* \"#utility.yul\":649:713   */\n      tag_58\n        /* \"#utility.yul\":705:712   */\n      dup5\n        /* \"#utility.yul\":696:702   */\n      dup3\n        /* \"#utility.yul\":685:694   */\n      dup6\n        /* \"#utility.yul\":681:703   */\n      add\n        /* \"#utility.yul\":649:713   */\n      tag_49\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":639:713   */\n      swap2\n      pop\n        /* \"#utility.yul\":595:723   */\n      pop\n        /* \"#utility.yul\":523:730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":736:1434   */\n    tag_8:\n        /* \"#utility.yul\":822:828   */\n      0x00\n        /* \"#utility.yul\":830:836   */\n      dup1\n        /* \"#utility.yul\":838:844   */\n      0x00\n        /* \"#utility.yul\":846:852   */\n      dup1\n        /* \"#utility.yul\":895:898   */\n      0x80\n        /* \"#utility.yul\":883:892   */\n      dup6\n        /* \"#utility.yul\":874:881   */\n      dup8\n        /* \"#utility.yul\":870:893   */\n      sub\n        /* \"#utility.yul\":866:899   */\n      slt\n        /* \"#utility.yul\":863:865   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      0x00\n        /* \"#utility.yul\":909:910   */\n      dup1\n        /* \"#utility.yul\":902:914   */\n      revert\n        /* \"#utility.yul\":863:865   */\n    tag_60:\n        /* \"#utility.yul\":955:956   */\n      0x00\n        /* \"#utility.yul\":980:1033   */\n      tag_61\n        /* \"#utility.yul\":1025:1032   */\n      dup8\n        /* \"#utility.yul\":1016:1022   */\n      dup3\n        /* \"#utility.yul\":1005:1014   */\n      dup9\n        /* \"#utility.yul\":1001:1023   */\n      add\n        /* \"#utility.yul\":980:1033   */\n      tag_45\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":970:1033   */\n      swap5\n      pop\n        /* \"#utility.yul\":926:1043   */\n      pop\n        /* \"#utility.yul\":1082:1084   */\n      0x20\n        /* \"#utility.yul\":1108:1161   */\n      tag_62\n        /* \"#utility.yul\":1153:1160   */\n      dup8\n        /* \"#utility.yul\":1144:1150   */\n      dup3\n        /* \"#utility.yul\":1133:1142   */\n      dup9\n        /* \"#utility.yul\":1129:1151   */\n      add\n        /* \"#utility.yul\":1108:1161   */\n      tag_45\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1098:1161   */\n      swap4\n      pop\n        /* \"#utility.yul\":1053:1171   */\n      pop\n        /* \"#utility.yul\":1210:1212   */\n      0x40\n        /* \"#utility.yul\":1236:1289   */\n      tag_63\n        /* \"#utility.yul\":1281:1288   */\n      dup8\n        /* \"#utility.yul\":1272:1278   */\n      dup3\n        /* \"#utility.yul\":1261:1270   */\n      dup9\n        /* \"#utility.yul\":1257:1279   */\n      add\n        /* \"#utility.yul\":1236:1289   */\n      tag_45\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1226:1289   */\n      swap3\n      pop\n        /* \"#utility.yul\":1181:1299   */\n      pop\n        /* \"#utility.yul\":1338:1340   */\n      0x60\n        /* \"#utility.yul\":1364:1417   */\n      tag_64\n        /* \"#utility.yul\":1409:1416   */\n      dup8\n        /* \"#utility.yul\":1400:1406   */\n      dup3\n        /* \"#utility.yul\":1389:1398   */\n      dup9\n        /* \"#utility.yul\":1385:1407   */\n      add\n        /* \"#utility.yul\":1364:1417   */\n      tag_52\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1354:1417   */\n      swap2\n      pop\n        /* \"#utility.yul\":1309:1427   */\n      pop\n        /* \"#utility.yul\":853:1434   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1440:1992   */\n    tag_19:\n        /* \"#utility.yul\":1517:1523   */\n      0x00\n        /* \"#utility.yul\":1525:1531   */\n      dup1\n        /* \"#utility.yul\":1533:1539   */\n      0x00\n        /* \"#utility.yul\":1582:1584   */\n      0x60\n        /* \"#utility.yul\":1570:1579   */\n      dup5\n        /* \"#utility.yul\":1561:1568   */\n      dup7\n        /* \"#utility.yul\":1557:1580   */\n      sub\n        /* \"#utility.yul\":1553:1585   */\n      slt\n        /* \"#utility.yul\":1550:1552   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1598:1599   */\n      0x00\n        /* \"#utility.yul\":1595:1596   */\n      dup1\n        /* \"#utility.yul\":1588:1600   */\n      revert\n        /* \"#utility.yul\":1550:1552   */\n    tag_66:\n        /* \"#utility.yul\":1641:1642   */\n      0x00\n        /* \"#utility.yul\":1666:1719   */\n      tag_67\n        /* \"#utility.yul\":1711:1718   */\n      dup7\n        /* \"#utility.yul\":1702:1708   */\n      dup3\n        /* \"#utility.yul\":1691:1700   */\n      dup8\n        /* \"#utility.yul\":1687:1709   */\n      add\n        /* \"#utility.yul\":1666:1719   */\n      tag_45\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1656:1719   */\n      swap4\n      pop\n        /* \"#utility.yul\":1612:1729   */\n      pop\n        /* \"#utility.yul\":1768:1770   */\n      0x20\n        /* \"#utility.yul\":1794:1847   */\n      tag_68\n        /* \"#utility.yul\":1839:1846   */\n      dup7\n        /* \"#utility.yul\":1830:1836   */\n      dup3\n        /* \"#utility.yul\":1819:1828   */\n      dup8\n        /* \"#utility.yul\":1815:1837   */\n      add\n        /* \"#utility.yul\":1794:1847   */\n      tag_45\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1784:1847   */\n      swap3\n      pop\n        /* \"#utility.yul\":1739:1857   */\n      pop\n        /* \"#utility.yul\":1896:1898   */\n      0x40\n        /* \"#utility.yul\":1922:1975   */\n      tag_69\n        /* \"#utility.yul\":1967:1974   */\n      dup7\n        /* \"#utility.yul\":1958:1964   */\n      dup3\n        /* \"#utility.yul\":1947:1956   */\n      dup8\n        /* \"#utility.yul\":1943:1965   */\n      add\n        /* \"#utility.yul\":1922:1975   */\n      tag_52\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1912:1975   */\n      swap2\n      pop\n        /* \"#utility.yul\":1867:1985   */\n      pop\n        /* \"#utility.yul\":1540:1992   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1998:2696   */\n    tag_14:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2092:2098   */\n      dup1\n        /* \"#utility.yul\":2100:2106   */\n      0x00\n        /* \"#utility.yul\":2108:2114   */\n      dup1\n        /* \"#utility.yul\":2157:2160   */\n      0x80\n        /* \"#utility.yul\":2145:2154   */\n      dup6\n        /* \"#utility.yul\":2136:2143   */\n      dup8\n        /* \"#utility.yul\":2132:2155   */\n      sub\n        /* \"#utility.yul\":2128:2161   */\n      slt\n        /* \"#utility.yul\":2125:2127   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2174:2175   */\n      0x00\n        /* \"#utility.yul\":2171:2172   */\n      dup1\n        /* \"#utility.yul\":2164:2176   */\n      revert\n        /* \"#utility.yul\":2125:2127   */\n    tag_71:\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2242:2295   */\n      tag_72\n        /* \"#utility.yul\":2287:2294   */\n      dup8\n        /* \"#utility.yul\":2278:2284   */\n      dup3\n        /* \"#utility.yul\":2267:2276   */\n      dup9\n        /* \"#utility.yul\":2263:2285   */\n      add\n        /* \"#utility.yul\":2242:2295   */\n      tag_45\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2232:2295   */\n      swap5\n      pop\n        /* \"#utility.yul\":2188:2305   */\n      pop\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2370:2423   */\n      tag_73\n        /* \"#utility.yul\":2415:2422   */\n      dup8\n        /* \"#utility.yul\":2406:2412   */\n      dup3\n        /* \"#utility.yul\":2395:2404   */\n      dup9\n        /* \"#utility.yul\":2391:2413   */\n      add\n        /* \"#utility.yul\":2370:2423   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2360:2423   */\n      swap4\n      pop\n        /* \"#utility.yul\":2315:2433   */\n      pop\n        /* \"#utility.yul\":2472:2474   */\n      0x40\n        /* \"#utility.yul\":2498:2551   */\n      tag_74\n        /* \"#utility.yul\":2543:2550   */\n      dup8\n        /* \"#utility.yul\":2534:2540   */\n      dup3\n        /* \"#utility.yul\":2523:2532   */\n      dup9\n        /* \"#utility.yul\":2519:2541   */\n      add\n        /* \"#utility.yul\":2498:2551   */\n      tag_52\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2488:2551   */\n      swap3\n      pop\n        /* \"#utility.yul\":2443:2561   */\n      pop\n        /* \"#utility.yul\":2600:2602   */\n      0x60\n        /* \"#utility.yul\":2626:2679   */\n      tag_75\n        /* \"#utility.yul\":2671:2678   */\n      dup8\n        /* \"#utility.yul\":2662:2668   */\n      dup3\n        /* \"#utility.yul\":2651:2660   */\n      dup9\n        /* \"#utility.yul\":2647:2669   */\n      add\n        /* \"#utility.yul\":2626:2679   */\n      tag_45\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2616:2679   */\n      swap2\n      pop\n        /* \"#utility.yul\":2571:2689   */\n      pop\n        /* \"#utility.yul\":2115:2696   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:2820   */\n    tag_76:\n        /* \"#utility.yul\":2789:2813   */\n      tag_78\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2789:2813   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2784:2787   */\n      dup3\n        /* \"#utility.yul\":2777:2814   */\n      mstore\n        /* \"#utility.yul\":2767:2820   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2935   */\n    tag_80:\n        /* \"#utility.yul\":2907:2928   */\n      tag_82\n        /* \"#utility.yul\":2922:2927   */\n      dup2\n        /* \"#utility.yul\":2907:2928   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2902:2905   */\n      dup3\n        /* \"#utility.yul\":2895:2929   */\n      mstore\n        /* \"#utility.yul\":2885:2935   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2941:3301   */\n    tag_84:\n        /* \"#utility.yul\":3027:3030   */\n      0x00\n        /* \"#utility.yul\":3055:3093   */\n      tag_86\n        /* \"#utility.yul\":3087:3092   */\n      dup3\n        /* \"#utility.yul\":3055:3093   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3109:3179   */\n      tag_88\n        /* \"#utility.yul\":3172:3178   */\n      dup2\n        /* \"#utility.yul\":3167:3170   */\n      dup6\n        /* \"#utility.yul\":3109:3179   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3102:3179   */\n      swap4\n      pop\n        /* \"#utility.yul\":3188:3240   */\n      tag_90\n        /* \"#utility.yul\":3233:3239   */\n      dup2\n        /* \"#utility.yul\":3228:3231   */\n      dup6\n        /* \"#utility.yul\":3221:3225   */\n      0x20\n        /* \"#utility.yul\":3214:3219   */\n      dup7\n        /* \"#utility.yul\":3210:3226   */\n      add\n        /* \"#utility.yul\":3188:3240   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3265:3294   */\n      tag_92\n        /* \"#utility.yul\":3287:3293   */\n      dup2\n        /* \"#utility.yul\":3265:3294   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3260:3263   */\n      dup5\n        /* \"#utility.yul\":3256:3295   */\n      add\n        /* \"#utility.yul\":3249:3295   */\n      swap2\n      pop\n        /* \"#utility.yul\":3031:3301   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3307:3425   */\n    tag_94:\n        /* \"#utility.yul\":3394:3418   */\n      tag_96\n        /* \"#utility.yul\":3412:3417   */\n      dup2\n        /* \"#utility.yul\":3394:3418   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3389:3392   */\n      dup3\n        /* \"#utility.yul\":3382:3419   */\n      mstore\n        /* \"#utility.yul\":3372:3425   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3431:3653   */\n    tag_30:\n        /* \"#utility.yul\":3524:3528   */\n      0x00\n        /* \"#utility.yul\":3562:3564   */\n      0x20\n        /* \"#utility.yul\":3551:3560   */\n      dup3\n        /* \"#utility.yul\":3547:3565   */\n      add\n        /* \"#utility.yul\":3539:3565   */\n      swap1\n      pop\n        /* \"#utility.yul\":3575:3646   */\n      tag_99\n        /* \"#utility.yul\":3643:3644   */\n      0x00\n        /* \"#utility.yul\":3632:3641   */\n      dup4\n        /* \"#utility.yul\":3628:3645   */\n      add\n        /* \"#utility.yul\":3619:3625   */\n      dup5\n        /* \"#utility.yul\":3575:3646   */\n      tag_76\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3529:3653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3659:4101   */\n    tag_24:\n        /* \"#utility.yul\":3808:3812   */\n      0x00\n        /* \"#utility.yul\":3846:3848   */\n      0x60\n        /* \"#utility.yul\":3835:3844   */\n      dup3\n        /* \"#utility.yul\":3831:3849   */\n      add\n        /* \"#utility.yul\":3823:3849   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:3930   */\n      tag_101\n        /* \"#utility.yul\":3927:3928   */\n      0x00\n        /* \"#utility.yul\":3916:3925   */\n      dup4\n        /* \"#utility.yul\":3912:3929   */\n      add\n        /* \"#utility.yul\":3903:3909   */\n      dup7\n        /* \"#utility.yul\":3859:3930   */\n      tag_76\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3940:4012   */\n      tag_102\n        /* \"#utility.yul\":4008:4010   */\n      0x20\n        /* \"#utility.yul\":3997:4006   */\n      dup4\n        /* \"#utility.yul\":3993:4011   */\n      add\n        /* \"#utility.yul\":3984:3990   */\n      dup6\n        /* \"#utility.yul\":3940:4012   */\n      tag_76\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4022:4094   */\n      tag_103\n        /* \"#utility.yul\":4090:4092   */\n      0x40\n        /* \"#utility.yul\":4079:4088   */\n      dup4\n        /* \"#utility.yul\":4075:4093   */\n      add\n        /* \"#utility.yul\":4066:4072   */\n      dup5\n        /* \"#utility.yul\":4022:4094   */\n      tag_94\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3813:4101   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4747   */\n    tag_32:\n        /* \"#utility.yul\":4302:4306   */\n      0x00\n        /* \"#utility.yul\":4340:4343   */\n      0x80\n        /* \"#utility.yul\":4329:4338   */\n      dup3\n        /* \"#utility.yul\":4325:4344   */\n      add\n        /* \"#utility.yul\":4317:4344   */\n      swap1\n      pop\n        /* \"#utility.yul\":4354:4425   */\n      tag_105\n        /* \"#utility.yul\":4422:4423   */\n      0x00\n        /* \"#utility.yul\":4411:4420   */\n      dup4\n        /* \"#utility.yul\":4407:4424   */\n      add\n        /* \"#utility.yul\":4398:4404   */\n      dup8\n        /* \"#utility.yul\":4354:4425   */\n      tag_76\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":4435:4507   */\n      tag_106\n        /* \"#utility.yul\":4503:4505   */\n      0x20\n        /* \"#utility.yul\":4492:4501   */\n      dup4\n        /* \"#utility.yul\":4488:4506   */\n      add\n        /* \"#utility.yul\":4479:4485   */\n      dup7\n        /* \"#utility.yul\":4435:4507   */\n      tag_76\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4517:4589   */\n      tag_107\n        /* \"#utility.yul\":4585:4587   */\n      0x40\n        /* \"#utility.yul\":4574:4583   */\n      dup4\n        /* \"#utility.yul\":4570:4588   */\n      add\n        /* \"#utility.yul\":4561:4567   */\n      dup6\n        /* \"#utility.yul\":4517:4589   */\n      tag_94\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4636:4645   */\n      dup2\n        /* \"#utility.yul\":4630:4634   */\n      dup2\n        /* \"#utility.yul\":4626:4646   */\n      sub\n        /* \"#utility.yul\":4621:4623   */\n      0x60\n        /* \"#utility.yul\":4610:4619   */\n      dup4\n        /* \"#utility.yul\":4606:4624   */\n      add\n        /* \"#utility.yul\":4599:4647   */\n      mstore\n        /* \"#utility.yul\":4664:4740   */\n      tag_108\n        /* \"#utility.yul\":4735:4739   */\n      dup2\n        /* \"#utility.yul\":4726:4732   */\n      dup5\n        /* \"#utility.yul\":4664:4740   */\n      tag_84\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4656:4740   */\n      swap1\n      pop\n        /* \"#utility.yul\":4307:4747   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4753:4963   */\n    tag_11:\n        /* \"#utility.yul\":4840:4844   */\n      0x00\n        /* \"#utility.yul\":4878:4880   */\n      0x20\n        /* \"#utility.yul\":4867:4876   */\n      dup3\n        /* \"#utility.yul\":4863:4881   */\n      add\n        /* \"#utility.yul\":4855:4881   */\n      swap1\n      pop\n        /* \"#utility.yul\":4891:4956   */\n      tag_110\n        /* \"#utility.yul\":4953:4954   */\n      0x00\n        /* \"#utility.yul\":4942:4951   */\n      dup4\n        /* \"#utility.yul\":4938:4955   */\n      add\n        /* \"#utility.yul\":4929:4935   */\n      dup5\n        /* \"#utility.yul\":4891:4956   */\n      tag_80\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4845:4963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5191   */\n    tag_38:\n        /* \"#utility.yul\":5062:5066   */\n      0x00\n        /* \"#utility.yul\":5100:5102   */\n      0x20\n        /* \"#utility.yul\":5089:5098   */\n      dup3\n        /* \"#utility.yul\":5085:5103   */\n      add\n        /* \"#utility.yul\":5077:5103   */\n      swap1\n      pop\n        /* \"#utility.yul\":5113:5184   */\n      tag_112\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5170:5179   */\n      dup4\n        /* \"#utility.yul\":5166:5183   */\n      add\n        /* \"#utility.yul\":5157:5163   */\n      dup5\n        /* \"#utility.yul\":5113:5184   */\n      tag_94\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":5067:5191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5197:5295   */\n    tag_87:\n        /* \"#utility.yul\":5248:5254   */\n      0x00\n        /* \"#utility.yul\":5282:5287   */\n      dup2\n        /* \"#utility.yul\":5276:5288   */\n      mload\n        /* \"#utility.yul\":5266:5288   */\n      swap1\n      pop\n        /* \"#utility.yul\":5255:5295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5469   */\n    tag_89:\n        /* \"#utility.yul\":5384:5395   */\n      0x00\n        /* \"#utility.yul\":5418:5424   */\n      dup3\n        /* \"#utility.yul\":5413:5416   */\n      dup3\n        /* \"#utility.yul\":5406:5425   */\n      mstore\n        /* \"#utility.yul\":5458:5462   */\n      0x20\n        /* \"#utility.yul\":5453:5456   */\n      dup3\n        /* \"#utility.yul\":5449:5463   */\n      add\n        /* \"#utility.yul\":5434:5463   */\n      swap1\n      pop\n        /* \"#utility.yul\":5396:5469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5475:5571   */\n    tag_79:\n        /* \"#utility.yul\":5512:5519   */\n      0x00\n        /* \"#utility.yul\":5541:5565   */\n      tag_116\n        /* \"#utility.yul\":5559:5564   */\n      dup3\n        /* \"#utility.yul\":5541:5565   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":5530:5565   */\n      swap1\n      pop\n        /* \"#utility.yul\":5520:5571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5577:5667   */\n    tag_83:\n        /* \"#utility.yul\":5611:5618   */\n      0x00\n        /* \"#utility.yul\":5654:5659   */\n      dup2\n        /* \"#utility.yul\":5647:5660   */\n      iszero\n        /* \"#utility.yul\":5640:5661   */\n      iszero\n        /* \"#utility.yul\":5629:5661   */\n      swap1\n      pop\n        /* \"#utility.yul\":5619:5667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5673:5799   */\n    tag_117:\n        /* \"#utility.yul\":5710:5717   */\n      0x00\n        /* \"#utility.yul\":5750:5792   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5743:5748   */\n      dup3\n        /* \"#utility.yul\":5739:5793   */\n      and\n        /* \"#utility.yul\":5728:5793   */\n      swap1\n      pop\n        /* \"#utility.yul\":5718:5799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5805:5882   */\n    tag_97:\n        /* \"#utility.yul\":5842:5849   */\n      0x00\n        /* \"#utility.yul\":5871:5876   */\n      dup2\n        /* \"#utility.yul\":5860:5876   */\n      swap1\n      pop\n        /* \"#utility.yul\":5850:5882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6195   */\n    tag_91:\n        /* \"#utility.yul\":5956:5957   */\n      0x00\n        /* \"#utility.yul\":5966:6079   */\n    tag_122:\n        /* \"#utility.yul\":5980:5986   */\n      dup4\n        /* \"#utility.yul\":5977:5978   */\n      dup2\n        /* \"#utility.yul\":5974:5987   */\n      lt\n        /* \"#utility.yul\":5966:6079   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":6065:6066   */\n      dup1\n        /* \"#utility.yul\":6060:6063   */\n      dup3\n        /* \"#utility.yul\":6056:6067   */\n      add\n        /* \"#utility.yul\":6050:6068   */\n      mload\n        /* \"#utility.yul\":6046:6047   */\n      dup2\n        /* \"#utility.yul\":6041:6044   */\n      dup5\n        /* \"#utility.yul\":6037:6048   */\n      add\n        /* \"#utility.yul\":6030:6069   */\n      mstore\n        /* \"#utility.yul\":6002:6004   */\n      0x20\n        /* \"#utility.yul\":5999:6000   */\n      dup2\n        /* \"#utility.yul\":5995:6005   */\n      add\n        /* \"#utility.yul\":5990:6005   */\n      swap1\n      pop\n        /* \"#utility.yul\":5966:6079   */\n      jump(tag_122)\n    tag_124:\n        /* \"#utility.yul\":6097:6103   */\n      dup4\n        /* \"#utility.yul\":6094:6095   */\n      dup2\n        /* \"#utility.yul\":6091:6104   */\n      gt\n        /* \"#utility.yul\":6088:6090   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":6177:6178   */\n      0x00\n        /* \"#utility.yul\":6168:6174   */\n      dup5\n        /* \"#utility.yul\":6163:6166   */\n      dup5\n        /* \"#utility.yul\":6159:6175   */\n      add\n        /* \"#utility.yul\":6152:6179   */\n      mstore\n        /* \"#utility.yul\":6088:6090   */\n    tag_125:\n        /* \"#utility.yul\":5937:6195   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6201:6303   */\n    tag_93:\n        /* \"#utility.yul\":6242:6248   */\n      0x00\n        /* \"#utility.yul\":6293:6295   */\n      0x1f\n        /* \"#utility.yul\":6289:6296   */\n      not\n        /* \"#utility.yul\":6284:6286   */\n      0x1f\n        /* \"#utility.yul\":6277:6282   */\n      dup4\n        /* \"#utility.yul\":6273:6287   */\n      add\n        /* \"#utility.yul\":6269:6297   */\n      and\n        /* \"#utility.yul\":6259:6297   */\n      swap1\n      pop\n        /* \"#utility.yul\":6249:6303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6309:6431   */\n    tag_48:\n        /* \"#utility.yul\":6382:6406   */\n      tag_128\n        /* \"#utility.yul\":6400:6405   */\n      dup2\n        /* \"#utility.yul\":6382:6406   */\n      tag_79\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":6375:6380   */\n      dup2\n        /* \"#utility.yul\":6372:6407   */\n      eq\n        /* \"#utility.yul\":6362:6364   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":6421:6422   */\n      0x00\n        /* \"#utility.yul\":6418:6419   */\n      dup1\n        /* \"#utility.yul\":6411:6423   */\n      revert\n        /* \"#utility.yul\":6362:6364   */\n    tag_129:\n        /* \"#utility.yul\":6352:6431   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6437:6559   */\n    tag_55:\n        /* \"#utility.yul\":6510:6534   */\n      tag_131\n        /* \"#utility.yul\":6528:6533   */\n      dup2\n        /* \"#utility.yul\":6510:6534   */\n      tag_97\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6503:6508   */\n      dup2\n        /* \"#utility.yul\":6500:6535   */\n      eq\n        /* \"#utility.yul\":6490:6492   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":6549:6550   */\n      0x00\n        /* \"#utility.yul\":6546:6547   */\n      dup1\n        /* \"#utility.yul\":6539:6551   */\n      revert\n        /* \"#utility.yul\":6490:6492   */\n    tag_132:\n        /* \"#utility.yul\":6480:6559   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205d1552205fd750820968b3aa1cd75b3082ed9cd96505a45b1b13bffe06b05cd364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610676806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b030667114610046578063c7783aaa14610076578063f370e8c5146100a6575b600080fd5b610060600480360381019061005b919061031b565b6100d6565b60405161006d9190610534565b60405180910390f35b610090600480360381019061008b91906103cd565b610153565b60405161009d9190610534565b60405180910390f35b6100c060048036038101906100bb919061037e565b6101f1565b6040516100cd9190610534565b60405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166342842e0e8686856040518463ffffffff1660e01b8152600401610115939291906104b1565b600060405180830381600087803b15801561012f57600080fd5b505af1158015610143573d6000803e3d6000fd5b5050505060019050949350505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663b88d4fde308786866040516020016101859190610496565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016101b394939291906104e8565b600060405180830381600087803b1580156101cd57600080fd5b505af11580156101e1573d6000803e3d6000fd5b5050505060019050949350505050565b60008373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610243919061054f565b60206040518083038186803b15801561025b57600080fd5b505afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029391906102f2565b73ffffffffffffffffffffffffffffffffffffffff161490509392505050565b6000813590506102c281610612565b92915050565b6000815190506102d781610612565b92915050565b6000813590506102ec81610629565b92915050565b60006020828403121561030457600080fd5b6000610312848285016102c8565b91505092915050565b6000806000806080858703121561033157600080fd5b600061033f878288016102b3565b9450506020610350878288016102b3565b9350506040610361878288016102b3565b9250506060610372878288016102dd565b91505092959194509250565b60008060006060848603121561039357600080fd5b60006103a1868287016102b3565b93505060206103b2868287016102b3565b92505060406103c3868287016102dd565b9150509250925092565b600080600080608085870312156103e357600080fd5b60006103f1878288016102b3565b9450506020610402878288016102b3565b9350506040610413878288016102dd565b9250506060610424878288016102b3565b91505092959194509250565b61043981610586565b82525050565b61044881610598565b82525050565b60006104598261056a565b6104638185610575565b93506104738185602086016105ce565b61047c81610601565b840191505092915050565b610490816105c4565b82525050565b60006020820190506104ab6000830184610430565b92915050565b60006060820190506104c66000830186610430565b6104d36020830185610430565b6104e06040830184610487565b949350505050565b60006080820190506104fd6000830187610430565b61050a6020830186610430565b6105176040830185610487565b8181036060830152610529818461044e565b905095945050505050565b6000602082019050610549600083018461043f565b92915050565b60006020820190506105646000830184610487565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610591826105a4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105ec5780820151818401526020810190506105d1565b838111156105fb576000848401525b50505050565b6000601f19601f8301169050919050565b61061b81610586565b811461062657600080fd5b50565b610632816105c4565b811461063d57600080fd5b5056fea26469706673582212205d1552205fd750820968b3aa1cd75b3082ed9cd96505a45b1b13bffe06b05cd364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x676 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0306671 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC7783AAA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF370E8C5 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x37E JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C2 DUP2 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D7 DUP2 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x629 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x312 DUP5 DUP3 DUP6 ADD PUSH2 0x2C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33F DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x350 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x361 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x372 DUP8 DUP3 DUP9 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3B2 DUP7 DUP3 DUP8 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3C3 DUP7 DUP3 DUP8 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x402 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x413 DUP8 DUP3 DUP9 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x424 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x439 DUP2 PUSH2 0x586 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x598 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x459 DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x463 DUP2 DUP6 PUSH2 0x575 JUMP JUMPDEST SWAP4 POP PUSH2 0x473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x47C DUP2 PUSH2 0x601 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x490 DUP2 PUSH2 0x5C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4C6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x4D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x487 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4FD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x50A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x517 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x487 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x529 DUP2 DUP5 PUSH2 0x44E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x549 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x487 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x591 DUP3 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5D1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0x586 JUMP JUMPDEST DUP2 EQ PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x632 DUP2 PUSH2 0x5C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D ISZERO MSTORE KECCAK256 0x5F 0xD7 POP DUP3 MULMOD PUSH9 0xB3AA1CD75B3082ED9C 0xD9 PUSH6 0x5A45B1B13BF INVALID MOD 0xB0 0x5C 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "251:1254:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6562:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:4",
														"type": ""
													}
												],
												"src": "152:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "353:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "363:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "385:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "372:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "372:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "363:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "401:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "401:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "331:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "339:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "347:5:4",
														"type": ""
													}
												],
												"src": "301:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "523:207:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "569:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "578:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "581:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "571:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "571:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "571:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "544:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "540:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "540:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "536:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:32:4"
															},
															"nodeType": "YulIf",
															"src": "533:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "595:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "610:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "614:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "639:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "685:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "696:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "681:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "681:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "705:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "649:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "649:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "639:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "493:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "504:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "516:6:4",
														"type": ""
													}
												],
												"src": "446:284:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "853:581:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "874:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "883:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "870:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "895:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:33:4"
															},
															"nodeType": "YulIf",
															"src": "863:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "926:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "941:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "955:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "945:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "970:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1005:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1016:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1001:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1025:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "980:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "980:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "970:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1053:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1068:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1082:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1072:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1098:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1133:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1144:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1129:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1129:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1153:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1108:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1098:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1181:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1196:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1200:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1226:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1261:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1272:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1257:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1257:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1281:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1236:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1226:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1309:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1324:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1328:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1354:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1389:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1400:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1385:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1385:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1409:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1364:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1364:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1354:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "799:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "810:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "822:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "830:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "838:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "846:6:4",
														"type": ""
													}
												],
												"src": "736:698:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1540:452:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1586:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1595:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1588:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1588:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1588:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1561:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1557:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1557:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1582:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1553:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:32:4"
															},
															"nodeType": "YulIf",
															"src": "1550:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1612:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1627:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1631:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1656:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1691:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1702:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1687:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1687:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1666:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1739:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1754:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1758:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1784:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1819:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1830:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1815:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1815:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1839:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1794:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1794:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1784:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1867:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1882:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1896:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1886:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1912:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1947:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1958:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1943:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1943:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1967:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1922:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1912:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1494:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1505:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1517:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1525:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1533:6:4",
														"type": ""
													}
												],
												"src": "1440:552:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:581:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2162:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2174:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2164:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2164:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2164:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2136:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2145:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2132:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2132:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2157:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2128:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:33:4"
															},
															"nodeType": "YulIf",
															"src": "2125:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2188:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2203:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2207:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2232:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2267:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2278:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2263:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2263:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2287:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2242:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2242:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2232:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2315:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2330:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2334:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2360:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2395:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2406:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2415:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2370:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2370:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2360:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2443:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2458:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2462:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2488:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2523:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2534:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2519:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2519:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2543:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2498:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2498:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2488:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2571:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2586:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2600:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2590:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2616:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2651:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2662:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2647:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2647:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2671:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2626:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2616:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2072:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2084:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2092:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2100:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2108:6:4",
														"type": ""
													}
												],
												"src": "1998:698:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2784:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2807:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2789:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2789:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2755:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2762:3:4",
														"type": ""
													}
												],
												"src": "2702:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2885:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2902:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2922:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2907:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2907:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2895:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2873:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2880:3:4",
														"type": ""
													}
												],
												"src": "2826:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3031:270:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3087:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3055:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3102:77:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3167:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3109:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:70:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3102:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3214:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3221:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3210:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3210:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3228:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3188:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3249:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3260:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3287:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3265:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3265:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3249:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3012:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3019:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3027:3:4",
														"type": ""
													}
												],
												"src": "2941:360:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3372:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3389:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3412:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3394:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3382:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3360:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3367:3:4",
														"type": ""
													}
												],
												"src": "3307:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3529:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3539:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3551:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3547:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3547:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3539:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3619:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3632:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3643:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3628:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3628:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3575:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3501:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3513:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3524:4:4",
														"type": ""
													}
												],
												"src": "3431:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3813:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3823:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3835:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3846:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3831:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3823:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3927:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3859:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3984:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3997:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4008:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3993:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3993:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3940:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3940:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4066:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4079:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4090:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4075:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4022:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4022:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3769:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3781:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3789:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3797:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3808:4:4",
														"type": ""
													}
												],
												"src": "3659:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4307:440:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4317:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4329:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4340:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4325:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4317:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4398:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4422:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4407:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4407:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4354:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4479:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4492:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4503:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4488:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4488:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4435:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4561:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4574:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4585:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4570:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4570:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4517:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4517:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4610:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4621:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4606:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4606:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4630:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4636:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4626:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4599:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4599:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4656:84:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4726:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4664:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:76:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4656:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4255:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4267:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4275:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4283:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4291:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4302:4:4",
														"type": ""
													}
												],
												"src": "4107:640:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4845:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4855:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4867:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4878:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4855:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4929:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4953:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4938:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4891:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4891:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4817:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4829:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4840:4:4",
														"type": ""
													}
												],
												"src": "4753:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5067:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5077:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5089:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5100:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5085:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5085:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5077:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5170:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5181:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5166:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5166:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5113:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5113:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5039:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5051:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5062:4:4",
														"type": ""
													}
												],
												"src": "4969:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5266:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5282:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5276:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5276:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5266:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5238:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5248:6:4",
														"type": ""
													}
												],
												"src": "5197:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5396:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5413:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5418:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5406:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5434:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5453:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5458:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5449:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5449:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5434:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5368:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5373:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5384:11:4",
														"type": ""
													}
												],
												"src": "5301:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5520:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5530:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5559:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5541:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5530:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5502:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5512:7:4",
														"type": ""
													}
												],
												"src": "5475:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5619:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5629:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5654:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5647:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5647:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5640:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5629:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5601:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5611:7:4",
														"type": ""
													}
												],
												"src": "5577:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5718:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5728:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5743:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5750:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5739:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5739:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5728:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5700:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5710:7:4",
														"type": ""
													}
												],
												"src": "5673:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5850:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5860:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5871:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5860:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5832:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5842:7:4",
														"type": ""
													}
												],
												"src": "5805:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5937:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5947:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5956:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5951:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6016:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6041:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6046:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6037:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6037:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6060:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6065:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6056:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6056:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6050:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6050:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6030:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6030:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5977:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5980:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5974:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5974:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5988:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5990:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5999:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6002:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5995:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5995:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5990:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5970:3:4",
																"statements": []
															},
															"src": "5966:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6113:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6163:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6168:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6159:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6159:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6152:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6152:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6152:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6094:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6097:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6091:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6091:13:4"
															},
															"nodeType": "YulIf",
															"src": "6088:2:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5919:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5924:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5929:6:4",
														"type": ""
													}
												],
												"src": "5888:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6249:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6259:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6277:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6284:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6273:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6273:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6293:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6289:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6289:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6269:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6269:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6259:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6232:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6242:6:4",
														"type": ""
													}
												],
												"src": "6201:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6352:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6409:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6418:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6421:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6411:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6411:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6411:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6375:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6400:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6382:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6382:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6372:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6372:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6365:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6365:43:4"
															},
															"nodeType": "YulIf",
															"src": "6362:2:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6345:5:4",
														"type": ""
													}
												],
												"src": "6309:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6480:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6537:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6546:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6549:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6539:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6539:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6539:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6503:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6528:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6510:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6510:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6500:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6500:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6493:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:43:4"
															},
															"nodeType": "YulIf",
															"src": "6490:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6473:5:4",
														"type": ""
													}
												],
												"src": "6437:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063b030667114610046578063c7783aaa14610076578063f370e8c5146100a6575b600080fd5b610060600480360381019061005b919061031b565b6100d6565b60405161006d9190610534565b60405180910390f35b610090600480360381019061008b91906103cd565b610153565b60405161009d9190610534565b60405180910390f35b6100c060048036038101906100bb919061037e565b6101f1565b6040516100cd9190610534565b60405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166342842e0e8686856040518463ffffffff1660e01b8152600401610115939291906104b1565b600060405180830381600087803b15801561012f57600080fd5b505af1158015610143573d6000803e3d6000fd5b5050505060019050949350505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663b88d4fde308786866040516020016101859190610496565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016101b394939291906104e8565b600060405180830381600087803b1580156101cd57600080fd5b505af11580156101e1573d6000803e3d6000fd5b5050505060019050949350505050565b60008373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610243919061054f565b60206040518083038186803b15801561025b57600080fd5b505afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029391906102f2565b73ffffffffffffffffffffffffffffffffffffffff161490509392505050565b6000813590506102c281610612565b92915050565b6000815190506102d781610612565b92915050565b6000813590506102ec81610629565b92915050565b60006020828403121561030457600080fd5b6000610312848285016102c8565b91505092915050565b6000806000806080858703121561033157600080fd5b600061033f878288016102b3565b9450506020610350878288016102b3565b9350506040610361878288016102b3565b9250506060610372878288016102dd565b91505092959194509250565b60008060006060848603121561039357600080fd5b60006103a1868287016102b3565b93505060206103b2868287016102b3565b92505060406103c3868287016102dd565b9150509250925092565b600080600080608085870312156103e357600080fd5b60006103f1878288016102b3565b9450506020610402878288016102b3565b9350506040610413878288016102dd565b9250506060610424878288016102b3565b91505092959194509250565b61043981610586565b82525050565b61044881610598565b82525050565b60006104598261056a565b6104638185610575565b93506104738185602086016105ce565b61047c81610601565b840191505092915050565b610490816105c4565b82525050565b60006020820190506104ab6000830184610430565b92915050565b60006060820190506104c66000830186610430565b6104d36020830185610430565b6104e06040830184610487565b949350505050565b60006080820190506104fd6000830187610430565b61050a6020830186610430565b6105176040830185610487565b8181036060830152610529818461044e565b905095945050505050565b6000602082019050610549600083018461043f565b92915050565b60006020820190506105646000830184610487565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610591826105a4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105ec5780820151818401526020810190506105d1565b838111156105fb576000848401525b50505050565b6000601f19601f8301169050919050565b61061b81610586565b811461062657600080fd5b50565b610632816105c4565b811461063d57600080fd5b5056fea26469706673582212205d1552205fd750820968b3aa1cd75b3082ed9cd96505a45b1b13bffe06b05cd364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0306671 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC7783AAA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF370E8C5 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x37E JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C2 DUP2 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D7 DUP2 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x629 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x312 DUP5 DUP3 DUP6 ADD PUSH2 0x2C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33F DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x350 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x361 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x372 DUP8 DUP3 DUP9 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3B2 DUP7 DUP3 DUP8 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3C3 DUP7 DUP3 DUP8 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x402 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x413 DUP8 DUP3 DUP9 ADD PUSH2 0x2DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x424 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x439 DUP2 PUSH2 0x586 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x598 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x459 DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x463 DUP2 DUP6 PUSH2 0x575 JUMP JUMPDEST SWAP4 POP PUSH2 0x473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x47C DUP2 PUSH2 0x601 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x490 DUP2 PUSH2 0x5C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4C6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x4D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x487 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4FD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x50A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x430 JUMP JUMPDEST PUSH2 0x517 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x487 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x529 DUP2 DUP5 PUSH2 0x44E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x549 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x487 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x591 DUP3 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5D1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0x586 JUMP JUMPDEST DUP2 EQ PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x632 DUP2 PUSH2 0x5C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D ISZERO MSTORE KECCAK256 0x5F 0xD7 POP DUP3 MULMOD PUSH9 0xB3AA1CD75B3082ED9C 0xD9 PUSH6 0x5A45B1B13BF INVALID MOD 0xB0 0x5C 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "251:1254:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1185:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;965:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;687:272;848:4;872:12;864:38;;;903:7;912:10;924:6;864:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:4;941:11;;687:272;;;;;;:::o;1185:318::-;1359:4;1383:12;1375:38;;;1422:4;1429:10;1441:6;1460:12;1449:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;1375:99;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:4;1485:11;;1185:318;;;;;;:::o;965:214::-;1100:4;1166:6;1123:49;;1131:12;1123:29;;;1153:8;1123:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;1116:56;;965:214;;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:139::-;347:5;385:6;372:20;363:29;;401:33;428:5;401:33;:::i;:::-;353:87;;;;:::o;446:284::-;516:6;565:2;553:9;544:7;540:23;536:32;533:2;;;581:1;578;571:12;533:2;624:1;649:64;705:7;696:6;685:9;681:22;649:64;:::i;:::-;639:74;;595:128;523:207;;;;:::o;736:698::-;822:6;830;838;846;895:3;883:9;874:7;870:23;866:33;863:2;;;912:1;909;902:12;863:2;955:1;980:53;1025:7;1016:6;1005:9;1001:22;980:53;:::i;:::-;970:63;;926:117;1082:2;1108:53;1153:7;1144:6;1133:9;1129:22;1108:53;:::i;:::-;1098:63;;1053:118;1210:2;1236:53;1281:7;1272:6;1261:9;1257:22;1236:53;:::i;:::-;1226:63;;1181:118;1338:2;1364:53;1409:7;1400:6;1389:9;1385:22;1364:53;:::i;:::-;1354:63;;1309:118;853:581;;;;;;;:::o;1440:552::-;1517:6;1525;1533;1582:2;1570:9;1561:7;1557:23;1553:32;1550:2;;;1598:1;1595;1588:12;1550:2;1641:1;1666:53;1711:7;1702:6;1691:9;1687:22;1666:53;:::i;:::-;1656:63;;1612:117;1768:2;1794:53;1839:7;1830:6;1819:9;1815:22;1794:53;:::i;:::-;1784:63;;1739:118;1896:2;1922:53;1967:7;1958:6;1947:9;1943:22;1922:53;:::i;:::-;1912:63;;1867:118;1540:452;;;;;:::o;1998:698::-;2084:6;2092;2100;2108;2157:3;2145:9;2136:7;2132:23;2128:33;2125:2;;;2174:1;2171;2164:12;2125:2;2217:1;2242:53;2287:7;2278:6;2267:9;2263:22;2242:53;:::i;:::-;2232:63;;2188:117;2344:2;2370:53;2415:7;2406:6;2395:9;2391:22;2370:53;:::i;:::-;2360:63;;2315:118;2472:2;2498:53;2543:7;2534:6;2523:9;2519:22;2498:53;:::i;:::-;2488:63;;2443:118;2600:2;2626:53;2671:7;2662:6;2651:9;2647:22;2626:53;:::i;:::-;2616:63;;2571:118;2115:581;;;;;;;:::o;2702:118::-;2789:24;2807:5;2789:24;:::i;:::-;2784:3;2777:37;2767:53;;:::o;2826:109::-;2907:21;2922:5;2907:21;:::i;:::-;2902:3;2895:34;2885:50;;:::o;2941:360::-;3027:3;3055:38;3087:5;3055:38;:::i;:::-;3109:70;3172:6;3167:3;3109:70;:::i;:::-;3102:77;;3188:52;3233:6;3228:3;3221:4;3214:5;3210:16;3188:52;:::i;:::-;3265:29;3287:6;3265:29;:::i;:::-;3260:3;3256:39;3249:46;;3031:270;;;;;:::o;3307:118::-;3394:24;3412:5;3394:24;:::i;:::-;3389:3;3382:37;3372:53;;:::o;3431:222::-;3524:4;3562:2;3551:9;3547:18;3539:26;;3575:71;3643:1;3632:9;3628:17;3619:6;3575:71;:::i;:::-;3529:124;;;;:::o;3659:442::-;3808:4;3846:2;3835:9;3831:18;3823:26;;3859:71;3927:1;3916:9;3912:17;3903:6;3859:71;:::i;:::-;3940:72;4008:2;3997:9;3993:18;3984:6;3940:72;:::i;:::-;4022;4090:2;4079:9;4075:18;4066:6;4022:72;:::i;:::-;3813:288;;;;;;:::o;4107:640::-;4302:4;4340:3;4329:9;4325:19;4317:27;;4354:71;4422:1;4411:9;4407:17;4398:6;4354:71;:::i;:::-;4435:72;4503:2;4492:9;4488:18;4479:6;4435:72;:::i;:::-;4517;4585:2;4574:9;4570:18;4561:6;4517:72;:::i;:::-;4636:9;4630:4;4626:20;4621:2;4610:9;4606:18;4599:48;4664:76;4735:4;4726:6;4664:76;:::i;:::-;4656:84;;4307:440;;;;;;;:::o;4753:210::-;4840:4;4878:2;4867:9;4863:18;4855:26;;4891:65;4953:1;4942:9;4938:17;4929:6;4891:65;:::i;:::-;4845:118;;;;:::o;4969:222::-;5062:4;5100:2;5089:9;5085:18;5077:26;;5113:71;5181:1;5170:9;5166:17;5157:6;5113:71;:::i;:::-;5067:124;;;;:::o;5197:98::-;5248:6;5282:5;5276:12;5266:22;;5255:40;;;:::o;5301:168::-;5384:11;5418:6;5413:3;5406:19;5458:4;5453:3;5449:14;5434:29;;5396:73;;;;:::o;5475:96::-;5512:7;5541:24;5559:5;5541:24;:::i;:::-;5530:35;;5520:51;;;:::o;5577:90::-;5611:7;5654:5;5647:13;5640:21;5629:32;;5619:48;;;:::o;5673:126::-;5710:7;5750:42;5743:5;5739:54;5728:65;;5718:81;;;:::o;5805:77::-;5842:7;5871:5;5860:16;;5850:32;;;:::o;5888:307::-;5956:1;5966:113;5980:6;5977:1;5974:13;5966:113;;;6065:1;6060:3;6056:11;6050:18;6046:1;6041:3;6037:11;6030:39;6002:2;5999:1;5995:10;5990:15;;5966:113;;;6097:6;6094:1;6091:13;6088:2;;;6177:1;6168:6;6163:3;6159:16;6152:27;6088:2;5937:258;;;;:::o;6201:102::-;6242:6;6293:2;6289:7;6284:2;6277:5;6273:14;6269:28;6259:38;;6249:54;;;:::o;6309:122::-;6382:24;6400:5;6382:24;:::i;:::-;6375:5;6372:35;6362:2;;6421:1;6418;6411:12;6362:2;6352:79;:::o;6437:122::-;6510:24;6528:5;6510:24;:::i;:::-;6503:5;6500:35;6490:2;;6549:1;6546;6539:12;6490:2;6480:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "330800",
								"executionCost": "368",
								"totalCost": "331168"
							},
							"external": {
								"isOwner(address,address,uint256)": "infinite",
								"transferNFT(address,address,address,uint256)": "infinite",
								"wrapAirdropReceiver(address,address,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 1505,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d1552205fd750820968b3aa1cd75b3082ed9cd96505a45b1b13bffe06b05cd364736f6c63430008040033",
									".code": [
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "B0306671"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "C7783AAA"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "F370E8C5"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 1505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 848,
											"end": 852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 864,
											"end": 902,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 902,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 864,
											"end": 902,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 903,
											"end": 910,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 912,
											"end": 922,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 864,
											"end": 931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 864,
											"end": 931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 952,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 941,
											"end": 952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 959,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 1422,
											"end": 1426,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1439,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1485,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1503,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1172,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 1153,
											"end": 1161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1172,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1179,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 215,
											"end": 295,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 215,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 215,
											"end": 295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 215,
											"end": 295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 215,
											"end": 295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 301,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 347,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 372,
											"end": 392,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 363,
											"end": 392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 392,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 353,
											"end": 440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 353,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 353,
											"end": 440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 730,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 446,
											"end": 730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 544,
											"end": 551,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 540,
											"end": 563,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 536,
											"end": 568,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 533,
											"end": 535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 533,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 533,
											"end": 535,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 581,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 571,
											"end": 583,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 533,
											"end": 535,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 533,
											"end": 535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 705,
											"end": 712,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 681,
											"end": 703,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 649,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 649,
											"end": 713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 649,
											"end": 713,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 649,
											"end": 713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 713,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 595,
											"end": 723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 730,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 523,
											"end": 730,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 523,
											"end": 730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 730,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 1434,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 736,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 822,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 838,
											"end": 844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 883,
											"end": 892,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 874,
											"end": 881,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 870,
											"end": 893,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 866,
											"end": 899,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 863,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 863,
											"end": 865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 912,
											"end": 913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 914,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 865,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 863,
											"end": 865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 955,
											"end": 956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1025,
											"end": 1032,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1014,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 980,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 980,
											"end": 1033,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 1033,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 980,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1033,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 926,
											"end": 1043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1129,
											"end": 1151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1108,
											"end": 1161,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1161,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1108,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1161,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1281,
											"end": 1288,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1434,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1992,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1440,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1584,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1580,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1600,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1700,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1666,
											"end": 1719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1666,
											"end": 1719,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1666,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1719,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1794,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1794,
											"end": 1847,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1794,
											"end": 1847,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1794,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1847,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1967,
											"end": 1974,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1992,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1992,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1992,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1992,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1998,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1998,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2160,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2145,
											"end": 2154,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2132,
											"end": 2155,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2161,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2276,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2242,
											"end": 2295,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2242,
											"end": 2295,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2242,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2295,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2370,
											"end": 2423,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2423,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2370,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2423,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2498,
											"end": 2551,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2498,
											"end": 2551,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2498,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2551,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2602,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2626,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2671,
											"end": 2678,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2668,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2660,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2669,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2626,
											"end": 2679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2679,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2626,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 2820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 2820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 2820,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2935,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2826,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2922,
											"end": 2927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2907,
											"end": 2928,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 2928,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2907,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2935,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2941,
											"end": 3301,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2941,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3087,
											"end": 3092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3055,
											"end": 3093,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3093,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3055,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3172,
											"end": 3178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3170,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3109,
											"end": 3179,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3109,
											"end": 3179,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3109,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3179,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3231,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3219,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3188,
											"end": 3240,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3188,
											"end": 3240,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3188,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3287,
											"end": 3293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3265,
											"end": 3294,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3265,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3265,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3307,
											"end": 3425,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3307,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3425,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3431,
											"end": 3653,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3431,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3560,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3641,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3575,
											"end": 3646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3646,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3575,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3653,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3653,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3653,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3659,
											"end": 4101,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3659,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3848,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3835,
											"end": 3844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3927,
											"end": 3928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3925,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3859,
											"end": 3930,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3859,
											"end": 3930,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3859,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3984,
											"end": 3990,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3940,
											"end": 4012,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 4012,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3940,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4022,
											"end": 4094,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4094,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4022,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4101,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4101,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 4101,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4107,
											"end": 4747,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4107,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4422,
											"end": 4423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4404,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4354,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4435,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4503,
											"end": 4505,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4435,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4435,
											"end": 4507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4435,
											"end": 4507,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4435,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4517,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4585,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4574,
											"end": 4583,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4561,
											"end": 4567,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4517,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4517,
											"end": 4589,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4517,
											"end": 4589,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4517,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4646,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4621,
											"end": 4623,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4619,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4735,
											"end": 4739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4732,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4664,
											"end": 4740,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4664,
											"end": 4740,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4664,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4656,
											"end": 4740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4747,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4753,
											"end": 4963,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4753,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4876,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4881,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4953,
											"end": 4954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4955,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4891,
											"end": 4956,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4891,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4891,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4963,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4963,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4963,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4969,
											"end": 5191,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4969,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5066,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5098,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5179,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5197,
											"end": 5295,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5197,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5301,
											"end": 5469,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5301,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5413,
											"end": 5416,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5425,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5462,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5434,
											"end": 5463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5434,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5469,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5469,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5469,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5571,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5475,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5512,
											"end": 5519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5559,
											"end": 5564,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5541,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5541,
											"end": 5565,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5541,
											"end": 5565,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5541,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5571,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5577,
											"end": 5667,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5577,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5611,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5640,
											"end": 5661,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5667,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5667,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5673,
											"end": 5799,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5673,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5792,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5743,
											"end": 5748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5793,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5799,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5799,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5805,
											"end": 5882,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5805,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 5876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 5876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5882,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5888,
											"end": 6195,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5888,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5977,
											"end": 5978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5974,
											"end": 5987,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6060,
											"end": 6063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6041,
											"end": 6044,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6037,
											"end": 6048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5995,
											"end": 6005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5966,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6104,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6174,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6163,
											"end": 6166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6152,
											"end": 6179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6195,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6201,
											"end": 6303,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6201,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6289,
											"end": 6296,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6286,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6277,
											"end": 6282,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6273,
											"end": 6287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6269,
											"end": 6297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6303,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6309,
											"end": 6431,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 6309,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6400,
											"end": 6405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6375,
											"end": 6380,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6372,
											"end": 6407,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6423,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6431,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6437,
											"end": 6559,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 6437,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6528,
											"end": 6533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6510,
											"end": 6534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6534,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6510,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6503,
											"end": 6508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6500,
											"end": 6535,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6490,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6490,
											"end": 6492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6539,
											"end": 6551,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6490,
											"end": 6492,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6490,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6480,
											"end": 6559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6480,
											"end": 6559,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isOwner(address,address,uint256)": "f370e8c5",
							"transferNFT(address,address,address,uint256)": "b0306671",
							"wrapAirdropReceiver(address,address,uint256,address)": "c7783aaa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"wrapAirdropReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Provides logic to transfer ERC721\",\"kind\":\"dev\",\"methods\":{\"transferNFT(address,address,address,uint256)\":{\"details\":\"Transfers ERC721 `_nftId` handled by the contract `_nftContract` from `_sender` to `_recipient`\",\"params\":{\"_nftContract\":\"- ERC721 contract\",\"_nftId\":\"- ERC721 id\",\"_recipient\":\"- The new owner of the ERC721\",\"_sender\":\"- The current owner of the ERC721\"},\"returns\":{\"_0\":\"true if successfully transferred, false otherwise\"}}},\"title\":\"ERC721Wrapper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721Wrapper.sol\":\"ERC721Wrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/ERC721Wrapper.sol\":{\"keccak256\":\"0x9d930d689c3ea8e5ed7c36dfa76a61ed5c1791f0b4c5b42d4404eeaeb203e979\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da0529030edcf087a2ab380b7cb6751f497daa5fb2dc8d1e7508c7a31296d157\",\"dweb:/ipfs/QmcBYfPmt3NmY166TtqcnTL7JpbwxheNtjkUFnJvqf8Yws\"]},\"contracts/interfaces/INftWrapper.sol\":{\"keccak256\":\"0x7440c44808528e967386521a0b934b8d7159c37c4ee033a08bb9e4128b023a66\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://42cc276ee0ab407582365e0beac28fcbe49e06acb6432435285f23f6f10eb517\",\"dweb:/ipfs/Qmdzq5pqqNCdh1JBsZhzU1pAQh6Xvnhccek2LWJvyemHEH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/INftWrapper.sol": {
				"INftWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferNFT",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_nftId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								}
							],
							"name": "wrapAirdropReceiver",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "NFTfi",
						"details": "Interface for NFT Wrappers.",
						"kind": "dev",
						"methods": {},
						"title": "INftTypeRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner(address,address,uint256)": "f370e8c5",
							"transferNFT(address,address,address,uint256)": "b0306671",
							"wrapAirdropReceiver(address,address,uint256,address)": "c7783aaa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"wrapAirdropReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Interface for NFT Wrappers.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"INftTypeRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INftWrapper.sol\":\"INftWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INftWrapper.sol\":{\"keccak256\":\"0x7440c44808528e967386521a0b934b8d7159c37c4ee033a08bb9e4128b023a66\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://42cc276ee0ab407582365e0beac28fcbe49e06acb6432435285f23f6f10eb517\",\"dweb:/ipfs/Qmdzq5pqqNCdh1JBsZhzU1pAQh6Xvnhccek2LWJvyemHEH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							127
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 128,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 127,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								127
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:0"
									},
									"scope": 115,
									"src": "3495:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:0"
									},
									"scope": 115,
									"src": "4062:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4482:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:0"
									},
									"scope": 115,
									"src": "4437:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4718:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:0"
									},
									"scope": 115,
									"src": "4657:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4911:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4967:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:0"
									},
									"scope": 115,
									"src": "4885:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4725:0",
							"usedErrors": []
						}
					],
					"src": "108:4868:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							127
						]
					},
					"id": 128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:1",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "IERC165",
							"nameLocation": "415:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "801:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 120,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:1"
									},
									"scope": 127,
									"src": "774:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 128,
							"src": "405:447:1",
							"usedErrors": []
						}
					],
					"src": "100:753:1"
				},
				"id": 1
			},
			"contracts/ERC721Wrapper.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721Wrapper.sol",
					"exportedSymbols": {
						"ERC721Wrapper": [
							217
						],
						"IERC165": [
							127
						],
						"IERC721": [
							115
						],
						"INftWrapper": [
							258
						]
					},
					"id": 218,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 129,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 218,
							"sourceUnit": 116,
							"src": "61:58:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/INftWrapper.sol",
							"file": "./interfaces/INftWrapper.sol",
							"id": 131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 218,
							"sourceUnit": 259,
							"src": "120:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 133,
										"name": "INftWrapper",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 258,
										"src": "277:11:2"
									},
									"id": 134,
									"nodeType": "InheritanceSpecifier",
									"src": "277:11:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "160:90:2",
								"text": " @title ERC721Wrapper\n @author NFTfi\n @dev Provides logic to transfer ERC721"
							},
							"fullyImplemented": true,
							"id": 217,
							"linearizedBaseContracts": [
								217,
								258
							],
							"name": "ERC721Wrapper",
							"nameLocation": "260:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										233
									],
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "854:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "912:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "_nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "924:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 150,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "872:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 149,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "864:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "864:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$115",
																"typeString": "contract IERC721"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "864:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "864:67:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "948:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 148,
												"id": 159,
												"nodeType": "Return",
												"src": "941:11:2"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "295:387:2",
										"text": " @dev Transfers ERC721 `_nftId` handled by the contract `_nftContract` from `_sender` to `_recipient`\n @param _sender - The current owner of the ERC721\n @param _recipient - The new owner of the ERC721\n @param _nftContract - ERC721 contract\n @param _nftId - ERC721 id\n @return true if successfully transferred, false otherwise"
									},
									"functionSelector": "b0306671",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFT",
									"nameLocation": "696:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "830:8:2"
									},
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "725:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "717:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "750:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "742:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "778:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "770:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_nftId",
												"nameLocation": "808:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "800:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:113:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "848:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:6:2"
									},
									"scope": 217,
									"src": "687:272:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										244
									],
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1106:73:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 177,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1153:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 174,
																		"name": "_nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "1131:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 173,
																	"name": "IERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1123:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1123:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$115",
																	"typeString": "contract IERC721"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 48,
															"src": "1123:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view external returns (address)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1123:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 179,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1166:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1123:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 172,
												"id": 181,
												"nodeType": "Return",
												"src": "1116:56:2"
											}
										]
									},
									"functionSelector": "f370e8c5",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "974:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1082:8:2"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "999:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "991:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "1023:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1015:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1053:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1045:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:86:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1100:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:6:2"
									},
									"scope": 217,
									"src": "965:214:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										257
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1365:138:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 203,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1422:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721Wrapper_$217",
																		"typeString": "contract ERC721Wrapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC721Wrapper_$217",
																		"typeString": "contract ERC721Wrapper"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1414:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1414:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1414:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1429:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 206,
															"name": "_nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1441:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 209,
																	"name": "_beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "1460:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 207,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1449:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1449:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1449:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 198,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "1383:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 197,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1375:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$115",
																"typeString": "contract IERC721"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 60,
														"src": "1375:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "1375:99:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 196,
												"id": 214,
												"nodeType": "Return",
												"src": "1485:11:2"
											}
										]
									},
									"functionSelector": "c7783aaa",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAirdropReceiver",
									"nameLocation": "1194:19:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1341:8:2"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "1231:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1223:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "1259:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1251:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_nftId",
												"nameLocation": "1289:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1281:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1313:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1305:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:118:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1359:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1359:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:6:2"
									},
									"scope": 217,
									"src": "1185:318:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 218,
							"src": "251:1254:2",
							"usedErrors": []
						}
					],
					"src": "37:1468:2"
				},
				"id": 2
			},
			"contracts/interfaces/INftWrapper.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/INftWrapper.sol",
					"exportedSymbols": {
						"INftWrapper": [
							258
						]
					},
					"id": 259,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 219,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 220,
								"nodeType": "StructuredDocumentation",
								"src": "62:87:3",
								"text": " @title INftTypeRegistry\n @author NFTfi\n @dev Interface for NFT Wrappers."
							},
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "INftWrapper",
							"nameLocation": "160:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b0306671",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFT",
									"nameLocation": "187:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "216:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "208:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "238:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "230:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "258:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "250:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "287:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "279:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:102:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "319:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "319:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:6:3"
									},
									"scope": 258,
									"src": "178:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f370e8c5",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "340:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "365:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "357:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "388:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "380:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "417:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "409:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:83:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "454:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "454:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:6:3"
									},
									"scope": 258,
									"src": "331:129:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c7783aaa",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAirdropReceiver",
									"nameLocation": "475:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "512:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "504:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "540:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "532:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_nftId",
												"nameLocation": "570:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "562:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "594:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "586:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:118:3"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "631:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:6:3"
									},
									"scope": 258,
									"src": "466:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 259,
							"src": "150:489:3",
							"usedErrors": []
						}
					],
					"src": "38:601:3"
				},
				"id": 3
			}
		}
	}
}